{
  "__ZN6spdlog5sinks18rotating_file_sinkINSt3__15mutexEEC2ENS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEmmbRKNS_19file_event_handlersE": [
    "(unique, 0xef80, 8) COPY (register, 0x28, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x28, 8) COPY (register, 0x20, 8)",
    "(unique, 0xef80, 8) COPY (register, 0xb8, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0xb0, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0xa8, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0xa0, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x200, 1) INT_LESS (register, 0x20, 8) , (const, 0x58, 8)",
    "(register, 0x20b, 1) INT_SBORROW (register, 0x20, 8) , (const, 0x58, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x58, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0xb8, 8) COPY (register, 0x88, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffd4, 8)",
    "(unique, 0x5480, 4) COPY (register, 0x80, 4)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5480, 4)",
    "(register, 0xa8, 8) COPY (register, 0x8, 8)",
    "(register, 0xb0, 8) COPY (register, 0x10, 8)",
    "(register, 0xa0, 8) COPY (register, 0x30, 8)",
    "(register, 0x18, 8) COPY (register, 0x38, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x1079, 8)",
    " ---  CALL (ram, 0xb60, 8)",
    "(register, 0x0, 8) COPY (ram, 0x3688, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0x0, 8) , (const, 0x10, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x0, 8) , (const, 0x10, 8)",
    "(register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x10, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x0, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x0, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0x5500, 8) COPY (register, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (register, 0x18, 8) , (unique, 0x5500, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x58, 8)",
    "(register, 0x0, 8) COPY (unique, 0x3100, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffc8, 8)",
    "(unique, 0x5500, 8) COPY (register, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5500, 8)",
    "(unique, 0x3800, 8) INT_ADD (const, 0x10, 8) , (register, 0xa0, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)",
    "(register, 0x0, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x68, 8)",
    "(unique, 0x5500, 8) COPY (register, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5500, 8)",
    "(unique, 0x5580, 16) LOAD (const, 0x1b1, 4) , (register, 0xa0, 8)",
    "(unique, 0x7c980, 16) COPY (unique, 0x5580, 16)",
    "(register, 0x1200, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0x0, 4)",
    "(register, 0x1204, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0x4, 4)",
    "(register, 0x1208, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0x8, 4)",
    "(register, 0x120c, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0xc, 4)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x58, 8)",
    "(unique, 0x5580, 16) COPY (register, 0x1200, 16)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5580, 16)",
    "(register, 0x1200, 4) INT_XOR (register, 0x1200, 4) , (register, 0x1200, 4)",
    "(register, 0x1204, 4) INT_XOR (register, 0x1204, 4) , (register, 0x1204, 4)",
    "(register, 0x1208, 4) INT_XOR (register, 0x1208, 4) , (register, 0x1208, 4)",
    "(register, 0x120c, 4) INT_XOR (register, 0x120c, 4) , (register, 0x120c, 4)",
    "(unique, 0x5580, 16) COPY (register, 0x1200, 16)",
    " ---  STORE (const, 0x1b1, 4) , (register, 0xa0, 8) , (unique, 0x5580, 16)",
    "(unique, 0x3800, 8) INT_ADD (const, 0x10, 8) , (register, 0xa0, 8)",
    "(unique, 0x5800, 8) COPY (const, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5800, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x70, 8)",
    "(unique, 0x5500, 8) COPY (register, 0xb0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5500, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x78, 8)",
    "(unique, 0x5500, 8) COPY (register, 0xa8, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5500, 8)",
    "(register, 0x0, 8) COPY (const, 0xa00000005, 8)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x90, 8)",
    "(unique, 0x5500, 8) COPY (register, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (unique, 0x5500, 8)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xc0, 8)",
    "(register, 0x38, 8) COPY (unique, 0x3200, 8)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x98, 8)",
    "(unique, 0x5580, 16) COPY (register, 0x1200, 16)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (unique, 0x5580, 16)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xa8, 8)",
    "(unique, 0x5580, 16) COPY (register, 0x1200, 16)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (unique, 0x5580, 16)",
    "(register, 0x30, 8) COPY (register, 0xb8, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x10e8, 8)",
    " ---  CALL (ram, 0x2880, 8)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x90, 8)",
    "(register, 0xb8, 8) COPY (unique, 0x3200, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x56080, 8) INT_AND (register, 0xb0, 8) , (register, 0xb0, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x56080, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x1167, 8) , (register, 0x206, 1)",
    "(register, 0x200, 1) INT_LESS (register, 0xa8, 8) , (const, 0x30d41, 8)",
    "(register, 0x20b, 1) INT_SBORROW (register, 0xa8, 8) , (const, 0x30d41, 8)",
    "(unique, 0x25580, 8) INT_SUB (register, 0xa8, 8) , (const, 0x30d41, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x25580, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x25580, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x25580, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0xca80, 1) BOOL_NEGATE (register, 0x200, 1)",
    " ---  CBRANCH (ram, 0x1182, 8) , (unique, 0xca80, 1)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffb0, 8)",
    "(register, 0x38, 8) COPY (unique, 0x3100, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffc8, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x30, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x110e, 8)",
    " ---  CALL (ram, 0x60b0, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffb0, 8)",
    "(register, 0x30, 8) COPY (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (register, 0xb8, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(register, 0x10, 4) INT_XOR (register, 0x10, 4) , (register, 0x10, 4)",
    "(register, 0x10, 8) INT_ZEXT (register, 0x10, 4)",
    "(register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)",
    "(unique, 0x13400, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 4)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x111c, 8)",
    " ---  CALL (ram, 0x280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffb0, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0xc000, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(unique, 0x55980, 1) INT_AND (unique, 0xc000, 1) , (const, 0x1, 1)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x55980, 1) , (const, 0x0, 1)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x55980, 1) , (const, 0x0, 1)",
    "(unique, 0x13400, 1) INT_AND (unique, 0x55980, 1) , (const, 0xff, 1)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 1)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x112b, 8) , (register, 0x206, 1)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffc0, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x112b, 8)",
    " ---  CALL (ram, 0x6108, 8)",
    "(register, 0x38, 8) COPY (register, 0xb8, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x1133, 8)",
    " ---  CALL (ram, 0x8e0, 8)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x80, 8)",
    "(unique, 0x5500, 8) COPY (register, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (unique, 0x5500, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffd4, 8)",
    "(unique, 0xc000, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x200, 1) INT_LESS (unique, 0xc000, 1) , (const, 0x0, 1)",
    "(unique, 0xc000, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x20b, 1) INT_SBORROW (unique, 0xc000, 1) , (const, 0x0, 1)",
    "(unique, 0xc000, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(unique, 0x25280, 1) INT_SUB (unique, 0xc000, 1) , (const, 0x0, 1)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x25280, 1) , (const, 0x0, 1)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x25280, 1) , (const, 0x0, 1)",
    "(unique, 0x13400, 1) INT_AND (unique, 0x25280, 1) , (const, 0xff, 1)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 1)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x1158, 8) , (register, 0x206, 1)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x56080, 8) INT_AND (register, 0x0, 8) , (register, 0x0, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x56080, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x1158, 8) , (register, 0x206, 1)",
    "(register, 0x38, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x114d, 8)",
    " ---  CALL (ram, 0x1380, 8)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x80, 8)",
    "(unique, 0x5800, 8) COPY (const, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (unique, 0x5800, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x58, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x58, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x58, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0xa0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0xa8, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0xb0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0xb8, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  RETURN (register, 0x288, 8)",
    "(register, 0x30, 8) COPY (const, 0x350d, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffff80, 8)",
    "(register, 0x38, 8) COPY (unique, 0x3100, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x1177, 8)",
    " ---  CALL (ram, 0x5a0, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffff80, 8)",
    "(register, 0x38, 8) COPY (unique, 0x3100, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x1180, 8)",
    " ---  CALL (ram, 0x6010, 8)",
    " ---  BRANCH (ram, 0x119b, 8)",
    "(register, 0x30, 8) COPY (const, 0x3544, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffff98, 8)",
    "(register, 0x38, 8) COPY (unique, 0x3100, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x1192, 8)",
    " ---  CALL (ram, 0x5a0, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffff98, 8)",
    "(register, 0x38, 8) COPY (unique, 0x3100, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x119b, 8)",
    " ---  CALL (ram, 0x6010, 8)",
    " ---  CALLOTHER (const, 0x4d, 4)",
    " ---  BRANCH (ram, 0x119b, 8)"
  ],
  "__ZN6spdlog5sinks18rotating_file_sinkINS_7details10null_mutexEEC1ENSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEEmmbRKNS_19file_event_handlersE": [
    "(unique, 0xef80, 8) COPY (register, 0x28, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x28, 8) COPY (register, 0x20, 8)",
    "(register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  BRANCH (ram, 0x1980, 8)"
  ],
  "__ZN6spdlog7details11file_helperC2ERKNS_19file_event_handlersE": [
    "(unique, 0xef80, 8) COPY (register, 0x28, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x28, 8) COPY (register, 0x20, 8)",
    "(unique, 0xef80, 8) COPY (register, 0xb0, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x18, 8) COPY (register, 0x38, 8)",
    "(register, 0x0, 8) COPY (const, 0xa00000005, 8)",
    "(unique, 0x5500, 8) COPY (register, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (unique, 0x5500, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0x38, 8) , (const, 0x30, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x38, 8) , (const, 0x30, 8)",
    "(register, 0x38, 8) INT_ADD (register, 0x38, 8) , (const, 0x30, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x38, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x38, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x38, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x1200, 4) INT_XOR (register, 0x1200, 4) , (register, 0x1200, 4)",
    "(register, 0x1204, 4) INT_XOR (register, 0x1204, 4) , (register, 0x1204, 4)",
    "(register, 0x1208, 4) INT_XOR (register, 0x1208, 4) , (register, 0x1208, 4)",
    "(register, 0x120c, 4) INT_XOR (register, 0x120c, 4) , (register, 0x120c, 4)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x8, 8)",
    "(unique, 0x5580, 16) COPY (register, 0x1200, 16)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5580, 16)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x18, 8)",
    "(unique, 0x5580, 16) COPY (register, 0x1200, 16)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5580, 16)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x2b, 8)",
    " ---  CALL (ram, 0x2880, 8)",
    "(register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0xb0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  RETURN (register, 0x288, 8)"
  ],
  "__ZN6spdlog5sinks18rotating_file_sinkINSt3__15mutexEE12rename_file_ERKNS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEESC_": [
    "(unique, 0xef80, 8) COPY (register, 0x28, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x28, 8) COPY (register, 0x20, 8)",
    "(unique, 0xef80, 8) COPY (register, 0xb0, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x18, 8) COPY (register, 0x10, 8)",
    "(register, 0xb0, 8) COPY (register, 0x30, 8)",
    "(register, 0x38, 8) COPY (register, 0x10, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x1905, 8)",
    " ---  CALL (ram, 0x6058, 8)",
    "(register, 0x38, 8) COPY (register, 0xb0, 8)",
    "(register, 0x30, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x1910, 8)",
    " ---  CALL (ram, 0x6060, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x55f80, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x55f80, 4) , (const, 0x0, 4)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x55f80, 4) , (const, 0x0, 4)",
    "(unique, 0x13400, 4) INT_AND (unique, 0x55f80, 4) , (const, 0xff, 4)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 4)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x0, 1) COPY (register, 0x206, 1)",
    "(register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0xb0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  RETURN (register, 0x288, 8)"
  ],
  "__ZNSt3__15mutex6unlockEv": [],
  "__ZN6spdlog19file_event_handlersC2ERKS0_": [
    "(unique, 0xef80, 8) COPY (register, 0x28, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x28, 8) COPY (register, 0x20, 8)",
    "(unique, 0xef80, 8) COPY (register, 0xb8, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0xb0, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0xa0, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0xb8, 8) COPY (register, 0x30, 8)",
    "(register, 0x18, 8) COPY (register, 0x38, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x30, 8) , (const, 0x20, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x56080, 8) INT_AND (register, 0x38, 8) , (register, 0x38, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x56080, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x28b8, 8) , (register, 0x206, 1)",
    "(register, 0x200, 1) INT_LESS (register, 0x38, 8) , (register, 0xb8, 8)",
    "(register, 0x20b, 1) INT_SBORROW (register, 0x38, 8) , (register, 0xb8, 8)",
    "(unique, 0x25c80, 8) INT_SUB (register, 0x38, 8) , (register, 0xb8, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x25c80, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x25c80, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x25c80, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x28de, 8) , (register, 0x206, 1)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)",
    "(register, 0x0, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x10, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(unique, 0x23d80, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x28a5, 8)",
    " ---  CALLIND (unique, 0x23d80, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x20, 8)",
    "(unique, 0x5500, 8) COPY (register, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5500, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x30, 8)",
    "(register, 0xb0, 8) COPY (unique, 0x3100, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0xb8, 8) , (const, 0x50, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x56080, 8) INT_AND (register, 0x38, 8) , (register, 0x38, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x56080, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0xcb80, 1) BOOL_NEGATE (register, 0x206, 1)",
    " ---  CBRANCH (ram, 0x28cd, 8) , (unique, 0xcb80, 1)",
    " ---  BRANCH (ram, 0x28fc, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x20, 8)",
    "(unique, 0x5800, 8) COPY (const, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5800, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x30, 8)",
    "(register, 0xb0, 8) COPY (unique, 0x3100, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0xb8, 8) , (const, 0x50, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x56080, 8) INT_AND (register, 0x38, 8) , (register, 0x38, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x56080, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x28fc, 8) , (register, 0x206, 1)",
    "(unique, 0x3100, 8) INT_ADD (register, 0xb8, 8) , (const, 0x30, 8)",
    "(register, 0x0, 8) COPY (unique, 0x3100, 8)",
    "(register, 0x200, 1) INT_LESS (register, 0x38, 8) , (register, 0x0, 8)",
    "(register, 0x20b, 1) INT_SBORROW (register, 0x38, 8) , (register, 0x0, 8)",
    "(unique, 0x25c80, 8) INT_SUB (register, 0x38, 8) , (register, 0x0, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x25c80, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x25c80, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x25c80, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x2904, 8) , (register, 0x206, 1)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)",
    "(register, 0x0, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x10, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(unique, 0x23d80, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x28dc, 8)",
    " ---  CALLIND (unique, 0x23d80, 8)",
    " ---  BRANCH (ram, 0x28fe, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x20, 8)",
    "(unique, 0x5500, 8) COPY (register, 0x18, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5500, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0xb8, 8) , (const, 0x20, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)",
    "(register, 0x0, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x30, 8) COPY (register, 0x18, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x18, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(unique, 0x23d80, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x28ef, 8)",
    " ---  CALLIND (unique, 0x23d80, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x30, 8)",
    "(register, 0xb0, 8) COPY (unique, 0x3100, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0xb8, 8) , (const, 0x50, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x56080, 8) INT_AND (register, 0x38, 8) , (register, 0x38, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x56080, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0xcb80, 1) BOOL_NEGATE (register, 0x206, 1)",
    " ---  CBRANCH (ram, 0x28cd, 8) , (unique, 0xcb80, 1)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)",
    "(register, 0x0, 8) INT_ZEXT (register, 0x0, 4)",
    "(register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)",
    "(unique, 0x13400, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 4)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x50, 8)",
    "(unique, 0x5500, 8) COPY (register, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5500, 8)",
    " ---  BRANCH (ram, 0x2915, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x50, 8)",
    "(unique, 0x5500, 8) COPY (register, 0xb0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5500, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0xb8, 8) , (const, 0x50, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)",
    "(register, 0x0, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x30, 8) COPY (register, 0xb0, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x18, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(unique, 0x23d80, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x2915, 8)",
    " ---  CALLIND (unique, 0x23d80, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x60, 8)",
    "(register, 0xa0, 8) COPY (unique, 0x3100, 8)",
    "(unique, 0x3200, 8) INT_ADD (register, 0xb8, 8) , (const, 0x80, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x56080, 8) INT_AND (register, 0x38, 8) , (register, 0x38, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x56080, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x2936, 8) , (register, 0x206, 1)",
    "(unique, 0x3100, 8) INT_ADD (register, 0xb8, 8) , (const, 0x60, 8)",
    "(register, 0x0, 8) COPY (unique, 0x3100, 8)",
    "(register, 0x200, 1) INT_LESS (register, 0x38, 8) , (register, 0x0, 8)",
    "(register, 0x20b, 1) INT_SBORROW (register, 0x38, 8) , (register, 0x0, 8)",
    "(unique, 0x25c80, 8) INT_SUB (register, 0x38, 8) , (register, 0x0, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x25c80, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x25c80, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x25c80, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x2941, 8) , (register, 0x206, 1)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)",
    "(register, 0x0, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x10, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(unique, 0x23d80, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x2934, 8)",
    " ---  CALLIND (unique, 0x23d80, 8)",
    " ---  BRANCH (ram, 0x2938, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)",
    "(register, 0x0, 8) INT_ZEXT (register, 0x0, 4)",
    "(register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)",
    "(unique, 0x13400, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 4)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x80, 8)",
    "(unique, 0x5500, 8) COPY (register, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (unique, 0x5500, 8)",
    " ---  BRANCH (ram, 0x2958, 8)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x80, 8)",
    "(unique, 0x5500, 8) COPY (register, 0xa0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (unique, 0x5500, 8)",
    "(unique, 0x3200, 8) INT_ADD (register, 0xb8, 8) , (const, 0x80, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)",
    "(register, 0x0, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x30, 8) COPY (register, 0xa0, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x18, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(unique, 0x23d80, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x2958, 8)",
    " ---  CALLIND (unique, 0x23d80, 8)",
    "(unique, 0x3200, 8) INT_ADD (register, 0xb8, 8) , (const, 0xb0, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x56080, 8) INT_AND (register, 0x38, 8) , (register, 0x38, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x56080, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x2978, 8) , (register, 0x206, 1)",
    "(unique, 0x3200, 8) INT_ADD (register, 0xb8, 8) , (const, 0x90, 8)",
    "(register, 0x0, 8) COPY (unique, 0x3200, 8)",
    "(register, 0x200, 1) INT_LESS (register, 0x38, 8) , (register, 0x0, 8)",
    "(register, 0x20b, 1) INT_SBORROW (register, 0x38, 8) , (register, 0x0, 8)",
    "(unique, 0x25c80, 8) INT_SUB (register, 0x38, 8) , (register, 0x0, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x25c80, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x25c80, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x25c80, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x2983, 8) , (register, 0x206, 1)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)",
    "(register, 0x0, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x10, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(unique, 0x23d80, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x2976, 8)",
    " ---  CALLIND (unique, 0x23d80, 8)",
    " ---  BRANCH (ram, 0x297a, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(register, 0x0, 4) INT_XOR (register, 0x0, 4) , (register, 0x0, 4)",
    "(register, 0x0, 8) INT_ZEXT (register, 0x0, 4)",
    "(register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)",
    "(unique, 0x13400, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 4)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xb0, 8)",
    "(unique, 0x5500, 8) COPY (register, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (unique, 0x5500, 8)",
    " ---  BRANCH (ram, 0x299e, 8)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x90, 8)",
    "(register, 0x30, 8) COPY (unique, 0x3200, 8)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xb0, 8)",
    "(unique, 0x5500, 8) COPY (register, 0x30, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (unique, 0x5500, 8)",
    "(unique, 0x3200, 8) INT_ADD (register, 0xb8, 8) , (const, 0xb0, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)",
    "(register, 0x0, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x18, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(unique, 0x23d80, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x299e, 8)",
    " ---  CALLIND (unique, 0x23d80, 8)",
    "(register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0xa0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0xb0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0xb8, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  RETURN (register, 0x288, 8)"
  ],
  "___error": [],
  "__ZNK6spdlog5sinks15basic_file_sinkINSt3__15mutexEE8filenameEv": [
    "(unique, 0xef80, 8) COPY (register, 0x28, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x28, 8) COPY (register, 0x20, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x38, 8) , (const, 0x70, 8)",
    "(register, 0x0, 8) COPY (unique, 0x3100, 8)",
    "(register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  RETURN (register, 0x288, 8)"
  ],
  "__ZN6spdlog5sinks18rotating_file_sinkINSt3__15mutexEED1Ev": [
    "(unique, 0xef80, 8) COPY (register, 0x28, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x28, 8) COPY (register, 0x20, 8)",
    "(unique, 0xef80, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0x0, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x18, 8) COPY (register, 0x38, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0x38, 8) , (const, 0x90, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x38, 8) , (const, 0x90, 8)",
    "(register, 0x38, 8) INT_ADD (register, 0x38, 8) , (const, 0x90, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x38, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x38, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x38, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x2715, 8)",
    " ---  CALL (ram, 0xa0, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x58, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0xc000, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(unique, 0x55980, 1) INT_AND (unique, 0xc000, 1) , (const, 0x1, 1)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x55980, 1) , (const, 0x0, 1)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x55980, 1) , (const, 0x0, 1)",
    "(unique, 0x13400, 1) INT_AND (unique, 0x55980, 1) , (const, 0xff, 1)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 1)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x2724, 8) , (register, 0x206, 1)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x68, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x2724, 8)",
    " ---  CALL (ram, 0x6108, 8)",
    "(register, 0x0, 8) COPY (ram, 0x37e8, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0x0, 8) , (const, 0x10, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x0, 8) , (const, 0x10, 8)",
    "(register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x10, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x0, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x0, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0x5500, 8) COPY (register, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (register, 0x18, 8) , (unique, 0x5500, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x18, 8)",
    "(register, 0x38, 8) COPY (unique, 0x3100, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x273b, 8)",
    " ---  CALL (ram, 0x60d8, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x10, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x10, 8)",
    "(unique, 0x5800, 8) COPY (const, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5800, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x56080, 8) INT_AND (register, 0x38, 8) , (register, 0x38, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x56080, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x2758, 8) , (register, 0x206, 1)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)",
    "(register, 0x0, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x8, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    " ---  BRANCHIND (unique, 0xc280, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  RETURN (register, 0x288, 8)"
  ],
  "__ZN6spdlog5sinks18rotating_file_sinkINS_7details10null_mutexEE12rename_file_ERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEESD_": [
    "(unique, 0xef80, 8) COPY (register, 0x28, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x28, 8) COPY (register, 0x20, 8)",
    "(unique, 0xef80, 8) COPY (register, 0xb0, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x18, 8) COPY (register, 0x10, 8)",
    "(register, 0xb0, 8) COPY (register, 0x30, 8)",
    "(register, 0x38, 8) COPY (register, 0x10, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x2205, 8)",
    " ---  CALL (ram, 0x6058, 8)",
    "(register, 0x38, 8) COPY (register, 0xb0, 8)",
    "(register, 0x30, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x2210, 8)",
    " ---  CALL (ram, 0x6060, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x55f80, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x55f80, 4) , (const, 0x0, 4)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x55f80, 4) , (const, 0x0, 4)",
    "(unique, 0x13400, 4) INT_AND (unique, 0x55f80, 4) , (const, 0xff, 4)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 4)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x0, 1) COPY (register, 0x206, 1)",
    "(register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0xb0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  RETURN (register, 0x288, 8)"
  ],
  "__ZN6spdlog5sinks9base_sinkINSt3__15mutexEED1Ev": [
    "(unique, 0xef80, 8) COPY (register, 0x28, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x28, 8) COPY (register, 0x20, 8)",
    " ---  CALLOTHER (const, 0x4d, 4)",
    " ---  BRANCH (ram, 0x2a34, 8)"
  ],
  "__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_": [],
  "__ZN6spdlog5sinks9base_sinkINS_7details10null_mutexEE5flushEv": [
    "(unique, 0xef80, 8) COPY (register, 0x28, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x28, 8) COPY (register, 0x20, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)",
    "(register, 0x0, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x38, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    " ---  BRANCHIND (unique, 0xc280, 8)"
  ],
  "__ZN6spdlog5sinks9base_sinkINSt3__15mutexEE12set_pattern_ERKNS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE": [
    "(unique, 0xef80, 8) COPY (register, 0x28, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x28, 8) COPY (register, 0x20, 8)",
    "(unique, 0xef80, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x200, 1) INT_LESS (register, 0x20, 8) , (const, 0x18, 8)",
    "(register, 0x20b, 1) INT_SBORROW (register, 0x20, 8) , (const, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x18, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x18, 8) COPY (register, 0x38, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xfffffffffffffff0, 8)",
    "(register, 0x38, 8) COPY (unique, 0x3100, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x2445, 8)",
    " ---  CALL (ram, 0x2f20, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xfffffffffffffff0, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x0, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xfffffffffffffff0, 8)",
    "(unique, 0x5800, 8) COPY (const, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5800, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffe8, 8)",
    "(unique, 0x5500, 8) COPY (register, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5500, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)",
    "(register, 0x0, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffe8, 8)",
    "(register, 0x30, 8) COPY (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (register, 0x18, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x48, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(unique, 0x23d80, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x2462, 8)",
    " ---  CALLIND (unique, 0x23d80, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffe8, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffe8, 8)",
    "(unique, 0x5800, 8) COPY (const, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5800, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x56080, 8) INT_AND (register, 0x38, 8) , (register, 0x38, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x56080, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x2479, 8) , (register, 0x206, 1)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)",
    "(register, 0x0, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x8, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(unique, 0x23d80, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x2479, 8)",
    " ---  CALLIND (unique, 0x23d80, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xfffffffffffffff0, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x18, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xfffffffffffffff0, 8)",
    "(unique, 0x5800, 8) COPY (const, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5800, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x56080, 8) INT_AND (register, 0x18, 8) , (register, 0x18, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x56080, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x249a, 8) , (register, 0x206, 1)",
    "(register, 0x38, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x2492, 8)",
    " ---  CALL (ram, 0x2b40, 8)",
    "(register, 0x38, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x249a, 8)",
    " ---  CALL (ram, 0x6108, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x18, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x18, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x18, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  RETURN (register, 0x288, 8)"
  ],
  "_fwrite": [],
  "__ZNK6spdlog7details11file_helper4sizeEv": [
    "(unique, 0xef80, 8) COPY (register, 0x28, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x28, 8) COPY (register, 0x20, 8)",
    "(unique, 0xef80, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x200, 1) INT_LESS (register, 0x20, 8) , (const, 0x38, 8)",
    "(register, 0x20b, 1) INT_SBORROW (register, 0x20, 8) , (const, 0x38, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x38, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x30, 8) COPY (register, 0x38, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x38, 8) , (const, 0x8, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x56080, 8) INT_AND (register, 0x38, 8) , (register, 0x38, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x56080, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x900, 8) , (register, 0x206, 1)",
    "(register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x38, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x38, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x38, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  BRANCH (ram, 0x6078, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0x30, 8) , (const, 0x10, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x30, 8) , (const, 0x10, 8)",
    "(register, 0x30, 8) INT_ADD (register, 0x30, 8) , (const, 0x10, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x30, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x30, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x30, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffc8, 8)",
    "(register, 0x18, 8) COPY (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x910, 8)",
    " ---  CALL (ram, 0x6040, 8)",
    "(register, 0x10, 8) COPY (const, 0x34eb, 8)",
    "(register, 0x38, 8) COPY (register, 0x18, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(register, 0x30, 4) INT_XOR (register, 0x30, 4) , (register, 0x30, 4)",
    "(register, 0x30, 8) INT_ZEXT (register, 0x30, 4)",
    "(register, 0x207, 1) INT_SLESS (register, 0x30, 4) , (const, 0x0, 4)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x0, 4)",
    "(unique, 0x13400, 4) INT_AND (register, 0x30, 4) , (const, 0xff, 4)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 4)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x921, 8)",
    " ---  CALL (ram, 0x60a8, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x10, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x8, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xfffffffffffffff0, 8)",
    "(unique, 0x5500, 8) COPY (register, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5500, 8)",
    "(unique, 0x5580, 16) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)",
    "(unique, 0x7c980, 16) COPY (unique, 0x5580, 16)",
    "(register, 0x1200, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0x0, 4)",
    "(register, 0x1204, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0x4, 4)",
    "(register, 0x1208, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0x8, 4)",
    "(register, 0x120c, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0xc, 4)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffe0, 8)",
    "(unique, 0x5580, 16) COPY (register, 0x1200, 16)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5580, 16)",
    "(register, 0x1200, 4) INT_XOR (register, 0x1200, 4) , (register, 0x1200, 4)",
    "(register, 0x1204, 4) INT_XOR (register, 0x1204, 4) , (register, 0x1204, 4)",
    "(register, 0x1208, 4) INT_XOR (register, 0x1208, 4) , (register, 0x1208, 4)",
    "(register, 0x120c, 4) INT_XOR (register, 0x120c, 4) , (register, 0x120c, 4)",
    "(unique, 0x5580, 16) COPY (register, 0x1200, 16)",
    " ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (unique, 0x5580, 16)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x10, 8)",
    "(unique, 0x5800, 8) COPY (const, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5800, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffe0, 8)",
    "(register, 0x38, 8) COPY (unique, 0x3100, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x947, 8)",
    " ---  CALL (ram, 0x6010, 8)",
    " ---  CALLOTHER (const, 0x4d, 4)",
    " ---  BRANCH (ram, 0x947, 8)"
  ],
  "___stack_chk_fail": [],
  "__ZN6spdlog7details2os8filesizeEP7__sFILE": [],
  "__ZN6spdlog5sinks9base_sinkINS_7details10null_mutexEE14set_formatter_ENSt3__110unique_ptrINS_9formatterENS5_14default_deleteIS7_EEEE": [
    "(unique, 0xef80, 8) COPY (register, 0x28, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x28, 8) COPY (register, 0x20, 8)",
    "(register, 0x0, 8) COPY (register, 0x38, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)",
    "(register, 0x8, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x5800, 8) COPY (const, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (register, 0x30, 8) , (unique, 0x5800, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x38, 8) , (const, 0x10, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x10, 8)",
    "(unique, 0x5500, 8) COPY (register, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5500, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x56080, 8) INT_AND (register, 0x38, 8) , (register, 0x38, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x56080, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x26f5, 8) , (register, 0x206, 1)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)",
    "(register, 0x0, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x8, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    " ---  BRANCHIND (unique, 0xc280, 8)",
    "(register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  RETURN (register, 0x288, 8)"
  ],
  "__ZN6spdlog7details2os10create_dirERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE": [],
  "_strlen": [],
  "__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1B7v160006IDnEEPKc": [
    "(unique, 0xef80, 8) COPY (register, 0x28, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x28, 8) COPY (register, 0x20, 8)",
    "(unique, 0xef80, 8) COPY (register, 0xb8, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0xb0, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0xa0, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0xb0, 8) COPY (register, 0x30, 8)",
    "(register, 0x18, 8) COPY (register, 0x38, 8)",
    "(register, 0x38, 8) COPY (register, 0x30, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x5b9, 8)",
    " ---  CALL (ram, 0x6180, 8)",
    "(register, 0x200, 1) INT_LESS (register, 0x0, 8) , (const, 0xfffffffffffffff0, 8)",
    "(register, 0x20b, 1) INT_SBORROW (register, 0x0, 8) , (const, 0xfffffffffffffff0, 8)",
    "(unique, 0x25880, 8) INT_SUB (register, 0x0, 8) , (const, 0xfffffffffffffff0, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x25880, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x25880, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x25880, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0xca80, 1) BOOL_NEGATE (register, 0x200, 1)",
    " ---  CBRANCH (ram, 0x612, 8) , (unique, 0xca80, 1)",
    "(register, 0xb8, 8) COPY (register, 0x0, 8)",
    "(register, 0x200, 1) INT_LESS (register, 0x0, 8) , (const, 0x16, 8)",
    "(register, 0x20b, 1) INT_SBORROW (register, 0x0, 8) , (const, 0x16, 8)",
    "(unique, 0x25880, 8) INT_SUB (register, 0x0, 8) , (const, 0x16, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x25880, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x25880, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x25880, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0xcd00, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)",
    "(unique, 0xce00, 1) BOOL_NEGATE (unique, 0xcd00, 1)",
    " ---  CBRANCH (ram, 0x5d3, 8) , (unique, 0xce00, 1)",
    "(unique, 0x3300, 8) INT_MULT (register, 0xb8, 8) , (const, 0x1, 8)",
    "(unique, 0x3400, 8) INT_ADD (register, 0xb8, 8) , (unique, 0x3300, 8)",
    "(register, 0x0, 4) SUBPIECE (unique, 0x3400, 8) , (const, 0x0, 4)",
    "(register, 0x0, 8) INT_ZEXT (register, 0x0, 4)",
    "(unique, 0x5380, 1) COPY (register, 0x0, 1)",
    " ---  STORE (const, 0x1b1, 4) , (register, 0x18, 8) , (unique, 0x5380, 1)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x18, 8) , (const, 0x1, 8)",
    "(register, 0x18, 8) INT_ADD (register, 0x18, 8) , (const, 0x1, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x18, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x18, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x18, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  BRANCH (ram, 0x5f6, 8)",
    "(register, 0xa0, 8) COPY (register, 0xb8, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(register, 0xa0, 8) INT_OR (register, 0xa0, 8) , (const, 0xf, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0xa0, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0xa0, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0xa0, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0x3800, 8) INT_ADD (const, 0x1, 8) , (register, 0xa0, 8)",
    "(register, 0x38, 8) COPY (unique, 0x3800, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x5e4, 8)",
    " ---  CALL (ram, 0x6110, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x10, 8)",
    "(unique, 0x5500, 8) COPY (register, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5500, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0xa0, 8) , (const, 0x2, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0xa0, 8) , (const, 0x2, 8)",
    "(register, 0xa0, 8) INT_ADD (register, 0xa0, 8) , (const, 0x2, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0xa0, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0xa0, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0xa0, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0x5500, 8) COPY (register, 0xa0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (register, 0x18, 8) , (unique, 0x5500, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x8, 8)",
    "(unique, 0x5500, 8) COPY (register, 0xb8, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5500, 8)",
    "(register, 0x18, 8) COPY (register, 0x0, 8)",
    "(register, 0x38, 8) COPY (register, 0x18, 8)",
    "(register, 0x30, 8) COPY (register, 0xb0, 8)",
    "(register, 0x10, 8) COPY (register, 0xb8, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x604, 8)",
    " ---  CALL (ram, 0x6178, 8)",
    "(unique, 0x3300, 8) INT_MULT (register, 0xb8, 8) , (const, 0x1, 8)",
    "(unique, 0x3400, 8) INT_ADD (register, 0x18, 8) , (unique, 0x3300, 8)",
    "(unique, 0x5680, 1) COPY (const, 0x0, 1)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (unique, 0x5680, 1)",
    "(register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0xa0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0xb0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0xb8, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  RETURN (register, 0x288, 8)",
    "(register, 0x38, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x61a, 8)",
    " ---  CALL (ram, 0x2a70, 8)"
  ],
  "__ZN6spdlog5sinks18rotating_file_sinkINSt3__15mutexEE13calc_filenameERKNS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEm": [
    "(unique, 0xef80, 8) COPY (register, 0x28, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x28, 8) COPY (register, 0x20, 8)",
    "(unique, 0xef80, 8) COPY (register, 0xb0, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x200, 1) INT_LESS (register, 0x20, 8) , (const, 0x70, 8)",
    "(register, 0x20b, 1) INT_SBORROW (register, 0x20, 8) , (const, 0x70, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x70, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x18, 8) COPY (register, 0x38, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x56080, 8) INT_AND (register, 0x10, 8) , (register, 0x10, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x56080, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x12be, 8) , (register, 0x206, 1)",
    "(register, 0xb0, 8) COPY (register, 0x10, 8)",
    "(register, 0x1200, 4) INT_XOR (register, 0x1200, 4) , (register, 0x1200, 4)",
    "(register, 0x1204, 4) INT_XOR (register, 0x1204, 4) , (register, 0x1204, 4)",
    "(register, 0x1208, 4) INT_XOR (register, 0x1208, 4) , (register, 0x1208, 4)",
    "(register, 0x120c, 4) INT_XOR (register, 0x120c, 4) , (register, 0x120c, 4)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffd0, 8)",
    "(unique, 0x5580, 16) COPY (register, 0x1200, 16)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5580, 16)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffe0, 8)",
    "(unique, 0x5800, 8) COPY (const, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5800, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffff80, 8)",
    "(register, 0x38, 8) COPY (unique, 0x3100, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x127e, 8)",
    " ---  CALL (ram, 0x9a0, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffff90, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x0, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffe0, 8)",
    "(unique, 0x5500, 8) COPY (register, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5500, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffff80, 8)",
    "(unique, 0x5580, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(unique, 0x7c980, 16) COPY (unique, 0x5580, 16)",
    "(register, 0x1200, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0x0, 4)",
    "(register, 0x1204, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0x4, 4)",
    "(register, 0x1208, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0x8, 4)",
    "(register, 0x120c, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0xc, 4)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffd0, 8)",
    "(unique, 0x5580, 16) COPY (register, 0x1200, 16)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5580, 16)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffff98, 8)",
    "(unique, 0x5580, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(unique, 0x7c980, 16) COPY (unique, 0x5580, 16)",
    "(register, 0x1200, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0x0, 4)",
    "(register, 0x1204, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0x4, 4)",
    "(register, 0x1208, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0x8, 4)",
    "(register, 0x120c, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0xc, 4)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffb0, 8)",
    "(unique, 0x5580, 16) COPY (register, 0x1200, 16)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5580, 16)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffa8, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x8, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffc0, 8)",
    "(unique, 0x5500, 8) COPY (register, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5500, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffd0, 8)",
    "(unique, 0xc000, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x10, 4) INT_ZEXT (unique, 0xc000, 1)",
    "(register, 0x10, 8) INT_ZEXT (register, 0x10, 4)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x55980, 1) INT_AND (register, 0x10, 1) , (const, 0x1, 1)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x55980, 1) , (const, 0x0, 1)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x55980, 1) , (const, 0x0, 1)",
    "(unique, 0x13400, 1) INT_AND (unique, 0x55980, 1) , (const, 0xff, 1)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 1)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x12c8, 8) , (register, 0x206, 1)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffd8, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x10, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffb0, 8)",
    "(unique, 0xc000, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x30, 4) INT_ZEXT (unique, 0xc000, 1)",
    "(register, 0x30, 8) INT_ZEXT (register, 0x30, 4)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x55980, 1) INT_AND (register, 0x30, 1) , (const, 0x1, 1)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x55980, 1) , (const, 0x0, 1)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x55980, 1) , (const, 0x0, 1)",
    "(unique, 0x13400, 1) INT_AND (unique, 0x55980, 1) , (const, 0xff, 1)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 1)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0xcb80, 1) BOOL_NEGATE (register, 0x206, 1)",
    " ---  CBRANCH (ram, 0x12d9, 8) , (unique, 0xcb80, 1)",
    "(unique, 0x54200, 8) INT_AND (register, 0x30, 8) , (const, 0x1, 8)",
    "(register, 0x200, 1) INT_NOTEQUAL (unique, 0x54200, 8) , (const, 0x0, 8)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(register, 0x30, 8) INT_RIGHT (register, 0x30, 8) , (const, 0x1, 4)",
    "(register, 0x207, 1) INT_SLESS (register, 0x30, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x30, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x30, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffb1, 8)",
    "(register, 0x8, 8) COPY (unique, 0x3100, 8)",
    " ---  BRANCH (ram, 0x12dd, 8)",
    "(register, 0x38, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x12c6, 8)",
    " ---  CALL (ram, 0x60b0, 8)",
    " ---  BRANCH (ram, 0x132c, 8)",
    "(unique, 0x54200, 8) INT_AND (register, 0x10, 8) , (const, 0x1, 8)",
    "(register, 0x200, 1) INT_NOTEQUAL (unique, 0x54200, 8) , (const, 0x0, 8)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(register, 0x10, 8) INT_RIGHT (register, 0x10, 8) , (const, 0x1, 4)",
    "(register, 0x207, 1) INT_SLESS (register, 0x10, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x10, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x10, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffd1, 8)",
    "(register, 0x0, 8) COPY (unique, 0x3100, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffb0, 8)",
    "(unique, 0xc000, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x30, 4) INT_ZEXT (unique, 0xc000, 1)",
    "(register, 0x30, 8) INT_ZEXT (register, 0x30, 4)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x55980, 1) INT_AND (register, 0x30, 1) , (const, 0x1, 1)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x55980, 1) , (const, 0x0, 1)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x55980, 1) , (const, 0x0, 1)",
    "(unique, 0x13400, 1) INT_AND (unique, 0x55980, 1) , (const, 0xff, 1)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 1)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x12b5, 8) , (register, 0x206, 1)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffb8, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x30, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffff80, 8)",
    "(unique, 0x5500, 8) COPY (register, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5500, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffff88, 8)",
    "(unique, 0x5500, 8) COPY (register, 0x10, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5500, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffff90, 8)",
    "(unique, 0x5500, 8) COPY (register, 0xb0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5500, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffa0, 8)",
    "(unique, 0x5500, 8) COPY (register, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5500, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffa8, 8)",
    "(unique, 0x5500, 8) COPY (register, 0x30, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5500, 8)",
    "(register, 0x30, 8) COPY (const, 0x3582, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffff80, 8)",
    "(register, 0x80, 8) COPY (unique, 0x3100, 8)",
    "(register, 0x10, 8) COPY (const, 0x7, 8)",
    "(register, 0x8, 8) COPY (const, 0xd4d, 8)",
    "(register, 0x38, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x130e, 8)",
    " ---  CALL (ram, 0x6008, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffb0, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0xc000, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(unique, 0x55980, 1) INT_AND (unique, 0xc000, 1) , (const, 0x1, 1)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x55980, 1) , (const, 0x0, 1)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x55980, 1) , (const, 0x0, 1)",
    "(unique, 0x13400, 1) INT_AND (unique, 0x55980, 1) , (const, 0xff, 1)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 1)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x131d, 8) , (register, 0x206, 1)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffc0, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x131d, 8)",
    " ---  CALL (ram, 0x6108, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffd0, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0xc000, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(unique, 0x55980, 1) INT_AND (unique, 0xc000, 1) , (const, 0x1, 1)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x55980, 1) , (const, 0x0, 1)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x55980, 1) , (const, 0x0, 1)",
    "(unique, 0x13400, 1) INT_AND (unique, 0x55980, 1) , (const, 0xff, 1)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 1)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x132c, 8) , (register, 0x206, 1)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffe0, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x132c, 8)",
    " ---  CALL (ram, 0x6108, 8)",
    "(register, 0x0, 8) COPY (register, 0x18, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x70, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x70, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x70, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0xb0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  RETURN (register, 0x288, 8)"
  ],
  "___cxa_throw": [],
  "__ZN6spdlog5sinks15basic_file_sinkINS_7details10null_mutexEE8sink_it_ERKNS2_7log_msgE": [
    "(unique, 0xef80, 8) COPY (register, 0x28, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x28, 8) COPY (register, 0x20, 8)",
    "(unique, 0xef80, 8) COPY (register, 0xb0, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x200, 1) INT_LESS (register, 0x20, 8) , (const, 0x130, 8)",
    "(register, 0x20b, 1) INT_SBORROW (register, 0x20, 8) , (const, 0x130, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x130, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x18, 8) COPY (register, 0x38, 8)",
    "(register, 0x0, 8) COPY (ram, 0x6158, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)",
    "(register, 0x0, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffe8, 8)",
    "(unique, 0x5500, 8) COPY (register, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5500, 8)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0xfffffffffffffed8, 8)",
    "(unique, 0x5800, 8) COPY (const, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (unique, 0x5800, 8)",
    "(register, 0x0, 8) COPY (ram, 0x38a8, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0x0, 8) , (const, 0x10, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x0, 8) , (const, 0x10, 8)",
    "(register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x10, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x0, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x0, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0xfffffffffffffec8, 8)",
    "(unique, 0x5500, 8) COPY (register, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (unique, 0x5500, 8)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0xfffffffffffffee8, 8)",
    "(register, 0xb0, 8) COPY (unique, 0x3200, 8)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0xfffffffffffffed0, 8)",
    "(unique, 0x5500, 8) COPY (register, 0xb0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (unique, 0x5500, 8)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0xfffffffffffffee0, 8)",
    "(unique, 0x5800, 8) COPY (const, 0xfa, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (unique, 0x5800, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x38, 8) , (const, 0x10, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)",
    "(register, 0x0, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0xfffffffffffffec8, 8)",
    "(register, 0x10, 8) COPY (unique, 0x3200, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x10, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(unique, 0x23d80, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0xfd6, 8)",
    " ---  CALLIND (unique, 0x23d80, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0x18, 8) , (const, 0x20, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x18, 8) , (const, 0x20, 8)",
    "(register, 0x18, 8) INT_ADD (register, 0x18, 8) , (const, 0x20, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x18, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x18, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x18, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0xfffffffffffffec8, 8)",
    "(register, 0x30, 8) COPY (unique, 0x3200, 8)",
    "(register, 0x38, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0xfe9, 8)",
    " ---  CALL (ram, 0x810, 8)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0xfffffffffffffed0, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x200, 1) INT_LESS (register, 0x38, 8) , (register, 0xb0, 8)",
    "(register, 0x20b, 1) INT_SBORROW (register, 0x38, 8) , (register, 0xb0, 8)",
    "(unique, 0x25c80, 8) INT_SUB (register, 0x38, 8) , (register, 0xb0, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x25c80, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x25c80, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x25c80, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0xffa, 8) , (register, 0x206, 1)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0xffa, 8)",
    " ---  CALL (ram, 0x6108, 8)",
    "(register, 0x0, 8) COPY (ram, 0x6158, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)",
    "(register, 0x0, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffe8, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x200, 1) INT_LESS (register, 0x0, 8) , (unique, 0xc280, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x20b, 1) INT_SBORROW (register, 0x0, 8) , (unique, 0xc280, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(unique, 0x26180, 8) INT_SUB (register, 0x0, 8) , (unique, 0xc280, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x26180, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x26180, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x26180, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0xcb80, 1) BOOL_NEGATE (register, 0x206, 1)",
    " ---  CBRANCH (ram, 0x1016, 8) , (unique, 0xcb80, 1)",
    "(register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x130, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x130, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x130, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0xb0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  RETURN (register, 0x288, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x101b, 8)",
    " ---  CALL (ram, 0x6150, 8)"
  ],
  "__ZN6spdlog5sinks9base_sinkINS_7details10null_mutexEED0Ev": [
    "(unique, 0xef80, 8) COPY (register, 0x28, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x28, 8) COPY (register, 0x20, 8)",
    " ---  CALLOTHER (const, 0x4d, 4)",
    " ---  BRANCH (ram, 0x2a64, 8)"
  ],
  "__ZNK6spdlog5sinks15basic_file_sinkINS_7details10null_mutexEE8filenameEv": [
    "(unique, 0xef80, 8) COPY (register, 0x28, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x28, 8) COPY (register, 0x20, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x38, 8) , (const, 0x30, 8)",
    "(register, 0x0, 8) COPY (unique, 0x3100, 8)",
    "(register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  RETURN (register, 0x288, 8)"
  ],
  "__ZN6spdlog7details11file_helper6reopenEb": [
    "(unique, 0xef80, 8) COPY (register, 0x28, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x28, 8) COPY (register, 0x20, 8)",
    "(unique, 0xef80, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x200, 1) INT_LESS (register, 0x20, 8) , (const, 0x18, 8)",
    "(register, 0x20b, 1) INT_SBORROW (register, 0x20, 8) , (const, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x18, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x38, 8) , (const, 0x10, 8)",
    "(unique, 0xc000, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x0, 4) INT_ZEXT (unique, 0xc000, 1)",
    "(register, 0x0, 8) INT_ZEXT (register, 0x0, 4)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x55580, 1) INT_AND (register, 0x0, 1) , (const, 0x1, 1)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x55580, 1) , (const, 0x0, 1)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x55580, 1) , (const, 0x0, 1)",
    "(unique, 0x13400, 1) INT_AND (unique, 0x55580, 1) , (const, 0xff, 1)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 1)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0xcb80, 1) BOOL_NEGATE (register, 0x206, 1)",
    " ---  CBRANCH (ram, 0x636, 8) , (unique, 0xcb80, 1)",
    "(unique, 0x54200, 8) INT_AND (register, 0x0, 8) , (const, 0x1, 8)",
    "(register, 0x200, 1) INT_NOTEQUAL (unique, 0x54200, 8) , (const, 0x0, 8)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(register, 0x0, 8) INT_RIGHT (register, 0x0, 8) , (const, 0x1, 4)",
    "(register, 0x207, 1) INT_SLESS (register, 0x0, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x0, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  BRANCH (ram, 0x63a, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x38, 8) , (const, 0x18, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x0, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x56080, 8) INT_AND (register, 0x0, 8) , (register, 0x0, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x56080, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x655, 8) , (register, 0x206, 1)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x38, 8) , (const, 0x10, 8)",
    "(register, 0x0, 8) COPY (unique, 0x3100, 8)",
    "(register, 0x10, 4) INT_ZEXT (register, 0x30, 1)",
    "(register, 0x10, 8) INT_ZEXT (register, 0x10, 4)",
    "(register, 0x30, 8) COPY (register, 0x0, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x18, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x18, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x18, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  BRANCH (ram, 0x280, 8)",
    "(register, 0x30, 8) COPY (const, 0x3478, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffe0, 8)",
    "(register, 0x18, 8) COPY (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x668, 8)",
    " ---  CALL (ram, 0x5a0, 8)",
    "(register, 0x38, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x670, 8)",
    " ---  CALL (ram, 0x6010, 8)",
    " ---  CALLOTHER (const, 0x4d, 4)",
    " ---  BRANCH (ram, 0x670, 8)"
  ],
  "__ZN6spdlog15throw_spdlog_exENSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE": [],
  "_fflush": [],
  "__ZN6spdlog5sinks15basic_file_sinkINSt3__15mutexEE6flush_Ev": [
    "(unique, 0xef80, 8) COPY (register, 0x28, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x28, 8) COPY (register, 0x20, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0x38, 8) , (const, 0x60, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x38, 8) , (const, 0x60, 8)",
    "(register, 0x38, 8) INT_ADD (register, 0x38, 8) , (const, 0x60, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x38, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x38, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x38, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  BRANCH (ram, 0x690, 8)"
  ],
  "__ZN6spdlog7details11file_helper4syncEv": [
    "(unique, 0xef80, 8) COPY (register, 0x28, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x28, 8) COPY (register, 0x20, 8)",
    "(unique, 0xef80, 8) COPY (register, 0xb0, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x200, 1) INT_LESS (register, 0x20, 8) , (const, 0x40, 8)",
    "(register, 0x20b, 1) INT_SBORROW (register, 0x20, 8) , (const, 0x40, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x40, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x18, 8) COPY (register, 0x38, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x38, 8) , (const, 0x8, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x767, 8)",
    " ---  CALL (ram, 0x6050, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x55d80, 1) INT_AND (register, 0x0, 1) , (register, 0x0, 1)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x55d80, 1) , (const, 0x0, 1)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x55d80, 1) , (const, 0x0, 1)",
    "(unique, 0x13400, 1) INT_AND (unique, 0x55d80, 1) , (const, 0xff, 1)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 1)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x774, 8) , (register, 0x206, 1)",
    "(register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x40, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x40, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x40, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0xb0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  RETURN (register, 0x288, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0x18, 8) , (const, 0x10, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x18, 8) , (const, 0x10, 8)",
    "(register, 0x18, 8) INT_ADD (register, 0x18, 8) , (const, 0x10, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x18, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x18, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x18, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffb8, 8)",
    "(register, 0xb0, 8) COPY (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (register, 0xb0, 8)",
    "(register, 0x30, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x787, 8)",
    " ---  CALL (ram, 0x6040, 8)",
    "(register, 0x10, 8) COPY (const, 0x34bd, 8)",
    "(register, 0x38, 8) COPY (register, 0xb0, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(register, 0x30, 4) INT_XOR (register, 0x30, 4) , (register, 0x30, 4)",
    "(register, 0x30, 8) INT_ZEXT (register, 0x30, 4)",
    "(register, 0x207, 1) INT_SLESS (register, 0x30, 4) , (const, 0x0, 4)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x0, 4)",
    "(unique, 0x13400, 4) INT_AND (register, 0x30, 4) , (const, 0xff, 4)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 4)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x798, 8)",
    " ---  CALL (ram, 0x60a8, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x10, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x8, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffe0, 8)",
    "(unique, 0x5500, 8) COPY (register, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5500, 8)",
    "(unique, 0x5580, 16) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)",
    "(unique, 0x7c980, 16) COPY (unique, 0x5580, 16)",
    "(register, 0x1200, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0x0, 4)",
    "(register, 0x1204, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0x4, 4)",
    "(register, 0x1208, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0x8, 4)",
    "(register, 0x120c, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0xc, 4)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffd0, 8)",
    "(unique, 0x5580, 16) COPY (register, 0x1200, 16)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5580, 16)",
    "(register, 0x1200, 4) INT_XOR (register, 0x1200, 4) , (register, 0x1200, 4)",
    "(register, 0x1204, 4) INT_XOR (register, 0x1204, 4) , (register, 0x1204, 4)",
    "(register, 0x1208, 4) INT_XOR (register, 0x1208, 4) , (register, 0x1208, 4)",
    "(register, 0x120c, 4) INT_XOR (register, 0x120c, 4) , (register, 0x120c, 4)",
    "(unique, 0x5580, 16) COPY (register, 0x1200, 16)",
    " ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (unique, 0x5580, 16)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x10, 8)",
    "(unique, 0x5800, 8) COPY (const, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5800, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x7ba, 8)",
    " ---  CALL (ram, 0x6140, 8)",
    "(unique, 0xc180, 4) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)",
    "(register, 0x30, 4) COPY (unique, 0xc180, 4)",
    "(register, 0x30, 8) INT_ZEXT (register, 0x30, 4)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffd0, 8)",
    "(register, 0x38, 8) COPY (unique, 0x3100, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x7c5, 8)",
    " ---  CALL (ram, 0x6018, 8)",
    " ---  CALLOTHER (const, 0x4d, 4)",
    " ---  BRANCH (ram, 0x7c5, 8)"
  ],
  "__ZN6spdlog5sinks18rotating_file_sinkINS_7details10null_mutexEE7rotate_Ev": [
    "(unique, 0xef80, 8) COPY (register, 0x28, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x28, 8) COPY (register, 0x20, 8)",
    "(unique, 0xef80, 8) COPY (register, 0xb8, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0xb0, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0xa8, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0xa0, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x200, 1) INT_LESS (register, 0x20, 8) , (const, 0xc8, 8)",
    "(register, 0x20b, 1) INT_SBORROW (register, 0x20, 8) , (const, 0xc8, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0xc8, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x18, 8) COPY (register, 0x38, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x38, 8) , (const, 0x58, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x56080, 8) INT_AND (register, 0x38, 8) , (register, 0x38, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x56080, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x1d68, 8) , (register, 0x206, 1)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x100, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)",
    "(register, 0x0, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x56080, 8) INT_AND (register, 0x0, 8) , (register, 0x0, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x56080, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x1d45, 8) , (register, 0x206, 1)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x60, 8)",
    "(register, 0x30, 8) COPY (unique, 0x3100, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffb8, 8)",
    "(unique, 0x5500, 8) COPY (register, 0x38, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5500, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)",
    "(register, 0x8, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffb8, 8)",
    "(register, 0x10, 8) COPY (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (register, 0x0, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x8, 8) , (const, 0x30, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(unique, 0x23d80, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x1d41, 8)",
    " ---  CALLIND (unique, 0x23d80, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x58, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x1d4a, 8)",
    " ---  CALL (ram, 0x6160, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x58, 8)",
    "(unique, 0x5800, 8) COPY (const, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5800, 8)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x130, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x56080, 8) INT_AND (register, 0x38, 8) , (register, 0x38, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x56080, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x1d68, 8) , (register, 0x206, 1)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x60, 8)",
    "(register, 0x30, 8) COPY (unique, 0x3100, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)",
    "(register, 0x0, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x30, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(unique, 0x23d80, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x1d68, 8)",
    " ---  CALLIND (unique, 0x23d80, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x50, 8)",
    "(register, 0x0, 8) COPY (unique, 0x3100, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffb0, 8)",
    "(unique, 0x5500, 8) COPY (register, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5500, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffd0, 8)",
    "(unique, 0x5500, 8) COPY (register, 0x18, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5500, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x40, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0xb0, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x56080, 8) INT_AND (register, 0xb0, 8) , (register, 0xb0, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x56080, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x1e37, 8) , (register, 0x206, 1)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffd0, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x0, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x20, 8)",
    "(register, 0xb8, 8) COPY (unique, 0x3100, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffb8, 8)",
    "(register, 0xa0, 8) COPY (unique, 0x3100, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffff98, 8)",
    "(register, 0xa8, 8) COPY (unique, 0x3100, 8)",
    " ---  BRANCH (ram, 0x1dac, 8)",
    "(register, 0xb0, 8) COPY (register, 0x18, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x56080, 8) INT_AND (register, 0x18, 8) , (register, 0x18, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x56080, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x1e37, 8) , (register, 0x206, 1)",
    "(unique, 0x3100, 8) INT_ADD (register, 0xb0, 8) , (const, 0xffffffffffffffff, 8)",
    "(register, 0x18, 8) COPY (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (register, 0xa0, 8)",
    "(register, 0x30, 8) COPY (register, 0xb8, 8)",
    "(register, 0x10, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x1dbe, 8)",
    " ---  CALL (ram, 0x1bd0, 8)",
    "(register, 0x38, 8) COPY (register, 0xa0, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x1dc6, 8)",
    " ---  CALL (ram, 0x6038, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x55d80, 1) INT_AND (register, 0x0, 1) , (register, 0x0, 1)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x55d80, 1) , (const, 0x0, 1)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x55d80, 1) , (const, 0x0, 1)",
    "(unique, 0x13400, 1) INT_AND (unique, 0x55d80, 1) , (const, 0xff, 1)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 1)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x1e1f, 8) , (register, 0x206, 1)",
    "(register, 0x38, 8) COPY (register, 0xa8, 8)",
    "(register, 0x30, 8) COPY (register, 0xb8, 8)",
    "(register, 0x10, 8) COPY (register, 0xb0, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x1dd8, 8)",
    " ---  CALL (ram, 0x1bd0, 8)",
    "(register, 0x38, 8) COPY (register, 0xa8, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x1de0, 8)",
    " ---  CALL (ram, 0x6058, 8)",
    "(register, 0x38, 8) COPY (register, 0xa0, 8)",
    "(register, 0x30, 8) COPY (register, 0xa8, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x1deb, 8)",
    " ---  CALL (ram, 0x6060, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x55f80, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x55f80, 4) , (const, 0x0, 4)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x55f80, 4) , (const, 0x0, 4)",
    "(unique, 0x13400, 4) INT_AND (unique, 0x55f80, 4) , (const, 0xff, 4)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 4)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x1e10, 8) , (register, 0x206, 1)",
    "(register, 0x38, 8) COPY (const, 0x64, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x1df9, 8)",
    " ---  CALL (ram, 0x6048, 8)",
    "(register, 0x38, 8) COPY (register, 0xa8, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x1e01, 8)",
    " ---  CALL (ram, 0x6058, 8)",
    "(register, 0x38, 8) COPY (register, 0xa0, 8)",
    "(register, 0x30, 8) COPY (register, 0xa8, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x1e0c, 8)",
    " ---  CALL (ram, 0x6060, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x55f80, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x55f80, 4) , (const, 0x0, 4)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x55f80, 4) , (const, 0x0, 4)",
    "(unique, 0x13400, 4) INT_AND (unique, 0x55f80, 4) , (const, 0xff, 4)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 4)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0xcb80, 1) BOOL_NEGATE (register, 0x206, 1)",
    " ---  CBRANCH (ram, 0x1e79, 8) , (unique, 0xcb80, 1)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffff98, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0xc000, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(unique, 0x55980, 1) INT_AND (unique, 0xc000, 1) , (const, 0x1, 1)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x55980, 1) , (const, 0x0, 1)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x55980, 1) , (const, 0x0, 1)",
    "(unique, 0x13400, 1) INT_AND (unique, 0x55980, 1) , (const, 0xff, 1)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 1)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x1e1f, 8) , (register, 0x206, 1)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffa8, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x1e1f, 8)",
    " ---  CALL (ram, 0x6108, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffb8, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0xc000, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(unique, 0x55980, 1) INT_AND (unique, 0xc000, 1) , (const, 0x1, 1)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x55980, 1) , (const, 0x0, 1)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x55980, 1) , (const, 0x0, 1)",
    "(unique, 0x13400, 1) INT_AND (unique, 0x55980, 1) , (const, 0xff, 1)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 1)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x1da0, 8) , (register, 0x206, 1)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffc8, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x1e32, 8)",
    " ---  CALL (ram, 0x6108, 8)",
    " ---  BRANCH (ram, 0x1da0, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffd0, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x30, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x30, 8) , (const, 0x60, 8)",
    "(unique, 0xc000, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x0, 4) INT_ZEXT (unique, 0xc000, 1)",
    "(register, 0x0, 8) INT_ZEXT (register, 0x0, 4)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x55580, 1) INT_AND (register, 0x0, 1) , (const, 0x1, 1)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x55580, 1) , (const, 0x0, 1)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x55580, 1) , (const, 0x0, 1)",
    "(unique, 0x13400, 1) INT_AND (unique, 0x55580, 1) , (const, 0xff, 1)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 1)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0xcb80, 1) BOOL_NEGATE (register, 0x206, 1)",
    " ---  CBRANCH (ram, 0x1e48, 8) , (unique, 0xcb80, 1)",
    "(unique, 0x54200, 8) INT_AND (register, 0x0, 8) , (const, 0x1, 8)",
    "(register, 0x200, 1) INT_NOTEQUAL (unique, 0x54200, 8) , (const, 0x0, 8)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(register, 0x0, 8) INT_RIGHT (register, 0x0, 8) , (const, 0x1, 4)",
    "(register, 0x207, 1) INT_SLESS (register, 0x0, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x0, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  BRANCH (ram, 0x1e4c, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x30, 8) , (const, 0x68, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x0, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x56080, 8) INT_AND (register, 0x0, 8) , (register, 0x0, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x56080, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x1f47, 8) , (register, 0x206, 1)",
    "(register, 0x200, 1) INT_CARRY (register, 0x30, 8) , (const, 0x60, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x30, 8) , (const, 0x60, 8)",
    "(register, 0x30, 8) INT_ADD (register, 0x30, 8) , (const, 0x60, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x30, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x30, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x30, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffb0, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x10, 8) COPY (const, 0x1, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x1e67, 8)",
    " ---  CALL (ram, 0x280, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0xc8, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0xc8, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0xc8, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0xa0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0xa8, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0xb0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0xb8, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  RETURN (register, 0x288, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffb0, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x30, 8) COPY (const, 0x1, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x1e87, 8)",
    " ---  CALL (ram, 0x620, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffd0, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x0, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x48, 8)",
    "(unique, 0x5800, 8) COPY (const, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5800, 8)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffff30, 8)",
    "(register, 0x38, 8) COPY (unique, 0x3200, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffb8, 8)",
    "(register, 0x30, 8) COPY (unique, 0x3100, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x1ea3, 8)",
    " ---  CALL (ram, 0x6040, 8)",
    "(register, 0x10, 8) COPY (const, 0x358a, 8)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffff30, 8)",
    "(register, 0x38, 8) COPY (unique, 0x3200, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(register, 0x30, 4) INT_XOR (register, 0x30, 4) , (register, 0x30, 4)",
    "(register, 0x30, 8) INT_ZEXT (register, 0x30, 4)",
    "(register, 0x207, 1) INT_SLESS (register, 0x30, 4) , (const, 0x0, 4)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x0, 4)",
    "(unique, 0x13400, 4) INT_AND (register, 0x30, 4) , (const, 0xff, 4)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 4)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x1eb8, 8)",
    " ---  CALL (ram, 0x60a8, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x10, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x8, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffff90, 8)",
    "(unique, 0x5500, 8) COPY (register, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5500, 8)",
    "(unique, 0x5580, 16) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)",
    "(unique, 0x7c980, 16) COPY (unique, 0x5580, 16)",
    "(register, 0x1200, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0x0, 4)",
    "(register, 0x1204, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0x4, 4)",
    "(register, 0x1208, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0x8, 4)",
    "(register, 0x120c, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0xc, 4)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffff80, 8)",
    "(unique, 0x5580, 16) COPY (register, 0x1200, 16)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5580, 16)",
    "(register, 0x1200, 4) INT_XOR (register, 0x1200, 4) , (register, 0x1200, 4)",
    "(register, 0x1204, 4) INT_XOR (register, 0x1204, 4) , (register, 0x1204, 4)",
    "(register, 0x1208, 4) INT_XOR (register, 0x1208, 4) , (register, 0x1208, 4)",
    "(register, 0x120c, 4) INT_XOR (register, 0x120c, 4) , (register, 0x120c, 4)",
    "(unique, 0x5580, 16) COPY (register, 0x1200, 16)",
    " ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (unique, 0x5580, 16)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x10, 8)",
    "(unique, 0x5800, 8) COPY (const, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5800, 8)",
    "(register, 0x30, 8) COPY (const, 0x35af, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffff80, 8)",
    "(register, 0x38, 8) COPY (unique, 0x3100, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x1ee5, 8)",
    " ---  CALL (ram, 0x6098, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x10, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x8, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffff70, 8)",
    "(unique, 0x5500, 8) COPY (register, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (unique, 0x5500, 8)",
    "(unique, 0x5580, 16) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)",
    "(unique, 0x7c980, 16) COPY (unique, 0x5580, 16)",
    "(register, 0x1200, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0x0, 4)",
    "(register, 0x1204, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0x4, 4)",
    "(register, 0x1208, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0x8, 4)",
    "(register, 0x120c, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0xc, 4)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffff60, 8)",
    "(unique, 0x5580, 16) COPY (register, 0x1200, 16)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (unique, 0x5580, 16)",
    "(register, 0x1200, 4) INT_XOR (register, 0x1200, 4) , (register, 0x1200, 4)",
    "(register, 0x1204, 4) INT_XOR (register, 0x1204, 4) , (register, 0x1204, 4)",
    "(register, 0x1208, 4) INT_XOR (register, 0x1208, 4) , (register, 0x1208, 4)",
    "(register, 0x120c, 4) INT_XOR (register, 0x120c, 4) , (register, 0x120c, 4)",
    "(unique, 0x5580, 16) COPY (register, 0x1200, 16)",
    " ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (unique, 0x5580, 16)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x10, 8)",
    "(unique, 0x5800, 8) COPY (const, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5800, 8)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffff48, 8)",
    "(register, 0x38, 8) COPY (unique, 0x3200, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffff98, 8)",
    "(register, 0x30, 8) COPY (unique, 0x3100, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x1f18, 8)",
    " ---  CALL (ram, 0x6040, 8)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffff18, 8)",
    "(register, 0x38, 8) COPY (unique, 0x3200, 8)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffff60, 8)",
    "(register, 0x30, 8) COPY (unique, 0x3200, 8)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffff48, 8)",
    "(register, 0x10, 8) COPY (unique, 0x3200, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x1f32, 8)",
    " ---  CALL (ram, 0x1920, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x1f37, 8)",
    " ---  CALL (ram, 0x6140, 8)",
    "(unique, 0xc180, 4) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)",
    "(register, 0x30, 4) COPY (unique, 0xc180, 4)",
    "(register, 0x30, 8) INT_ZEXT (register, 0x30, 4)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffff18, 8)",
    "(register, 0x38, 8) COPY (unique, 0x3200, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x1f45, 8)",
    " ---  CALL (ram, 0x6018, 8)",
    " ---  BRANCH (ram, 0x1f62, 8)",
    "(register, 0x30, 8) COPY (const, 0x3478, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffb8, 8)",
    "(register, 0x18, 8) COPY (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x1f5a, 8)",
    " ---  CALL (ram, 0x5a0, 8)",
    "(register, 0x38, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x1f62, 8)",
    " ---  CALL (ram, 0x6010, 8)",
    " ---  CALLOTHER (const, 0x4d, 4)",
    " ---  BRANCH (ram, 0x1f62, 8)"
  ],
  "__ZNSt3__110unique_ptrIN6spdlog17pattern_formatterENS_14default_deleteIS2_EEED1B7v160006Ev": [
    "(unique, 0xef80, 8) COPY (register, 0x28, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x28, 8) COPY (register, 0x20, 8)",
    "(unique, 0xef80, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0x0, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)",
    "(register, 0x18, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x5800, 8) COPY (const, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (unique, 0x5800, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x56080, 8) INT_AND (register, 0x18, 8) , (register, 0x18, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x56080, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x2b2b, 8) , (register, 0x206, 1)",
    "(register, 0x38, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x2b1d, 8)",
    " ---  CALL (ram, 0x2b40, 8)",
    "(register, 0x38, 8) COPY (register, 0x18, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  BRANCH (ram, 0x6108, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  RETURN (register, 0x288, 8)"
  ],
  "__ZN6spdlog5sinks9base_sinkINS_7details10null_mutexEE12set_pattern_ERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEE": [
    "(unique, 0xef80, 8) COPY (register, 0x28, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x28, 8) COPY (register, 0x20, 8)",
    "(unique, 0xef80, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x200, 1) INT_LESS (register, 0x20, 8) , (const, 0x18, 8)",
    "(register, 0x20b, 1) INT_SBORROW (register, 0x20, 8) , (const, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x18, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x18, 8) COPY (register, 0x38, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xfffffffffffffff0, 8)",
    "(register, 0x38, 8) COPY (unique, 0x3100, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x2645, 8)",
    " ---  CALL (ram, 0x2f20, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xfffffffffffffff0, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x0, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xfffffffffffffff0, 8)",
    "(unique, 0x5800, 8) COPY (const, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5800, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffe8, 8)",
    "(unique, 0x5500, 8) COPY (register, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5500, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)",
    "(register, 0x0, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffe8, 8)",
    "(register, 0x30, 8) COPY (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (register, 0x18, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x48, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(unique, 0x23d80, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x2662, 8)",
    " ---  CALLIND (unique, 0x23d80, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffe8, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffe8, 8)",
    "(unique, 0x5800, 8) COPY (const, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5800, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x56080, 8) INT_AND (register, 0x38, 8) , (register, 0x38, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x56080, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x2679, 8) , (register, 0x206, 1)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)",
    "(register, 0x0, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x8, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(unique, 0x23d80, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x2679, 8)",
    " ---  CALLIND (unique, 0x23d80, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xfffffffffffffff0, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x18, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xfffffffffffffff0, 8)",
    "(unique, 0x5800, 8) COPY (const, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5800, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x56080, 8) INT_AND (register, 0x18, 8) , (register, 0x18, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x56080, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x269a, 8) , (register, 0x206, 1)",
    "(register, 0x38, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x2692, 8)",
    " ---  CALL (ram, 0x2b40, 8)",
    "(register, 0x38, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x269a, 8)",
    " ---  CALL (ram, 0x6108, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x18, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x18, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x18, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  RETURN (register, 0x288, 8)"
  ],
  "__ZN6spdlog17pattern_formatterC1ENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS_17pattern_time_typeES7_NS1_13unordered_mapIcNS1_10unique_ptrINS_21custom_flag_formatterENS1_14default_deleteISB_EEEENS1_4hashIcEENS1_8equal_toIcEENS5_INS1_4pairIKcSE_EEEEEE": [],
  "__ZN6spdlog7details2os6removeERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE": [],
  "__ZN6spdlog5sinks18rotating_file_sinkINSt3__15mutexEED0Ev": [
    "(unique, 0xef80, 8) COPY (register, 0x28, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x28, 8) COPY (register, 0x20, 8)",
    "(unique, 0xef80, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0x0, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x18, 8) COPY (register, 0x38, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0x38, 8) , (const, 0x90, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x38, 8) , (const, 0x90, 8)",
    "(register, 0x38, 8) INT_ADD (register, 0x38, 8) , (const, 0x90, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x38, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x38, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x38, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x2775, 8)",
    " ---  CALL (ram, 0xa0, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x58, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0xc000, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(unique, 0x55980, 1) INT_AND (unique, 0xc000, 1) , (const, 0x1, 1)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x55980, 1) , (const, 0x0, 1)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x55980, 1) , (const, 0x0, 1)",
    "(unique, 0x13400, 1) INT_AND (unique, 0x55980, 1) , (const, 0xff, 1)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 1)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x2784, 8) , (register, 0x206, 1)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x68, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x2784, 8)",
    " ---  CALL (ram, 0x6108, 8)",
    "(register, 0x0, 8) COPY (ram, 0x37e8, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0x0, 8) , (const, 0x10, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x0, 8) , (const, 0x10, 8)",
    "(register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x10, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x0, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x0, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0x5500, 8) COPY (register, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (register, 0x18, 8) , (unique, 0x5500, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x18, 8)",
    "(register, 0x38, 8) COPY (unique, 0x3100, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x279b, 8)",
    " ---  CALL (ram, 0x60d8, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x10, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x10, 8)",
    "(unique, 0x5800, 8) COPY (const, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5800, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x56080, 8) INT_AND (register, 0x38, 8) , (register, 0x38, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x56080, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x27b2, 8) , (register, 0x206, 1)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)",
    "(register, 0x0, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x8, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(unique, 0x23d80, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x27b2, 8)",
    " ---  CALLIND (unique, 0x23d80, 8)",
    "(register, 0x38, 8) COPY (register, 0x18, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  BRANCH (ram, 0x6108, 8)"
  ],
  "__ZN6spdlog5sinks9base_sinkINS_7details10null_mutexEE3logERKNS2_7log_msgE": [
    "(unique, 0xef80, 8) COPY (register, 0x28, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x28, 8) COPY (register, 0x20, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)",
    "(register, 0x0, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x30, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x0, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  BRANCHIND (register, 0x0, 8)"
  ],
  "__ZN6spdlog5sinks18rotating_file_sinkINS_7details10null_mutexEED1Ev": [
    "(unique, 0xef80, 8) COPY (register, 0x28, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x28, 8) COPY (register, 0x20, 8)",
    "(unique, 0xef80, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0x0, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x18, 8) COPY (register, 0x38, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0x38, 8) , (const, 0x50, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x38, 8) , (const, 0x50, 8)",
    "(register, 0x38, 8) INT_ADD (register, 0x38, 8) , (const, 0x50, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x38, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x38, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x38, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x27d2, 8)",
    " ---  CALL (ram, 0xa0, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x20, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0xc000, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(unique, 0x55980, 1) INT_AND (unique, 0xc000, 1) , (const, 0x1, 1)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x55980, 1) , (const, 0x0, 1)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x55980, 1) , (const, 0x0, 1)",
    "(unique, 0x13400, 1) INT_AND (unique, 0x55980, 1) , (const, 0xff, 1)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 1)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x27e1, 8) , (register, 0x206, 1)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x30, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x27e1, 8)",
    " ---  CALL (ram, 0x6108, 8)",
    "(register, 0x0, 8) COPY (ram, 0x3848, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0x0, 8) , (const, 0x10, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x0, 8) , (const, 0x10, 8)",
    "(register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x10, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x0, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x0, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0x5500, 8) COPY (register, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (register, 0x18, 8) , (unique, 0x5500, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x10, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x10, 8)",
    "(unique, 0x5800, 8) COPY (const, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5800, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x56080, 8) INT_AND (register, 0x38, 8) , (register, 0x38, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x56080, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x280c, 8) , (register, 0x206, 1)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)",
    "(register, 0x0, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x8, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    " ---  BRANCHIND (unique, 0xc280, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  RETURN (register, 0x288, 8)"
  ],
  "__ZN6spdlog5sinks9base_sinkINSt3__15mutexEED0Ev": [
    "(unique, 0xef80, 8) COPY (register, 0x28, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x28, 8) COPY (register, 0x20, 8)",
    " ---  CALLOTHER (const, 0x4d, 4)",
    " ---  BRANCH (ram, 0x2a44, 8)"
  ],
  "__ZN6spdlog17pattern_formatterD2Ev": [
    "(unique, 0xef80, 8) COPY (register, 0x28, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x28, 8) COPY (register, 0x20, 8)",
    "(unique, 0xef80, 8) COPY (register, 0xb8, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0xb0, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0x0, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x18, 8) COPY (register, 0x38, 8)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x38, 8) , (const, 0xa8, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)",
    "(register, 0xb0, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x56080, 8) INT_AND (register, 0xb0, 8) , (register, 0xb0, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x56080, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0xcb80, 1) BOOL_NEGATE (register, 0x206, 1)",
    " ---  CBRANCH (ram, 0x2bb0, 8) , (unique, 0xcb80, 1)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x98, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x98, 8)",
    "(unique, 0x5800, 8) COPY (const, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (unique, 0x5800, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x56080, 8) INT_AND (register, 0x38, 8) , (register, 0x38, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x56080, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x2b75, 8) , (register, 0x206, 1)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x2b75, 8)",
    " ---  CALL (ram, 0x6108, 8)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x80, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)",
    "(register, 0xb0, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x56080, 8) INT_AND (register, 0xb0, 8) , (register, 0xb0, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x56080, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x2c05, 8) , (register, 0x206, 1)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x88, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)",
    "(register, 0xb8, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x38, 8) COPY (register, 0xb0, 8)",
    "(register, 0x200, 1) INT_LESS (register, 0xb8, 8) , (register, 0xb0, 8)",
    "(register, 0x20b, 1) INT_SBORROW (register, 0xb8, 8) , (register, 0xb0, 8)",
    "(unique, 0x25c80, 8) INT_SUB (register, 0xb8, 8) , (register, 0xb0, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x25c80, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x25c80, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x25c80, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0xcb80, 1) BOOL_NEGATE (register, 0x206, 1)",
    " ---  CBRANCH (ram, 0x2bd5, 8) , (unique, 0xcb80, 1)",
    " ---  BRANCH (ram, 0x2bf9, 8)",
    "(register, 0x38, 8) COPY (register, 0xb0, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x2ba8, 8)",
    " ---  CALL (ram, 0x6108, 8)",
    "(register, 0xb0, 8) COPY (register, 0xb8, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x56080, 8) INT_AND (register, 0xb8, 8) , (register, 0xb8, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x56080, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x2b59, 8) , (register, 0x206, 1)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (register, 0xb0, 8)",
    "(register, 0xb8, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0xb0, 8) , (const, 0x18, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0xb0, 8) , (const, 0x18, 8)",
    "(unique, 0x5800, 8) COPY (const, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5800, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x56080, 8) INT_AND (register, 0x38, 8) , (register, 0x38, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x56080, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x2ba0, 8) , (register, 0x206, 1)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)",
    "(register, 0x0, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x8, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(unique, 0x23d80, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x2bca, 8)",
    " ---  CALLIND (unique, 0x23d80, 8)",
    " ---  BRANCH (ram, 0x2ba0, 8)",
    "(register, 0x200, 1) INT_LESS (register, 0xb8, 8) , (register, 0xb0, 8)",
    "(register, 0x20b, 1) INT_SBORROW (register, 0xb8, 8) , (register, 0xb0, 8)",
    "(unique, 0x25c80, 8) INT_SUB (register, 0xb8, 8) , (register, 0xb0, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x25c80, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x25c80, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x25c80, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x2bf2, 8) , (register, 0x206, 1)",
    "(unique, 0x3100, 8) INT_ADD (register, 0xb8, 8) , (const, 0xfffffffffffffff8, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0xb8, 8) , (const, 0xfffffffffffffff8, 8)",
    "(unique, 0x5800, 8) COPY (const, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5800, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0xb8, 8) , (const, 0xfffffffffffffff8, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0xb8, 8) , (const, 0xfffffffffffffff8, 8)",
    "(register, 0xb8, 8) INT_ADD (register, 0xb8, 8) , (const, 0xfffffffffffffff8, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0xb8, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0xb8, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0xb8, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x56080, 8) INT_AND (register, 0x38, 8) , (register, 0x38, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x56080, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x2bd0, 8) , (register, 0x206, 1)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)",
    "(register, 0x0, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x8, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(unique, 0x23d80, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x2bf0, 8)",
    " ---  CALLIND (unique, 0x23d80, 8)",
    " ---  BRANCH (ram, 0x2bd0, 8)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x80, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x88, 8)",
    "(unique, 0x5500, 8) COPY (register, 0xb0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (unique, 0x5500, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x2c05, 8)",
    " ---  CALL (ram, 0x6108, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x20, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0xc000, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(unique, 0x55980, 1) INT_AND (unique, 0xc000, 1) , (const, 0x1, 1)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x55980, 1) , (const, 0x0, 1)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x55980, 1) , (const, 0x0, 1)",
    "(unique, 0x13400, 1) INT_AND (unique, 0x55980, 1) , (const, 0xff, 1)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 1)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x2c14, 8) , (register, 0x206, 1)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x30, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x2c14, 8)",
    " ---  CALL (ram, 0x6108, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x8, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0xc000, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(unique, 0x55980, 1) INT_AND (unique, 0xc000, 1) , (const, 0x1, 1)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x55980, 1) , (const, 0x0, 1)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x55980, 1) , (const, 0x0, 1)",
    "(unique, 0x13400, 1) INT_AND (unique, 0x55980, 1) , (const, 0xff, 1)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 1)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0xcb80, 1) BOOL_NEGATE (register, 0x206, 1)",
    " ---  CBRANCH (ram, 0x2c25, 8) , (unique, 0xcb80, 1)",
    "(register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0xb0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0xb8, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  RETURN (register, 0x288, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x18, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0xb0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0xb8, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  BRANCH (ram, 0x6108, 8)"
  ],
  "_fclose": [],
  "__ZNSt3__1plB7v160006IcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_SA_": [
    "(unique, 0xef80, 8) COPY (register, 0x28, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x28, 8) COPY (register, 0x20, 8)",
    "(unique, 0xef80, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0x0, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x18, 8) COPY (register, 0x38, 8)",
    "(unique, 0xc000, 1) LOAD (const, 0x1b1, 4) , (register, 0x10, 8)",
    "(register, 0x0, 4) INT_ZEXT (unique, 0xc000, 1)",
    "(register, 0x0, 8) INT_ZEXT (register, 0x0, 4)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x55580, 1) INT_AND (register, 0x0, 1) , (const, 0x1, 1)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x55580, 1) , (const, 0x0, 1)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x55580, 1) , (const, 0x0, 1)",
    "(unique, 0x13400, 1) INT_AND (unique, 0x55580, 1) , (const, 0xff, 1)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 1)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x193a, 8) , (register, 0x206, 1)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x10, 8) , (const, 0x8, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x0, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x10, 8) , (const, 0x10, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x10, 8) COPY (unique, 0xc280, 8)",
    " ---  BRANCH (ram, 0x1940, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x10, 8) , (const, 0x1, 8)",
    "(register, 0x10, 8) INT_ADD (register, 0x10, 8) , (const, 0x1, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x10, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x10, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x10, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0x54200, 8) INT_AND (register, 0x0, 8) , (const, 0x1, 8)",
    "(register, 0x200, 1) INT_NOTEQUAL (unique, 0x54200, 8) , (const, 0x0, 8)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(register, 0x0, 8) INT_RIGHT (register, 0x0, 8) , (const, 0x1, 4)",
    "(register, 0x207, 1) INT_SLESS (register, 0x0, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x0, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x38, 8) COPY (register, 0x30, 8)",
    "(register, 0x30, 8) COPY (register, 0x10, 8)",
    "(register, 0x10, 8) COPY (register, 0x0, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x194e, 8)",
    " ---  CALL (ram, 0x60a0, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x10, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x8, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x10, 8)",
    "(unique, 0x5500, 8) COPY (register, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5500, 8)",
    "(unique, 0x5580, 16) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)",
    "(unique, 0x7c980, 16) COPY (unique, 0x5580, 16)",
    "(register, 0x1200, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0x0, 4)",
    "(register, 0x1204, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0x4, 4)",
    "(register, 0x1208, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0x8, 4)",
    "(register, 0x120c, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0xc, 4)",
    "(unique, 0x5580, 16) COPY (register, 0x1200, 16)",
    " ---  STORE (const, 0x1b1, 4) , (register, 0x18, 8) , (unique, 0x5580, 16)",
    "(register, 0x1200, 4) INT_XOR (register, 0x1200, 4) , (register, 0x1200, 4)",
    "(register, 0x1204, 4) INT_XOR (register, 0x1204, 4) , (register, 0x1204, 4)",
    "(register, 0x1208, 4) INT_XOR (register, 0x1208, 4) , (register, 0x1208, 4)",
    "(register, 0x120c, 4) INT_XOR (register, 0x120c, 4) , (register, 0x120c, 4)",
    "(unique, 0x5580, 16) COPY (register, 0x1200, 16)",
    " ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (unique, 0x5580, 16)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x10, 8)",
    "(unique, 0x5800, 8) COPY (const, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5800, 8)",
    "(register, 0x0, 8) COPY (register, 0x18, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  RETURN (register, 0x288, 8)"
  ],
  "__ZN6spdlog5sinks18rotating_file_sinkINS_7details10null_mutexEEC2ENSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEEmmbRKNS_19file_event_handlersE": [
    "(unique, 0xef80, 8) COPY (register, 0x28, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x28, 8) COPY (register, 0x20, 8)",
    "(unique, 0xef80, 8) COPY (register, 0xb8, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0xb0, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0xa8, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0xa0, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x200, 1) INT_LESS (register, 0x20, 8) , (const, 0x68, 8)",
    "(register, 0x20b, 1) INT_SBORROW (register, 0x20, 8) , (const, 0x68, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x68, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffa0, 8)",
    "(unique, 0x5500, 8) COPY (register, 0x88, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5500, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffbc, 8)",
    "(unique, 0x5480, 4) COPY (register, 0x80, 4)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5480, 4)",
    "(register, 0xa8, 8) COPY (register, 0x8, 8)",
    "(register, 0xb0, 8) COPY (register, 0x10, 8)",
    "(register, 0xa0, 8) COPY (register, 0x30, 8)",
    "(register, 0x18, 8) COPY (register, 0x38, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x38, 8) , (const, 0x8, 8)",
    "(unique, 0x5780, 4) COPY (const, 0x0, 4)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5780, 4)",
    "(register, 0x0, 8) COPY (ram, 0x3848, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0x0, 8) , (const, 0x10, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x0, 8) , (const, 0x10, 8)",
    "(register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x10, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x0, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x0, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffa8, 8)",
    "(unique, 0x5500, 8) COPY (register, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5500, 8)",
    "(unique, 0x5500, 8) COPY (register, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (unique, 0x5500, 8)",
    "(register, 0x38, 8) COPY (const, 0xc0, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x19c8, 8)",
    " ---  CALL (ram, 0x6110, 8)",
    "(register, 0xb8, 8) COPY (register, 0x0, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffc0, 8)",
    "(unique, 0x5700, 2) COPY (const, 0xa02, 2)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5700, 2)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffc2, 8)",
    "(unique, 0x5680, 1) COPY (const, 0x0, 1)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5680, 1)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffc0, 8)",
    "(register, 0x10, 8) COPY (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (register, 0x0, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(register, 0x30, 4) INT_XOR (register, 0x30, 4) , (register, 0x30, 4)",
    "(register, 0x30, 8) INT_ZEXT (register, 0x30, 4)",
    "(register, 0x207, 1) INT_SLESS (register, 0x30, 4) , (const, 0x0, 4)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x0, 4)",
    "(unique, 0x13400, 4) INT_AND (register, 0x30, 4) , (const, 0xff, 4)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 4)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x19e3, 8)",
    " ---  CALL (ram, 0x6020, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffc0, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0xc000, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(unique, 0x55980, 1) INT_AND (unique, 0xc000, 1) , (const, 0x1, 1)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x55980, 1) , (const, 0x0, 1)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x55980, 1) , (const, 0x0, 1)",
    "(unique, 0x13400, 1) INT_AND (unique, 0x55980, 1) , (const, 0xff, 1)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 1)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x19f2, 8) , (register, 0x206, 1)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffd0, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x19f2, 8)",
    " ---  CALL (ram, 0x6108, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x10, 8)",
    "(unique, 0x5500, 8) COPY (register, 0xb8, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5500, 8)",
    "(register, 0x0, 8) COPY (ram, 0x36e8, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0x0, 8) , (const, 0x10, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x0, 8) , (const, 0x10, 8)",
    "(register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x10, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x0, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x0, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0x5500, 8) COPY (register, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (register, 0x18, 8) , (unique, 0x5500, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x20, 8)",
    "(register, 0x0, 8) COPY (unique, 0x3100, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffb0, 8)",
    "(unique, 0x5500, 8) COPY (register, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5500, 8)",
    "(unique, 0x3800, 8) INT_ADD (const, 0x10, 8) , (register, 0xa0, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)",
    "(register, 0x0, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x30, 8)",
    "(unique, 0x5500, 8) COPY (register, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5500, 8)",
    "(unique, 0x5580, 16) LOAD (const, 0x1b1, 4) , (register, 0xa0, 8)",
    "(unique, 0x7c980, 16) COPY (unique, 0x5580, 16)",
    "(register, 0x1200, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0x0, 4)",
    "(register, 0x1204, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0x4, 4)",
    "(register, 0x1208, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0x8, 4)",
    "(register, 0x120c, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0xc, 4)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x20, 8)",
    "(unique, 0x5580, 16) COPY (register, 0x1200, 16)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5580, 16)",
    "(register, 0x1200, 4) INT_XOR (register, 0x1200, 4) , (register, 0x1200, 4)",
    "(register, 0x1204, 4) INT_XOR (register, 0x1204, 4) , (register, 0x1204, 4)",
    "(register, 0x1208, 4) INT_XOR (register, 0x1208, 4) , (register, 0x1208, 4)",
    "(register, 0x120c, 4) INT_XOR (register, 0x120c, 4) , (register, 0x120c, 4)",
    "(unique, 0x5580, 16) COPY (register, 0x1200, 16)",
    " ---  STORE (const, 0x1b1, 4) , (register, 0xa0, 8) , (unique, 0x5580, 16)",
    "(unique, 0x3800, 8) INT_ADD (const, 0x10, 8) , (register, 0xa0, 8)",
    "(unique, 0x5800, 8) COPY (const, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x5800, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x38, 8)",
    "(unique, 0x5500, 8) COPY (register, 0xb0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5500, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x40, 8)",
    "(unique, 0x5500, 8) COPY (register, 0xa8, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5500, 8)",
    "(register, 0x0, 8) COPY (const, 0xa00000005, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x50, 8)",
    "(unique, 0x5500, 8) COPY (register, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5500, 8)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x80, 8)",
    "(register, 0x38, 8) COPY (unique, 0x3200, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x58, 8)",
    "(unique, 0x5580, 16) COPY (register, 0x1200, 16)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5580, 16)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x68, 8)",
    "(unique, 0x5580, 16) COPY (register, 0x1200, 16)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5580, 16)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffa0, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x30, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x1a5d, 8)",
    " ---  CALL (ram, 0x2880, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x50, 8)",
    "(register, 0xb8, 8) COPY (unique, 0x3100, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x56080, 8) INT_AND (register, 0xb0, 8) , (register, 0xb0, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x56080, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x1ad3, 8) , (register, 0x206, 1)",
    "(register, 0x200, 1) INT_LESS (register, 0xa8, 8) , (const, 0x30d41, 8)",
    "(register, 0x20b, 1) INT_SBORROW (register, 0xa8, 8) , (const, 0x30d41, 8)",
    "(unique, 0x25580, 8) INT_SUB (register, 0xa8, 8) , (const, 0x30d41, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x25580, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x25580, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x25580, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0xca80, 1) BOOL_NEGATE (register, 0x200, 1)",
    " ---  CBRANCH (ram, 0x1af4, 8) , (unique, 0xca80, 1)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffc0, 8)",
    "(register, 0x38, 8) COPY (unique, 0x3100, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffb0, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x30, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x1a80, 8)",
    " ---  CALL (ram, 0x60b0, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffc0, 8)",
    "(register, 0x30, 8) COPY (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (register, 0xb8, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(register, 0x10, 4) INT_XOR (register, 0x10, 4) , (register, 0x10, 4)",
    "(register, 0x10, 8) INT_ZEXT (register, 0x10, 4)",
    "(register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)",
    "(unique, 0x13400, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 4)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x1a8e, 8)",
    " ---  CALL (ram, 0x280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffc0, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0xc000, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(unique, 0x55980, 1) INT_AND (unique, 0xc000, 1) , (const, 0x1, 1)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x55980, 1) , (const, 0x0, 1)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x55980, 1) , (const, 0x0, 1)",
    "(unique, 0x13400, 1) INT_AND (unique, 0x55980, 1) , (const, 0xff, 1)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 1)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x1a9d, 8) , (register, 0x206, 1)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffd0, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x1a9d, 8)",
    " ---  CALL (ram, 0x6108, 8)",
    "(register, 0x38, 8) COPY (register, 0xb8, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x1aa5, 8)",
    " ---  CALL (ram, 0x8e0, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x48, 8)",
    "(unique, 0x5500, 8) COPY (register, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5500, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffbc, 8)",
    "(unique, 0xc000, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x200, 1) INT_LESS (unique, 0xc000, 1) , (const, 0x0, 1)",
    "(unique, 0xc000, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x20b, 1) INT_SBORROW (unique, 0xc000, 1) , (const, 0x0, 1)",
    "(unique, 0xc000, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(unique, 0x25280, 1) INT_SUB (unique, 0xc000, 1) , (const, 0x0, 1)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x25280, 1) , (const, 0x0, 1)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x25280, 1) , (const, 0x0, 1)",
    "(unique, 0x13400, 1) INT_AND (unique, 0x25280, 1) , (const, 0xff, 1)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 1)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x1ac4, 8) , (register, 0x206, 1)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x56080, 8) INT_AND (register, 0x0, 8) , (register, 0x0, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x56080, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x1ac4, 8) , (register, 0x206, 1)",
    "(register, 0x38, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x1abc, 8)",
    " ---  CALL (ram, 0x1d00, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x48, 8)",
    "(unique, 0x5800, 8) COPY (const, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5800, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x68, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x68, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x68, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0xa0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0xa8, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0xb0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0xb8, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  RETURN (register, 0x288, 8)",
    "(register, 0x30, 8) COPY (const, 0x350d, 8)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffff70, 8)",
    "(register, 0x38, 8) COPY (unique, 0x3200, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x1ae6, 8)",
    " ---  CALL (ram, 0x5a0, 8)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffff70, 8)",
    "(register, 0x38, 8) COPY (unique, 0x3200, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x1af2, 8)",
    " ---  CALL (ram, 0x6010, 8)",
    " ---  BRANCH (ram, 0x1b0d, 8)",
    "(register, 0x30, 8) COPY (const, 0x3544, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffff88, 8)",
    "(register, 0x38, 8) COPY (unique, 0x3100, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x1b04, 8)",
    " ---  CALL (ram, 0x5a0, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffff88, 8)",
    "(register, 0x38, 8) COPY (unique, 0x3100, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x1b0d, 8)",
    " ---  CALL (ram, 0x6010, 8)",
    " ---  CALLOTHER (const, 0x4d, 4)",
    " ---  BRANCH (ram, 0x1b0d, 8)"
  ],
  "__ZN6spdlog5sinks18rotating_file_sinkINS_7details10null_mutexEE6flush_Ev": [
    "(unique, 0xef80, 8) COPY (register, 0x28, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x28, 8) COPY (register, 0x20, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0x38, 8) , (const, 0x50, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x38, 8) , (const, 0x50, 8)",
    "(register, 0x38, 8) INT_ADD (register, 0x38, 8) , (const, 0x50, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x38, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x38, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x38, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  BRANCH (ram, 0x690, 8)"
  ],
  "__ZN6spdlog15throw_spdlog_exERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEi": [],
  "__ZN6spdlog5sinks15basic_file_sinkINS_7details10null_mutexEED1Ev": [
    "(unique, 0xef80, 8) COPY (register, 0x28, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x28, 8) COPY (register, 0x20, 8)",
    "(unique, 0xef80, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0x0, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x18, 8) COPY (register, 0x38, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0x38, 8) , (const, 0x20, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x38, 8) , (const, 0x20, 8)",
    "(register, 0x38, 8) INT_ADD (register, 0x38, 8) , (const, 0x20, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x38, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x38, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x38, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x2512, 8)",
    " ---  CALL (ram, 0xa0, 8)",
    "(register, 0x0, 8) COPY (ram, 0x3848, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0x0, 8) , (const, 0x10, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x0, 8) , (const, 0x10, 8)",
    "(register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x10, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x0, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x0, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0x5500, 8) COPY (register, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (register, 0x18, 8) , (unique, 0x5500, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x10, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x10, 8)",
    "(unique, 0x5800, 8) COPY (const, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5800, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x56080, 8) INT_AND (register, 0x38, 8) , (register, 0x38, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x56080, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x253d, 8) , (register, 0x206, 1)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)",
    "(register, 0x0, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x8, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    " ---  BRANCHIND (unique, 0xc280, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  RETURN (register, 0x288, 8)"
  ],
  "__ZN6spdlog5sinks18rotating_file_sinkINS_7details10null_mutexEE8sink_it_ERKNS2_7log_msgE": [
    "(unique, 0xef80, 8) COPY (register, 0x28, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x28, 8) COPY (register, 0x20, 8)",
    "(unique, 0xef80, 8) COPY (register, 0xb8, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0xb0, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0xa0, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x200, 1) INT_LESS (register, 0x20, 8) , (const, 0x130, 8)",
    "(register, 0x20b, 1) INT_SBORROW (register, 0x20, 8) , (const, 0x130, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x130, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x18, 8) COPY (register, 0x38, 8)",
    "(register, 0x0, 8) COPY (ram, 0x6158, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)",
    "(register, 0x0, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffd8, 8)",
    "(unique, 0x5500, 8) COPY (register, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5500, 8)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0xfffffffffffffec8, 8)",
    "(unique, 0x5800, 8) COPY (const, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (unique, 0x5800, 8)",
    "(register, 0x0, 8) COPY (ram, 0x38a8, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0x0, 8) , (const, 0x10, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x0, 8) , (const, 0x10, 8)",
    "(register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x10, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x0, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x0, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0xfffffffffffffeb8, 8)",
    "(unique, 0x5500, 8) COPY (register, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (unique, 0x5500, 8)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0xfffffffffffffed8, 8)",
    "(register, 0xb8, 8) COPY (unique, 0x3200, 8)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0xfffffffffffffec0, 8)",
    "(unique, 0x5500, 8) COPY (register, 0xb8, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (unique, 0x5500, 8)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0xfffffffffffffed0, 8)",
    "(unique, 0x5800, 8) COPY (const, 0xfa, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (unique, 0x5800, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x38, 8) , (const, 0x10, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)",
    "(register, 0x0, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0xfffffffffffffeb8, 8)",
    "(register, 0x10, 8) COPY (unique, 0x3200, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x10, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(unique, 0x23d80, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x213a, 8)",
    " ---  CALLIND (unique, 0x23d80, 8)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0xfffffffffffffec8, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)",
    "(register, 0xa0, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x48, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0xa0, 8) , (unique, 0xc280, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0xa0, 8) , (unique, 0xc280, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0xa0, 8) INT_ADD (register, 0xa0, 8) , (unique, 0xc280, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0xa0, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0xa0, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0xa0, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x38, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x200, 1) INT_LESS (register, 0xa0, 8) , (unique, 0xc280, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x20b, 1) INT_SBORROW (register, 0xa0, 8) , (unique, 0xc280, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(unique, 0x26180, 8) INT_SUB (register, 0xa0, 8) , (unique, 0xc280, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x26180, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x26180, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x26180, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0xcc80, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)",
    " ---  CBRANCH (ram, 0x2173, 8) , (unique, 0xcc80, 1)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x50, 8)",
    "(register, 0xb0, 8) COPY (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (register, 0xb0, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x2157, 8)",
    " ---  CALL (ram, 0x690, 8)",
    "(register, 0x38, 8) COPY (register, 0xb0, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x215f, 8)",
    " ---  CALL (ram, 0x8e0, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x56080, 8) INT_AND (register, 0x0, 8) , (register, 0x0, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x56080, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x2173, 8) , (register, 0x206, 1)",
    "(register, 0x38, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x216c, 8)",
    " ---  CALL (ram, 0x1d00, 8)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0xfffffffffffffec8, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)",
    "(register, 0xa0, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x50, 8)",
    "(register, 0x38, 8) COPY (unique, 0x3100, 8)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0xfffffffffffffeb8, 8)",
    "(register, 0x30, 8) COPY (unique, 0x3200, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x2183, 8)",
    " ---  CALL (ram, 0x810, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x48, 8)",
    "(unique, 0x5500, 8) COPY (register, 0xa0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5500, 8)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0xfffffffffffffec0, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x200, 1) INT_LESS (register, 0x38, 8) , (register, 0xb8, 8)",
    "(register, 0x20b, 1) INT_SBORROW (register, 0x38, 8) , (register, 0xb8, 8)",
    "(unique, 0x25c80, 8) INT_SUB (register, 0x38, 8) , (register, 0xb8, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x25c80, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x25c80, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x25c80, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x2198, 8) , (register, 0x206, 1)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x2198, 8)",
    " ---  CALL (ram, 0x6108, 8)",
    "(register, 0x0, 8) COPY (ram, 0x6158, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)",
    "(register, 0x0, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffd8, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x200, 1) INT_LESS (register, 0x0, 8) , (unique, 0xc280, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x20b, 1) INT_SBORROW (register, 0x0, 8) , (unique, 0xc280, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(unique, 0x26180, 8) INT_SUB (register, 0x0, 8) , (unique, 0xc280, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x26180, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x26180, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x26180, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0xcb80, 1) BOOL_NEGATE (register, 0x206, 1)",
    " ---  CBRANCH (ram, 0x21b8, 8) , (unique, 0xcb80, 1)",
    "(register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x130, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x130, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x130, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0xa0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0xb0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0xb8, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  RETURN (register, 0x288, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x21bd, 8)",
    " ---  CALL (ram, 0x6150, 8)"
  ],
  "__ZNK6spdlog7details11file_helper8filenameEv": [
    "(unique, 0xef80, 8) COPY (register, 0x28, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x28, 8) COPY (register, 0x20, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x38, 8) , (const, 0x10, 8)",
    "(register, 0x0, 8) COPY (unique, 0x3100, 8)",
    "(register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  RETURN (register, 0x288, 8)"
  ],
  "__ZN6spdlog7details2os5fsyncEP7__sFILE": [],
  "__ZNSt3__120__throw_length_errorB7v160006EPKc": [
    "(unique, 0xef80, 8) COPY (register, 0x28, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x28, 8) COPY (register, 0x20, 8)",
    "(unique, 0xef80, 8) COPY (register, 0xb0, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0xb0, 8) COPY (register, 0x38, 8)",
    "(register, 0x38, 8) COPY (const, 0x10, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x2a94, 8)",
    " ---  CALL (ram, 0x6118, 8)",
    "(register, 0x18, 8) COPY (register, 0x0, 8)",
    "(register, 0x38, 8) COPY (register, 0x0, 8)",
    "(register, 0x30, 8) COPY (register, 0xb0, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x2aa2, 8)",
    " ---  CALL (ram, 0x2ad0, 8)",
    "(register, 0x30, 8) COPY (ram, 0x60e8, 8)",
    "(register, 0x10, 8) COPY (ram, 0x6090, 8)",
    "(register, 0x38, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x2ab8, 8)",
    " ---  CALL (ram, 0x6138, 8)"
  ],
  "__ZN6spdlog7details11file_helper5writeERKN3fmt2v919basic_memory_bufferIcLm250ENSt3__19allocatorIcEEEE": [
    "(unique, 0xef80, 8) COPY (register, 0x28, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x28, 8) COPY (register, 0x20, 8)",
    "(unique, 0xef80, 8) COPY (register, 0xb0, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x200, 1) INT_LESS (register, 0x20, 8) , (const, 0x40, 8)",
    "(register, 0x20b, 1) INT_SBORROW (register, 0x20, 8) , (const, 0x40, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x40, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x18, 8) COPY (register, 0x38, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x30, 8) , (const, 0x8, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x30, 8) , (const, 0x10, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0xb0, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x8, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x8, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x30, 8) COPY (const, 0x1, 8)",
    "(register, 0x10, 8) COPY (register, 0xb0, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x837, 8)",
    " ---  CALL (ram, 0x6170, 8)",
    "(register, 0x200, 1) INT_LESS (register, 0x0, 8) , (register, 0xb0, 8)",
    "(register, 0x20b, 1) INT_SBORROW (register, 0x0, 8) , (register, 0xb0, 8)",
    "(unique, 0x25c80, 8) INT_SUB (register, 0x0, 8) , (register, 0xb0, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x25c80, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x25c80, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x25c80, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0xcb80, 1) BOOL_NEGATE (register, 0x206, 1)",
    " ---  CBRANCH (ram, 0x845, 8) , (unique, 0xcb80, 1)",
    "(register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x40, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x40, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x40, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0xb0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  RETURN (register, 0x288, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0x18, 8) , (const, 0x10, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x18, 8) , (const, 0x10, 8)",
    "(register, 0x18, 8) INT_ADD (register, 0x18, 8) , (const, 0x10, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x18, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x18, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x18, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffb8, 8)",
    "(register, 0xb0, 8) COPY (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (register, 0xb0, 8)",
    "(register, 0x30, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x858, 8)",
    " ---  CALL (ram, 0x6040, 8)",
    "(register, 0x10, 8) COPY (const, 0x34d3, 8)",
    "(register, 0x38, 8) COPY (register, 0xb0, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(register, 0x30, 4) INT_XOR (register, 0x30, 4) , (register, 0x30, 4)",
    "(register, 0x30, 8) INT_ZEXT (register, 0x30, 4)",
    "(register, 0x207, 1) INT_SLESS (register, 0x30, 4) , (const, 0x0, 4)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x0, 4)",
    "(unique, 0x13400, 4) INT_AND (register, 0x30, 4) , (const, 0xff, 4)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 4)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x869, 8)",
    " ---  CALL (ram, 0x60a8, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x10, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x8, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffe0, 8)",
    "(unique, 0x5500, 8) COPY (register, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5500, 8)",
    "(unique, 0x5580, 16) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)",
    "(unique, 0x7c980, 16) COPY (unique, 0x5580, 16)",
    "(register, 0x1200, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0x0, 4)",
    "(register, 0x1204, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0x4, 4)",
    "(register, 0x1208, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0x8, 4)",
    "(register, 0x120c, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0xc, 4)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffd0, 8)",
    "(unique, 0x5580, 16) COPY (register, 0x1200, 16)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5580, 16)",
    "(register, 0x1200, 4) INT_XOR (register, 0x1200, 4) , (register, 0x1200, 4)",
    "(register, 0x1204, 4) INT_XOR (register, 0x1204, 4) , (register, 0x1204, 4)",
    "(register, 0x1208, 4) INT_XOR (register, 0x1208, 4) , (register, 0x1208, 4)",
    "(register, 0x120c, 4) INT_XOR (register, 0x120c, 4) , (register, 0x120c, 4)",
    "(unique, 0x5580, 16) COPY (register, 0x1200, 16)",
    " ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (unique, 0x5580, 16)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x10, 8)",
    "(unique, 0x5800, 8) COPY (const, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5800, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x88b, 8)",
    " ---  CALL (ram, 0x6140, 8)",
    "(unique, 0xc180, 4) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)",
    "(register, 0x30, 4) COPY (unique, 0xc180, 4)",
    "(register, 0x30, 8) INT_ZEXT (register, 0x30, 4)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffd0, 8)",
    "(register, 0x38, 8) COPY (unique, 0x3100, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x896, 8)",
    " ---  CALL (ram, 0x6018, 8)",
    " ---  CALLOTHER (const, 0x4d, 4)",
    " ---  BRANCH (ram, 0x896, 8)"
  ],
  "__ZN6spdlog5sinks9base_sinkINS_7details10null_mutexEED1Ev": [
    "(unique, 0xef80, 8) COPY (register, 0x28, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x28, 8) COPY (register, 0x20, 8)",
    " ---  CALLOTHER (const, 0x4d, 4)",
    " ---  BRANCH (ram, 0x2a54, 8)"
  ],
  "__ZN6spdlog5sinks18rotating_file_sinkINSt3__15mutexEE8sink_it_ERKNS_7details7log_msgE": [
    "(unique, 0xef80, 8) COPY (register, 0x28, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x28, 8) COPY (register, 0x20, 8)",
    "(unique, 0xef80, 8) COPY (register, 0xb8, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0xb0, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0xa0, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x200, 1) INT_LESS (register, 0x20, 8) , (const, 0x130, 8)",
    "(register, 0x20b, 1) INT_SBORROW (register, 0x20, 8) , (const, 0x130, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x130, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x18, 8) COPY (register, 0x38, 8)",
    "(register, 0x0, 8) COPY (ram, 0x6158, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)",
    "(register, 0x0, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffd8, 8)",
    "(unique, 0x5500, 8) COPY (register, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5500, 8)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0xfffffffffffffec8, 8)",
    "(unique, 0x5800, 8) COPY (const, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (unique, 0x5800, 8)",
    "(register, 0x0, 8) COPY (ram, 0x38a8, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0x0, 8) , (const, 0x10, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x0, 8) , (const, 0x10, 8)",
    "(register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x10, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x0, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x0, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0xfffffffffffffeb8, 8)",
    "(unique, 0x5500, 8) COPY (register, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (unique, 0x5500, 8)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0xfffffffffffffed8, 8)",
    "(register, 0xb8, 8) COPY (unique, 0x3200, 8)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0xfffffffffffffec0, 8)",
    "(unique, 0x5500, 8) COPY (register, 0xb8, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (unique, 0x5500, 8)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0xfffffffffffffed0, 8)",
    "(unique, 0x5800, 8) COPY (const, 0xfa, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (unique, 0x5800, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x38, 8) , (const, 0x10, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)",
    "(register, 0x0, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0xfffffffffffffeb8, 8)",
    "(register, 0x10, 8) COPY (unique, 0x3200, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x10, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(unique, 0x23d80, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x181a, 8)",
    " ---  CALLIND (unique, 0x23d80, 8)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0xfffffffffffffec8, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)",
    "(register, 0xa0, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x80, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0xa0, 8) , (unique, 0xc280, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0xa0, 8) , (unique, 0xc280, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)",
    "(register, 0xa0, 8) INT_ADD (register, 0xa0, 8) , (unique, 0xc280, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0xa0, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0xa0, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0xa0, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x70, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x200, 1) INT_LESS (register, 0xa0, 8) , (unique, 0xc280, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x20b, 1) INT_SBORROW (register, 0xa0, 8) , (unique, 0xc280, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(unique, 0x26180, 8) INT_SUB (register, 0xa0, 8) , (unique, 0xc280, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x26180, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x26180, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x26180, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0xcc80, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)",
    " ---  CBRANCH (ram, 0x1859, 8) , (unique, 0xcc80, 1)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x90, 8)",
    "(register, 0xb0, 8) COPY (unique, 0x3200, 8)",
    "(register, 0x38, 8) COPY (register, 0xb0, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x183d, 8)",
    " ---  CALL (ram, 0x690, 8)",
    "(register, 0x38, 8) COPY (register, 0xb0, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x1845, 8)",
    " ---  CALL (ram, 0x8e0, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x56080, 8) INT_AND (register, 0x0, 8) , (register, 0x0, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x56080, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x1859, 8) , (register, 0x206, 1)",
    "(register, 0x38, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x1852, 8)",
    " ---  CALL (ram, 0x1380, 8)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0xfffffffffffffec8, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)",
    "(register, 0xa0, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x90, 8)",
    "(register, 0x38, 8) COPY (unique, 0x3200, 8)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0xfffffffffffffeb8, 8)",
    "(register, 0x30, 8) COPY (unique, 0x3200, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x186c, 8)",
    " ---  CALL (ram, 0x810, 8)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x80, 8)",
    "(unique, 0x5500, 8) COPY (register, 0xa0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (unique, 0x5500, 8)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0xfffffffffffffec0, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x200, 1) INT_LESS (register, 0x38, 8) , (register, 0xb8, 8)",
    "(register, 0x20b, 1) INT_SBORROW (register, 0x38, 8) , (register, 0xb8, 8)",
    "(unique, 0x25c80, 8) INT_SUB (register, 0x38, 8) , (register, 0xb8, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x25c80, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x25c80, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x25c80, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x1884, 8) , (register, 0x206, 1)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x1884, 8)",
    " ---  CALL (ram, 0x6108, 8)",
    "(register, 0x0, 8) COPY (ram, 0x6158, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)",
    "(register, 0x0, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffd8, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x200, 1) INT_LESS (register, 0x0, 8) , (unique, 0xc280, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x20b, 1) INT_SBORROW (register, 0x0, 8) , (unique, 0xc280, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(unique, 0x26180, 8) INT_SUB (register, 0x0, 8) , (unique, 0xc280, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x26180, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x26180, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x26180, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0xcb80, 1) BOOL_NEGATE (register, 0x206, 1)",
    " ---  CBRANCH (ram, 0x18a4, 8) , (unique, 0xcb80, 1)",
    "(register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x130, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x130, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x130, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0xa0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0xb0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0xb8, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  RETURN (register, 0x288, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x18a9, 8)",
    " ---  CALL (ram, 0x6150, 8)"
  ],
  "__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_": [],
  "__ZN6spdlog5sinks9base_sinkINS_7details10null_mutexEE11set_patternERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEE": [
    "(unique, 0xef80, 8) COPY (register, 0x28, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x28, 8) COPY (register, 0x20, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)",
    "(register, 0x0, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x40, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x0, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  BRANCHIND (register, 0x0, 8)"
  ],
  "__ZN6spdlog5sinks15basic_file_sinkINS_7details10null_mutexEEC2ERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEEbRKNS_19file_event_handlersE": [
    "(unique, 0xef80, 8) COPY (register, 0x28, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x28, 8) COPY (register, 0x20, 8)",
    "(unique, 0xef80, 8) COPY (register, 0xb8, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0xb0, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0xa8, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0xa0, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x200, 1) INT_LESS (register, 0x20, 8) , (const, 0x28, 8)",
    "(register, 0x20b, 1) INT_SBORROW (register, 0x20, 8) , (const, 0x28, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x28, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0xa0, 8) COPY (register, 0x8, 8)",
    "(register, 0xb8, 4) COPY (register, 0x10, 4)",
    "(register, 0xb8, 8) INT_ZEXT (register, 0xb8, 4)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffb8, 8)",
    "(unique, 0x5500, 8) COPY (register, 0x30, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5500, 8)",
    "(register, 0x18, 8) COPY (register, 0x38, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x38, 8) , (const, 0x8, 8)",
    "(unique, 0x5780, 4) COPY (const, 0x0, 4)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5780, 4)",
    "(register, 0xb0, 8) COPY (ram, 0x3848, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0xb0, 8) , (const, 0x10, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0xb0, 8) , (const, 0x10, 8)",
    "(register, 0xb0, 8) INT_ADD (register, 0xb0, 8) , (const, 0x10, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0xb0, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0xb0, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0xb0, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0x5500, 8) COPY (register, 0xb0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (unique, 0x5500, 8)",
    "(register, 0x38, 8) COPY (const, 0xc0, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0xe5d, 8)",
    " ---  CALL (ram, 0x6110, 8)",
    "(register, 0xa8, 8) COPY (register, 0x0, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffc0, 8)",
    "(unique, 0x5700, 2) COPY (const, 0xa02, 2)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5700, 2)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffc2, 8)",
    "(unique, 0x5680, 1) COPY (const, 0x0, 1)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5680, 1)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffc0, 8)",
    "(register, 0x10, 8) COPY (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (register, 0x0, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(register, 0x30, 4) INT_XOR (register, 0x30, 4) , (register, 0x30, 4)",
    "(register, 0x30, 8) INT_ZEXT (register, 0x30, 4)",
    "(register, 0x207, 1) INT_SLESS (register, 0x30, 4) , (const, 0x0, 4)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x0, 4)",
    "(unique, 0x13400, 4) INT_AND (register, 0x30, 4) , (const, 0xff, 4)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 4)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0xe78, 8)",
    " ---  CALL (ram, 0x6020, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffc0, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0xc000, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(unique, 0x55980, 1) INT_AND (unique, 0xc000, 1) , (const, 0x1, 1)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x55980, 1) , (const, 0x0, 1)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x55980, 1) , (const, 0x0, 1)",
    "(unique, 0x13400, 1) INT_AND (unique, 0x55980, 1) , (const, 0xff, 1)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 1)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0xe87, 8) , (register, 0x206, 1)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffd0, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0xe87, 8)",
    " ---  CALL (ram, 0x6108, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x10, 8)",
    "(unique, 0x5500, 8) COPY (register, 0xa8, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5500, 8)",
    "(register, 0x0, 8) COPY (ram, 0x3628, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0x0, 8) , (const, 0x10, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x0, 8) , (const, 0x10, 8)",
    "(register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x10, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x0, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x0, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0x5500, 8) COPY (register, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (register, 0x18, 8) , (unique, 0x5500, 8)",
    "(register, 0x0, 8) COPY (const, 0xa00000005, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x20, 8)",
    "(unique, 0x5500, 8) COPY (register, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5500, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x50, 8)",
    "(register, 0x38, 8) COPY (unique, 0x3100, 8)",
    "(register, 0x1200, 4) INT_XOR (register, 0x1200, 4) , (register, 0x1200, 4)",
    "(register, 0x1204, 4) INT_XOR (register, 0x1204, 4) , (register, 0x1204, 4)",
    "(register, 0x1208, 4) INT_XOR (register, 0x1208, 4) , (register, 0x1208, 4)",
    "(register, 0x120c, 4) INT_XOR (register, 0x120c, 4) , (register, 0x120c, 4)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x28, 8)",
    "(unique, 0x5580, 16) COPY (register, 0x1200, 16)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5580, 16)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x38, 8)",
    "(unique, 0x5580, 16) COPY (register, 0x1200, 16)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5580, 16)",
    "(register, 0x30, 8) COPY (register, 0xa0, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0xebe, 8)",
    " ---  CALL (ram, 0x2880, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x20, 8)",
    "(register, 0xa0, 8) COPY (unique, 0x3100, 8)",
    "(register, 0x10, 4) INT_ZEXT (register, 0xb8, 1)",
    "(register, 0x10, 8) INT_ZEXT (register, 0x10, 4)",
    "(register, 0x38, 8) COPY (register, 0xa0, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffb8, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x30, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0xed2, 8)",
    " ---  CALL (ram, 0x280, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x28, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x28, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x28, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0xa0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0xa8, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0xb0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0xb8, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  RETURN (register, 0x288, 8)"
  ],
  "__ZN6spdlog5sinks18rotating_file_sinkINS_7details10null_mutexEED0Ev": [
    "(unique, 0xef80, 8) COPY (register, 0x28, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x28, 8) COPY (register, 0x20, 8)",
    "(unique, 0xef80, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0x0, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x18, 8) COPY (register, 0x38, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0x38, 8) , (const, 0x50, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x38, 8) , (const, 0x50, 8)",
    "(register, 0x38, 8) INT_ADD (register, 0x38, 8) , (const, 0x50, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x38, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x38, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x38, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x2832, 8)",
    " ---  CALL (ram, 0xa0, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x20, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0xc000, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(unique, 0x55980, 1) INT_AND (unique, 0xc000, 1) , (const, 0x1, 1)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x55980, 1) , (const, 0x0, 1)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x55980, 1) , (const, 0x0, 1)",
    "(unique, 0x13400, 1) INT_AND (unique, 0x55980, 1) , (const, 0xff, 1)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 1)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x2841, 8) , (register, 0x206, 1)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x30, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x2841, 8)",
    " ---  CALL (ram, 0x6108, 8)",
    "(register, 0x0, 8) COPY (ram, 0x3848, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0x0, 8) , (const, 0x10, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x0, 8) , (const, 0x10, 8)",
    "(register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x10, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x0, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x0, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0x5500, 8) COPY (register, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (register, 0x18, 8) , (unique, 0x5500, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x10, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x10, 8)",
    "(unique, 0x5800, 8) COPY (const, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5800, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x56080, 8) INT_AND (register, 0x38, 8) , (register, 0x38, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x56080, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x2866, 8) , (register, 0x206, 1)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)",
    "(register, 0x0, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x8, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(unique, 0x23d80, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x2866, 8)",
    " ---  CALLIND (unique, 0x23d80, 8)",
    "(register, 0x38, 8) COPY (register, 0x18, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  BRANCH (ram, 0x6108, 8)"
  ],
  "__ZN6spdlog17pattern_formatterC1ENS_17pattern_time_typeENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE": [],
  "__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6insertEmPKc": [],
  "__ZN6spdlog5sinks9base_sinkINS_7details10null_mutexEE13set_formatterENSt3__110unique_ptrINS_9formatterENS5_14default_deleteIS7_EEEE": [
    "(unique, 0xef80, 8) COPY (register, 0x28, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x28, 8) COPY (register, 0x20, 8)",
    "(unique, 0xef80, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0x0, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)",
    "(register, 0x0, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x5800, 8) COPY (const, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (register, 0x30, 8) , (unique, 0x5800, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xfffffffffffffff0, 8)",
    "(unique, 0x5500, 8) COPY (register, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5500, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)",
    "(register, 0x0, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xfffffffffffffff0, 8)",
    "(register, 0x30, 8) COPY (unique, 0x3100, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x48, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(unique, 0x23d80, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x25ee, 8)",
    " ---  CALLIND (unique, 0x23d80, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xfffffffffffffff0, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xfffffffffffffff0, 8)",
    "(unique, 0x5800, 8) COPY (const, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5800, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x56080, 8) INT_AND (register, 0x38, 8) , (register, 0x38, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x56080, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x2605, 8) , (register, 0x206, 1)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)",
    "(register, 0x0, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x8, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(unique, 0x23d80, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x2605, 8)",
    " ---  CALLIND (unique, 0x23d80, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  RETURN (register, 0x288, 8)"
  ],
  "__ZN3fmt2v919basic_memory_bufferIcLm250ENSt3__19allocatorIcEEE4growEm": [
    "(unique, 0xef80, 8) COPY (register, 0x28, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x28, 8) COPY (register, 0x20, 8)",
    "(unique, 0xef80, 8) COPY (register, 0xb8, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0xb0, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0x0, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0xb0, 8) COPY (register, 0x38, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x38, 8) , (const, 0x8, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x18, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x38, 8) , (const, 0x18, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x0, 8) COPY (unique, 0xc280, 8)",
    "(register, 0xb8, 8) COPY (register, 0x0, 8)",
    "(unique, 0x54200, 8) INT_AND (register, 0xb8, 8) , (const, 0x1, 8)",
    "(register, 0x200, 1) INT_NOTEQUAL (unique, 0x54200, 8) , (const, 0x0, 8)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(register, 0xb8, 8) INT_RIGHT (register, 0xb8, 8) , (const, 0x1, 4)",
    "(register, 0x207, 1) INT_SLESS (register, 0xb8, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0xb8, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0xb8, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x200, 1) INT_CARRY (register, 0xb8, 8) , (register, 0x0, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0xb8, 8) , (register, 0x0, 8)",
    "(register, 0xb8, 8) INT_ADD (register, 0xb8, 8) , (register, 0x0, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0xb8, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0xb8, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0xb8, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x200, 1) INT_LESS (register, 0xb8, 8) , (register, 0x30, 8)",
    "(register, 0x20b, 1) INT_SBORROW (register, 0xb8, 8) , (register, 0x30, 8)",
    "(unique, 0x25c80, 8) INT_SUB (register, 0xb8, 8) , (register, 0x30, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x25c80, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x25c80, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x25c80, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0xcc80, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)",
    "(unique, 0x24d80, 1) BOOL_NEGATE (unique, 0xcc80, 1)",
    " ---  CBRANCH (ram, 0x2ce5, 8) , (unique, 0x24d80, 1)",
    "(register, 0xb8, 8) COPY (register, 0x30, 8)",
    "(register, 0x38, 8) COPY (register, 0xb8, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x2ced, 8)",
    " ---  CALL (ram, 0x6110, 8)",
    "(register, 0x8, 8) COPY (register, 0x0, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0xb0, 8) , (const, 0x10, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x10, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x56080, 8) INT_AND (register, 0x10, 8) , (register, 0x10, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x56080, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x2ee7, 8) , (register, 0x206, 1)",
    "(register, 0x30, 8) COPY (register, 0x18, 8)",
    "(register, 0x200, 1) INT_LESS (register, 0x10, 8) , (const, 0x8, 8)",
    "(register, 0x20b, 1) INT_SBORROW (register, 0x10, 8) , (const, 0x8, 8)",
    "(unique, 0x25880, 8) INT_SUB (register, 0x10, 8) , (const, 0x8, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x25880, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x25880, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x25880, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x2e42, 8) , (register, 0x200, 1)",
    "(register, 0x38, 8) COPY (register, 0x0, 8)",
    "(register, 0x200, 1) INT_LESS (register, 0x38, 8) , (register, 0x18, 8)",
    "(register, 0x20b, 1) INT_SBORROW (register, 0x38, 8) , (register, 0x18, 8)",
    "(register, 0x38, 8) INT_SUB (register, 0x38, 8) , (register, 0x18, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x38, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x38, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x38, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x30, 8) COPY (register, 0x18, 8)",
    "(register, 0x200, 1) INT_LESS (register, 0x38, 8) , (const, 0x20, 8)",
    "(register, 0x20b, 1) INT_SBORROW (register, 0x38, 8) , (const, 0x20, 8)",
    "(unique, 0x25880, 8) INT_SUB (register, 0x38, 8) , (const, 0x20, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x25880, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x25880, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x25880, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x2e42, 8) , (register, 0x200, 1)",
    "(register, 0x200, 1) INT_LESS (register, 0x10, 8) , (const, 0x20, 8)",
    "(register, 0x20b, 1) INT_SBORROW (register, 0x10, 8) , (const, 0x20, 8)",
    "(unique, 0x25880, 8) INT_SUB (register, 0x10, 8) , (const, 0x20, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x25880, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x25880, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x25880, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0xca80, 1) BOOL_NEGATE (register, 0x200, 1)",
    " ---  CBRANCH (ram, 0x2d2a, 8) , (unique, 0xca80, 1)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(register, 0x38, 4) INT_XOR (register, 0x38, 4) , (register, 0x38, 4)",
    "(register, 0x38, 8) INT_ZEXT (register, 0x38, 4)",
    "(register, 0x207, 1) INT_SLESS (register, 0x38, 4) , (const, 0x0, 4)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x38, 4) , (const, 0x0, 4)",
    "(unique, 0x13400, 4) INT_AND (register, 0x38, 4) , (const, 0xff, 4)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 4)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  BRANCH (ram, 0x2e0d, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x10, 8) , (const, 0xffffffffffffffe0, 8)",
    "(register, 0x80, 8) COPY (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (register, 0x80, 8)",
    "(unique, 0x54600, 4) INT_AND (const, 0x5, 4) , (const, 0x3f, 4)",
    "(unique, 0x54680, 8) COPY (register, 0x38, 8)",
    "(register, 0x38, 8) INT_RIGHT (register, 0x38, 8) , (unique, 0x54600, 4)",
    "(unique, 0x16900, 1) INT_NOTEQUAL (unique, 0x54600, 4) , (const, 0x0, 4)",
    "(unique, 0x16980, 4) INT_SUB (unique, 0x54600, 4) , (const, 0x1, 4)",
    "(unique, 0x16a00, 8) INT_RIGHT (unique, 0x54680, 8) , (unique, 0x16980, 4)",
    "(unique, 0x16a80, 8) INT_AND (unique, 0x16a00, 8) , (const, 0x1, 8)",
    "(unique, 0x16b80, 1) INT_NOTEQUAL (unique, 0x16a80, 8) , (const, 0x0, 8)",
    "(unique, 0x16c00, 1) BOOL_NEGATE (unique, 0x16900, 1)",
    "(unique, 0x16c80, 1) INT_AND (unique, 0x16c00, 1) , (register, 0x200, 1)",
    "(unique, 0x16d00, 1) INT_AND (unique, 0x16900, 1) , (unique, 0x16b80, 1)",
    "(register, 0x200, 1) INT_OR (unique, 0x16c80, 1) , (unique, 0x16d00, 1)",
    "(unique, 0x16e80, 1) INT_EQUAL (unique, 0x54600, 4) , (const, 0x1, 4)",
    "(unique, 0x16f80, 1) INT_SLESS (unique, 0x54680, 8) , (const, 0x0, 8)",
    "(unique, 0x17000, 1) BOOL_NEGATE (unique, 0x16e80, 1)",
    "(unique, 0x17080, 1) INT_AND (unique, 0x17000, 1) , (register, 0x20b, 1)",
    "(unique, 0x17100, 1) INT_AND (unique, 0x16e80, 1) , (unique, 0x16f80, 1)",
    "(register, 0x20b, 1) INT_OR (unique, 0x17080, 1) , (unique, 0x17100, 1)",
    "(unique, 0x13680, 1) INT_NOTEQUAL (unique, 0x54600, 4) , (const, 0x0, 4)",
    "(unique, 0x13780, 1) INT_SLESS (register, 0x38, 8) , (const, 0x0, 8)",
    "(unique, 0x13800, 1) BOOL_NEGATE (unique, 0x13680, 1)",
    "(unique, 0x13880, 1) INT_AND (unique, 0x13800, 1) , (register, 0x207, 1)",
    "(unique, 0x13900, 1) INT_AND (unique, 0x13680, 1) , (unique, 0x13780, 1)",
    "(register, 0x207, 1) INT_OR (unique, 0x13880, 1) , (unique, 0x13900, 1)",
    "(unique, 0x13a80, 1) INT_EQUAL (register, 0x38, 8) , (const, 0x0, 8)",
    "(unique, 0x13b00, 1) BOOL_NEGATE (unique, 0x13680, 1)",
    "(unique, 0x13b80, 1) INT_AND (unique, 0x13b00, 1) , (register, 0x206, 1)",
    "(unique, 0x13c00, 1) INT_AND (unique, 0x13680, 1) , (unique, 0x13a80, 1)",
    "(register, 0x206, 1) INT_OR (unique, 0x13b80, 1) , (unique, 0x13c00, 1)",
    "(unique, 0x13d00, 8) INT_AND (register, 0x38, 8) , (const, 0xff, 8)",
    "(unique, 0x13d80, 1) POPCOUNT (unique, 0x13d00, 8)",
    "(unique, 0x13e00, 1) INT_AND (unique, 0x13d80, 1) , (const, 0x1, 1)",
    "(unique, 0x13f00, 1) INT_EQUAL (unique, 0x13e00, 1) , (const, 0x0, 1)",
    "(unique, 0x13f80, 1) BOOL_NEGATE (unique, 0x13680, 1)",
    "(unique, 0x14000, 1) INT_AND (unique, 0x13f80, 1) , (register, 0x202, 1)",
    "(unique, 0x14080, 1) INT_AND (unique, 0x13680, 1) , (unique, 0x13f00, 1)",
    "(register, 0x202, 1) INT_OR (unique, 0x14000, 1) , (unique, 0x14080, 1)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x38, 8) , (const, 0x1, 8)",
    "(register, 0x38, 8) INT_ADD (register, 0x38, 8) , (const, 0x1, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x38, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x38, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x38, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x30, 4) COPY (register, 0x38, 4)",
    "(register, 0x30, 8) INT_ZEXT (register, 0x30, 4)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(register, 0x30, 4) INT_AND (register, 0x30, 4) , (const, 0x3, 4)",
    "(register, 0x30, 8) INT_ZEXT (register, 0x30, 4)",
    "(register, 0x207, 1) INT_SLESS (register, 0x30, 4) , (const, 0x0, 4)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x0, 4)",
    "(unique, 0x13400, 4) INT_AND (register, 0x30, 4) , (const, 0xff, 4)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 4)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x200, 1) INT_LESS (register, 0x80, 8) , (const, 0x60, 8)",
    "(register, 0x20b, 1) INT_SBORROW (register, 0x80, 8) , (const, 0x60, 8)",
    "(unique, 0x25880, 8) INT_SUB (register, 0x80, 8) , (const, 0x60, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x25880, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x25880, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x25880, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0xca80, 1) BOOL_NEGATE (register, 0x200, 1)",
    " ---  CBRANCH (ram, 0x2d48, 8) , (unique, 0xca80, 1)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(register, 0x80, 4) INT_XOR (register, 0x80, 4) , (register, 0x80, 4)",
    "(register, 0x80, 8) INT_ZEXT (register, 0x80, 4)",
    "(register, 0x207, 1) INT_SLESS (register, 0x80, 4) , (const, 0x0, 4)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x80, 4) , (const, 0x0, 4)",
    "(unique, 0x13400, 4) INT_AND (register, 0x80, 4) , (const, 0xff, 4)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 4)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  BRANCH (ram, 0x2db8, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(register, 0x38, 8) INT_AND (register, 0x38, 8) , (const, 0xfffffffffffffffc, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x38, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x38, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x38, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(register, 0x80, 4) INT_XOR (register, 0x80, 4) , (register, 0x80, 4)",
    "(register, 0x80, 8) INT_ZEXT (register, 0x80, 4)",
    "(register, 0x207, 1) INT_SLESS (register, 0x80, 4) , (const, 0x0, 4)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x80, 4) , (const, 0x0, 4)",
    "(unique, 0x13400, 4) INT_AND (register, 0x80, 4) , (const, 0xff, 4)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 4)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0x3300, 8) INT_MULT (register, 0x80, 8) , (const, 0x1, 8)",
    "(unique, 0x3400, 8) INT_ADD (register, 0x18, 8) , (unique, 0x3300, 8)",
    "(unique, 0x5580, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8)",
    "(unique, 0x7c980, 16) COPY (unique, 0x5580, 16)",
    "(register, 0x1200, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0x0, 4)",
    "(register, 0x1204, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0x4, 4)",
    "(register, 0x1208, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0x8, 4)",
    "(register, 0x120c, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0xc, 4)",
    "(unique, 0x3880, 8) INT_ADD (const, 0x10, 8) , (register, 0x18, 8)",
    "(unique, 0x3900, 8) INT_MULT (register, 0x80, 8) , (const, 0x1, 8)",
    "(unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8)",
    "(unique, 0x5580, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8)",
    "(unique, 0x7c980, 16) COPY (unique, 0x5580, 16)",
    "(register, 0x1220, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0x0, 4)",
    "(register, 0x1224, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0x4, 4)",
    "(register, 0x1228, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0x8, 4)",
    "(register, 0x122c, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0xc, 4)",
    "(unique, 0x3300, 8) INT_MULT (register, 0x80, 8) , (const, 0x1, 8)",
    "(unique, 0x3400, 8) INT_ADD (register, 0x8, 8) , (unique, 0x3300, 8)",
    "(unique, 0x5580, 16) COPY (register, 0x1200, 16)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (unique, 0x5580, 16)",
    "(unique, 0x3880, 8) INT_ADD (const, 0x10, 8) , (register, 0x8, 8)",
    "(unique, 0x3900, 8) INT_MULT (register, 0x80, 8) , (const, 0x1, 8)",
    "(unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8)",
    "(unique, 0x5580, 16) COPY (register, 0x1220, 16)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (unique, 0x5580, 16)",
    "(unique, 0x3880, 8) INT_ADD (const, 0x20, 8) , (register, 0x18, 8)",
    "(unique, 0x3900, 8) INT_MULT (register, 0x80, 8) , (const, 0x1, 8)",
    "(unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8)",
    "(unique, 0x5580, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8)",
    "(unique, 0x7c980, 16) COPY (unique, 0x5580, 16)",
    "(register, 0x1200, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0x0, 4)",
    "(register, 0x1204, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0x4, 4)",
    "(register, 0x1208, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0x8, 4)",
    "(register, 0x120c, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0xc, 4)",
    "(unique, 0x3880, 8) INT_ADD (const, 0x30, 8) , (register, 0x18, 8)",
    "(unique, 0x3900, 8) INT_MULT (register, 0x80, 8) , (const, 0x1, 8)",
    "(unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8)",
    "(unique, 0x5580, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8)",
    "(unique, 0x7c980, 16) COPY (unique, 0x5580, 16)",
    "(register, 0x1220, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0x0, 4)",
    "(register, 0x1224, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0x4, 4)",
    "(register, 0x1228, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0x8, 4)",
    "(register, 0x122c, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0xc, 4)",
    "(unique, 0x3880, 8) INT_ADD (const, 0x20, 8) , (register, 0x8, 8)",
    "(unique, 0x3900, 8) INT_MULT (register, 0x80, 8) , (const, 0x1, 8)",
    "(unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8)",
    "(unique, 0x5580, 16) COPY (register, 0x1200, 16)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (unique, 0x5580, 16)",
    "(unique, 0x3880, 8) INT_ADD (const, 0x30, 8) , (register, 0x8, 8)",
    "(unique, 0x3900, 8) INT_MULT (register, 0x80, 8) , (const, 0x1, 8)",
    "(unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8)",
    "(unique, 0x5580, 16) COPY (register, 0x1220, 16)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (unique, 0x5580, 16)",
    "(unique, 0x3880, 8) INT_ADD (const, 0x40, 8) , (register, 0x18, 8)",
    "(unique, 0x3900, 8) INT_MULT (register, 0x80, 8) , (const, 0x1, 8)",
    "(unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8)",
    "(unique, 0x5580, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8)",
    "(unique, 0x7c980, 16) COPY (unique, 0x5580, 16)",
    "(register, 0x1200, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0x0, 4)",
    "(register, 0x1204, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0x4, 4)",
    "(register, 0x1208, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0x8, 4)",
    "(register, 0x120c, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0xc, 4)",
    "(unique, 0x3880, 8) INT_ADD (const, 0x50, 8) , (register, 0x18, 8)",
    "(unique, 0x3900, 8) INT_MULT (register, 0x80, 8) , (const, 0x1, 8)",
    "(unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8)",
    "(unique, 0x5580, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8)",
    "(unique, 0x7c980, 16) COPY (unique, 0x5580, 16)",
    "(register, 0x1220, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0x0, 4)",
    "(register, 0x1224, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0x4, 4)",
    "(register, 0x1228, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0x8, 4)",
    "(register, 0x122c, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0xc, 4)",
    "(unique, 0x3880, 8) INT_ADD (const, 0x40, 8) , (register, 0x8, 8)",
    "(unique, 0x3900, 8) INT_MULT (register, 0x80, 8) , (const, 0x1, 8)",
    "(unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8)",
    "(unique, 0x5580, 16) COPY (register, 0x1200, 16)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (unique, 0x5580, 16)",
    "(unique, 0x3880, 8) INT_ADD (const, 0x50, 8) , (register, 0x8, 8)",
    "(unique, 0x3900, 8) INT_MULT (register, 0x80, 8) , (const, 0x1, 8)",
    "(unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8)",
    "(unique, 0x5580, 16) COPY (register, 0x1220, 16)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (unique, 0x5580, 16)",
    "(unique, 0x3880, 8) INT_ADD (const, 0x60, 8) , (register, 0x18, 8)",
    "(unique, 0x3900, 8) INT_MULT (register, 0x80, 8) , (const, 0x1, 8)",
    "(unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8)",
    "(unique, 0x5580, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8)",
    "(unique, 0x7c980, 16) COPY (unique, 0x5580, 16)",
    "(register, 0x1200, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0x0, 4)",
    "(register, 0x1204, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0x4, 4)",
    "(register, 0x1208, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0x8, 4)",
    "(register, 0x120c, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0xc, 4)",
    "(unique, 0x3880, 8) INT_ADD (const, 0x70, 8) , (register, 0x18, 8)",
    "(unique, 0x3900, 8) INT_MULT (register, 0x80, 8) , (const, 0x1, 8)",
    "(unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8)",
    "(unique, 0x5580, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8)",
    "(unique, 0x7c980, 16) COPY (unique, 0x5580, 16)",
    "(register, 0x1220, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0x0, 4)",
    "(register, 0x1224, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0x4, 4)",
    "(register, 0x1228, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0x8, 4)",
    "(register, 0x122c, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0xc, 4)",
    "(unique, 0x3880, 8) INT_ADD (const, 0x60, 8) , (register, 0x8, 8)",
    "(unique, 0x3900, 8) INT_MULT (register, 0x80, 8) , (const, 0x1, 8)",
    "(unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8)",
    "(unique, 0x5580, 16) COPY (register, 0x1200, 16)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (unique, 0x5580, 16)",
    "(unique, 0x3880, 8) INT_ADD (const, 0x70, 8) , (register, 0x8, 8)",
    "(unique, 0x3900, 8) INT_MULT (register, 0x80, 8) , (const, 0x1, 8)",
    "(unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8)",
    "(unique, 0x5580, 16) COPY (register, 0x1220, 16)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (unique, 0x5580, 16)",
    "(register, 0x200, 1) INT_LESS (register, 0x80, 8) , (const, 0xffffffffffffff80, 8)",
    "(register, 0x20b, 1) INT_SBORROW (register, 0x80, 8) , (const, 0xffffffffffffff80, 8)",
    "(register, 0x80, 8) INT_SUB (register, 0x80, 8) , (const, 0xffffffffffffff80, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x80, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x80, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x80, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x200, 1) INT_CARRY (register, 0x38, 8) , (const, 0xfffffffffffffffc, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x38, 8) , (const, 0xfffffffffffffffc, 8)",
    "(register, 0x38, 8) INT_ADD (register, 0x38, 8) , (const, 0xfffffffffffffffc, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x38, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x38, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x38, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0xcb80, 1) BOOL_NEGATE (register, 0x206, 1)",
    " ---  CBRANCH (ram, 0x2d50, 8) , (unique, 0xcb80, 1)",
    "(register, 0x38, 8) COPY (register, 0x10, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(register, 0x38, 8) INT_AND (register, 0x38, 8) , (const, 0xffffffffffffffe0, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x38, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x38, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x38, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x56080, 8) INT_AND (register, 0x30, 8) , (register, 0x30, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x56080, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x2dff, 8) , (register, 0x206, 1)",
    "(unique, 0x3300, 8) INT_MULT (register, 0x80, 8) , (const, 0x1, 8)",
    "(unique, 0x3400, 8) INT_ADD (register, 0x18, 8) , (unique, 0x3300, 8)",
    "(register, 0x88, 8) COPY (unique, 0x3400, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0x88, 8) , (const, 0x10, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x88, 8) , (const, 0x10, 8)",
    "(register, 0x88, 8) INT_ADD (register, 0x88, 8) , (const, 0x10, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x88, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x88, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x88, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x200, 1) INT_CARRY (register, 0x80, 8) , (register, 0x0, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x80, 8) , (register, 0x0, 8)",
    "(register, 0x80, 8) INT_ADD (register, 0x80, 8) , (register, 0x0, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x80, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x80, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x80, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x200, 1) INT_CARRY (register, 0x80, 8) , (const, 0x10, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x80, 8) , (const, 0x10, 8)",
    "(register, 0x80, 8) INT_ADD (register, 0x80, 8) , (const, 0x10, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x80, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x80, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x80, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0x50680, 4) INT_AND (const, 0x5, 4) , (const, 0x3f, 4)",
    "(unique, 0x50700, 8) COPY (register, 0x30, 8)",
    "(register, 0x30, 8) INT_LEFT (register, 0x30, 8) , (unique, 0x50680, 4)",
    "(unique, 0x15800, 1) INT_NOTEQUAL (unique, 0x50680, 4) , (const, 0x0, 4)",
    "(unique, 0x15880, 4) INT_SUB (unique, 0x50680, 4) , (const, 0x1, 4)",
    "(unique, 0x15900, 8) INT_LEFT (unique, 0x50700, 8) , (unique, 0x15880, 4)",
    "(unique, 0x15a00, 1) INT_SLESS (unique, 0x15900, 8) , (const, 0x0, 8)",
    "(unique, 0x15a80, 1) BOOL_NEGATE (unique, 0x15800, 1)",
    "(unique, 0x15b00, 1) INT_AND (unique, 0x15a80, 1) , (register, 0x200, 1)",
    "(unique, 0x15b80, 1) INT_AND (unique, 0x15800, 1) , (unique, 0x15a00, 1)",
    "(register, 0x200, 1) INT_OR (unique, 0x15b00, 1) , (unique, 0x15b80, 1)",
    "(unique, 0x15d00, 1) INT_EQUAL (unique, 0x50680, 4) , (const, 0x1, 4)",
    "(unique, 0x15d80, 1) INT_SLESS (register, 0x30, 8) , (const, 0x0, 8)",
    "(unique, 0x15e80, 1) INT_XOR (register, 0x200, 1) , (unique, 0x15d80, 1)",
    "(unique, 0x15f00, 1) BOOL_NEGATE (unique, 0x15d00, 1)",
    "(unique, 0x15f80, 1) INT_AND (unique, 0x15f00, 1) , (register, 0x20b, 1)",
    "(unique, 0x16000, 1) INT_AND (unique, 0x15d00, 1) , (unique, 0x15e80, 1)",
    "(register, 0x20b, 1) INT_OR (unique, 0x15f80, 1) , (unique, 0x16000, 1)",
    "(unique, 0x13680, 1) INT_NOTEQUAL (unique, 0x50680, 4) , (const, 0x0, 4)",
    "(unique, 0x13780, 1) INT_SLESS (register, 0x30, 8) , (const, 0x0, 8)",
    "(unique, 0x13800, 1) BOOL_NEGATE (unique, 0x13680, 1)",
    "(unique, 0x13880, 1) INT_AND (unique, 0x13800, 1) , (register, 0x207, 1)",
    "(unique, 0x13900, 1) INT_AND (unique, 0x13680, 1) , (unique, 0x13780, 1)",
    "(register, 0x207, 1) INT_OR (unique, 0x13880, 1) , (unique, 0x13900, 1)",
    "(unique, 0x13a80, 1) INT_EQUAL (register, 0x30, 8) , (const, 0x0, 8)",
    "(unique, 0x13b00, 1) BOOL_NEGATE (unique, 0x13680, 1)",
    "(unique, 0x13b80, 1) INT_AND (unique, 0x13b00, 1) , (register, 0x206, 1)",
    "(unique, 0x13c00, 1) INT_AND (unique, 0x13680, 1) , (unique, 0x13a80, 1)",
    "(register, 0x206, 1) INT_OR (unique, 0x13b80, 1) , (unique, 0x13c00, 1)",
    "(unique, 0x13d00, 8) INT_AND (register, 0x30, 8) , (const, 0xff, 8)",
    "(unique, 0x13d80, 1) POPCOUNT (unique, 0x13d00, 8)",
    "(unique, 0x13e00, 1) INT_AND (unique, 0x13d80, 1) , (const, 0x1, 1)",
    "(unique, 0x13f00, 1) INT_EQUAL (unique, 0x13e00, 1) , (const, 0x0, 1)",
    "(unique, 0x13f80, 1) BOOL_NEGATE (unique, 0x13680, 1)",
    "(unique, 0x14000, 1) INT_AND (unique, 0x13f80, 1) , (register, 0x202, 1)",
    "(unique, 0x14080, 1) INT_AND (unique, 0x13680, 1) , (unique, 0x13f00, 1)",
    "(register, 0x202, 1) INT_OR (unique, 0x14000, 1) , (unique, 0x14080, 1)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(register, 0x90, 4) INT_XOR (register, 0x90, 4) , (register, 0x90, 4)",
    "(register, 0x90, 8) INT_ZEXT (register, 0x90, 4)",
    "(register, 0x207, 1) INT_SLESS (register, 0x90, 4) , (const, 0x0, 4)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x90, 4) , (const, 0x0, 4)",
    "(unique, 0x13400, 4) INT_AND (register, 0x90, 4) , (const, 0xff, 4)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 4)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0x3a80, 8) INT_MULT (register, 0x0, 8) , (const, 0x1, 8)",
    "(unique, 0x3b80, 8) INT_ADD (register, 0x0, 8) , (unique, 0x3a80, 8)",
    "(unique, 0x3880, 8) INT_ADD (const, 0xfffffffffffffff0, 8) , (register, 0x88, 8)",
    "(unique, 0x3900, 8) INT_MULT (register, 0x90, 8) , (const, 0x1, 8)",
    "(unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8)",
    "(unique, 0x5580, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8)",
    "(unique, 0x7c980, 16) COPY (unique, 0x5580, 16)",
    "(register, 0x1200, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0x0, 4)",
    "(register, 0x1204, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0x4, 4)",
    "(register, 0x1208, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0x8, 4)",
    "(register, 0x120c, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0xc, 4)",
    "(unique, 0x3300, 8) INT_MULT (register, 0x90, 8) , (const, 0x1, 8)",
    "(unique, 0x3400, 8) INT_ADD (register, 0x88, 8) , (unique, 0x3300, 8)",
    "(unique, 0x5580, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8)",
    "(unique, 0x7c980, 16) COPY (unique, 0x5580, 16)",
    "(register, 0x1220, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0x0, 4)",
    "(register, 0x1224, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0x4, 4)",
    "(register, 0x1228, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0x8, 4)",
    "(register, 0x122c, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0xc, 4)",
    "(unique, 0x3880, 8) INT_ADD (const, 0xfffffffffffffff0, 8) , (register, 0x80, 8)",
    "(unique, 0x3900, 8) INT_MULT (register, 0x90, 8) , (const, 0x1, 8)",
    "(unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8)",
    "(unique, 0x5580, 16) COPY (register, 0x1200, 16)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (unique, 0x5580, 16)",
    "(unique, 0x3300, 8) INT_MULT (register, 0x90, 8) , (const, 0x1, 8)",
    "(unique, 0x3400, 8) INT_ADD (register, 0x80, 8) , (unique, 0x3300, 8)",
    "(unique, 0x5580, 16) COPY (register, 0x1220, 16)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (unique, 0x5580, 16)",
    "(register, 0x200, 1) INT_CARRY (register, 0x90, 8) , (const, 0x20, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x90, 8) , (const, 0x20, 8)",
    "(register, 0x90, 8) INT_ADD (register, 0x90, 8) , (const, 0x20, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x90, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x90, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x90, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x200, 1) INT_LESS (register, 0x30, 8) , (register, 0x90, 8)",
    "(register, 0x20b, 1) INT_SBORROW (register, 0x30, 8) , (register, 0x90, 8)",
    "(unique, 0x25c80, 8) INT_SUB (register, 0x30, 8) , (register, 0x90, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x25c80, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x25c80, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x25c80, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0xcb80, 1) BOOL_NEGATE (register, 0x206, 1)",
    " ---  CBRANCH (ram, 0x2de0, 8) , (unique, 0xcb80, 1)",
    "(register, 0x200, 1) INT_LESS (register, 0x10, 8) , (register, 0x38, 8)",
    "(register, 0x20b, 1) INT_SBORROW (register, 0x10, 8) , (register, 0x38, 8)",
    "(unique, 0x25c80, 8) INT_SUB (register, 0x10, 8) , (register, 0x38, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x25c80, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x25c80, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x25c80, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x2ee7, 8) , (register, 0x206, 1)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x55980, 1) INT_AND (register, 0x10, 1) , (const, 0x18, 1)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x55980, 1) , (const, 0x0, 1)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x55980, 1) , (const, 0x0, 1)",
    "(unique, 0x13400, 1) INT_AND (unique, 0x55980, 1) , (const, 0xff, 1)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 1)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x2e3b, 8) , (register, 0x206, 1)",
    "(register, 0x80, 8) COPY (register, 0x10, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(register, 0x80, 8) INT_AND (register, 0x80, 8) , (const, 0xfffffffffffffff8, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x80, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x80, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x80, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x200, 1) INT_CARRY (register, 0x0, 8) , (register, 0x80, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x0, 8) , (register, 0x80, 8)",
    "(register, 0x0, 8) INT_ADD (register, 0x0, 8) , (register, 0x80, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x0, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x0, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0x3300, 8) INT_MULT (register, 0x80, 8) , (const, 0x1, 8)",
    "(unique, 0x3400, 8) INT_ADD (register, 0x18, 8) , (unique, 0x3300, 8)",
    "(register, 0x30, 8) COPY (unique, 0x3400, 8)",
    "(unique, 0x3a80, 8) INT_MULT (register, 0x0, 8) , (const, 0x1, 8)",
    "(unique, 0x3b80, 8) INT_ADD (register, 0x0, 8) , (unique, 0x3a80, 8)",
    "(unique, 0x3300, 8) INT_MULT (register, 0x38, 8) , (const, 0x1, 8)",
    "(unique, 0x3400, 8) INT_ADD (register, 0x18, 8) , (unique, 0x3300, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8)",
    "(register, 0x88, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3300, 8) INT_MULT (register, 0x38, 8) , (const, 0x1, 8)",
    "(unique, 0x3400, 8) INT_ADD (register, 0x8, 8) , (unique, 0x3300, 8)",
    "(unique, 0x5500, 8) COPY (register, 0x88, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (unique, 0x5500, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0x38, 8) , (const, 0x8, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x38, 8) , (const, 0x8, 8)",
    "(register, 0x38, 8) INT_ADD (register, 0x38, 8) , (const, 0x8, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x38, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x38, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x38, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x200, 1) INT_LESS (register, 0x80, 8) , (register, 0x38, 8)",
    "(register, 0x20b, 1) INT_SBORROW (register, 0x80, 8) , (register, 0x38, 8)",
    "(unique, 0x25c80, 8) INT_SUB (register, 0x80, 8) , (register, 0x38, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x25c80, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x25c80, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x25c80, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0xcb80, 1) BOOL_NEGATE (register, 0x206, 1)",
    " ---  CBRANCH (ram, 0x2e20, 8) , (unique, 0xcb80, 1)",
    "(register, 0x200, 1) INT_LESS (register, 0x10, 8) , (register, 0x80, 8)",
    "(register, 0x20b, 1) INT_SBORROW (register, 0x10, 8) , (register, 0x80, 8)",
    "(unique, 0x25c80, 8) INT_SUB (register, 0x10, 8) , (register, 0x80, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x25c80, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x25c80, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x25c80, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0xcb80, 1) BOOL_NEGATE (register, 0x206, 1)",
    " ---  CBRANCH (ram, 0x2e42, 8) , (unique, 0xcb80, 1)",
    " ---  BRANCH (ram, 0x2ee7, 8)",
    "(unique, 0x3300, 8) INT_MULT (register, 0x38, 8) , (const, 0x1, 8)",
    "(unique, 0x3400, 8) INT_ADD (register, 0x18, 8) , (unique, 0x3300, 8)",
    "(register, 0x30, 8) COPY (unique, 0x3400, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0x0, 8) , (register, 0x38, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x0, 8) , (register, 0x38, 8)",
    "(register, 0x0, 8) INT_ADD (register, 0x0, 8) , (register, 0x38, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x0, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x0, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x200, 1) INT_CARRY (register, 0x10, 8) , (register, 0x18, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x10, 8) , (register, 0x18, 8)",
    "(register, 0x10, 8) INT_ADD (register, 0x10, 8) , (register, 0x18, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x10, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x10, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x10, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x80, 4) COPY (register, 0x10, 4)",
    "(register, 0x80, 8) INT_ZEXT (register, 0x80, 4)",
    "(register, 0x200, 1) INT_LESS (register, 0x80, 4) , (register, 0x30, 4)",
    "(register, 0x20b, 1) INT_SBORROW (register, 0x80, 4) , (register, 0x30, 4)",
    "(register, 0x80, 4) INT_SUB (register, 0x80, 4) , (register, 0x30, 4)",
    "(register, 0x80, 8) INT_ZEXT (register, 0x80, 4)",
    "(register, 0x207, 1) INT_SLESS (register, 0x80, 4) , (const, 0x0, 4)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x80, 4) , (const, 0x0, 4)",
    "(unique, 0x13400, 4) INT_AND (register, 0x80, 4) , (const, 0xff, 4)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 4)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x38, 8) COPY (register, 0x30, 8)",
    "(register, 0x38, 8) INT_NEGATE (register, 0x38, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0x38, 8) , (register, 0x10, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x38, 8) , (register, 0x10, 8)",
    "(register, 0x38, 8) INT_ADD (register, 0x38, 8) , (register, 0x10, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x38, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x38, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x38, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(register, 0x80, 8) INT_AND (register, 0x80, 8) , (const, 0x7, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x80, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x80, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x80, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x2e72, 8) , (register, 0x206, 1)",
    "(unique, 0x3a80, 8) INT_MULT (register, 0x0, 8) , (const, 0x1, 8)",
    "(unique, 0x3b80, 8) INT_ADD (register, 0x0, 8) , (unique, 0x3a80, 8)",
    "(unique, 0xc000, 1) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)",
    "(register, 0x88, 4) INT_ZEXT (unique, 0xc000, 1)",
    "(register, 0x88, 8) INT_ZEXT (register, 0x88, 4)",
    "(unique, 0x5380, 1) COPY (register, 0x88, 1)",
    " ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (unique, 0x5380, 1)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x30, 8) , (const, 0x1, 8)",
    "(register, 0x30, 8) INT_ADD (register, 0x30, 8) , (const, 0x1, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x30, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x30, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x30, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x0, 8) , (const, 0x1, 8)",
    "(register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x1, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x0, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x0, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x20b, 1) INT_SBORROW (register, 0x80, 8) , (const, 0x1, 8)",
    "(register, 0x80, 8) INT_SUB (register, 0x80, 8) , (const, 0x1, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x80, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x80, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x80, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0xcb80, 1) BOOL_NEGATE (register, 0x206, 1)",
    " ---  CBRANCH (ram, 0x2e60, 8) , (unique, 0xcb80, 1)",
    "(register, 0x200, 1) INT_LESS (register, 0x38, 8) , (const, 0x7, 8)",
    "(register, 0x20b, 1) INT_SBORROW (register, 0x38, 8) , (const, 0x7, 8)",
    "(unique, 0x25880, 8) INT_SUB (register, 0x38, 8) , (const, 0x7, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x25880, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x25880, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x25880, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x2ee7, 8) , (register, 0x200, 1)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(register, 0x38, 4) INT_XOR (register, 0x38, 4) , (register, 0x38, 4)",
    "(register, 0x38, 8) INT_ZEXT (register, 0x38, 4)",
    "(register, 0x207, 1) INT_SLESS (register, 0x38, 4) , (const, 0x0, 4)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x38, 4) , (const, 0x0, 4)",
    "(unique, 0x13400, 4) INT_AND (register, 0x38, 4) , (const, 0xff, 4)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 4)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0x3a80, 8) INT_MULT (register, 0x0, 8) , (const, 0x1, 8)",
    "(unique, 0x3b80, 8) INT_ADD (register, 0x0, 8) , (unique, 0x3a80, 8)",
    "(unique, 0x3300, 8) INT_MULT (register, 0x38, 8) , (const, 0x1, 8)",
    "(unique, 0x3400, 8) INT_ADD (register, 0x30, 8) , (unique, 0x3300, 8)",
    "(unique, 0xc000, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8)",
    "(register, 0x80, 4) INT_ZEXT (unique, 0xc000, 1)",
    "(register, 0x80, 8) INT_ZEXT (register, 0x80, 4)",
    "(unique, 0x3300, 8) INT_MULT (register, 0x38, 8) , (const, 0x1, 8)",
    "(unique, 0x3400, 8) INT_ADD (register, 0x0, 8) , (unique, 0x3300, 8)",
    "(unique, 0x5380, 1) COPY (register, 0x80, 1)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (unique, 0x5380, 1)",
    "(unique, 0x3880, 8) INT_ADD (const, 0x1, 8) , (register, 0x30, 8)",
    "(unique, 0x3900, 8) INT_MULT (register, 0x38, 8) , (const, 0x1, 8)",
    "(unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8)",
    "(unique, 0xc000, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8)",
    "(register, 0x80, 4) INT_ZEXT (unique, 0xc000, 1)",
    "(register, 0x80, 8) INT_ZEXT (register, 0x80, 4)",
    "(unique, 0x3880, 8) INT_ADD (const, 0x1, 8) , (register, 0x0, 8)",
    "(unique, 0x3900, 8) INT_MULT (register, 0x38, 8) , (const, 0x1, 8)",
    "(unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8)",
    "(unique, 0x5380, 1) COPY (register, 0x80, 1)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (unique, 0x5380, 1)",
    "(unique, 0x3880, 8) INT_ADD (const, 0x2, 8) , (register, 0x30, 8)",
    "(unique, 0x3900, 8) INT_MULT (register, 0x38, 8) , (const, 0x1, 8)",
    "(unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8)",
    "(unique, 0xc000, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8)",
    "(register, 0x80, 4) INT_ZEXT (unique, 0xc000, 1)",
    "(register, 0x80, 8) INT_ZEXT (register, 0x80, 4)",
    "(unique, 0x3880, 8) INT_ADD (const, 0x2, 8) , (register, 0x0, 8)",
    "(unique, 0x3900, 8) INT_MULT (register, 0x38, 8) , (const, 0x1, 8)",
    "(unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8)",
    "(unique, 0x5380, 1) COPY (register, 0x80, 1)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (unique, 0x5380, 1)",
    "(unique, 0x3880, 8) INT_ADD (const, 0x3, 8) , (register, 0x30, 8)",
    "(unique, 0x3900, 8) INT_MULT (register, 0x38, 8) , (const, 0x1, 8)",
    "(unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8)",
    "(unique, 0xc000, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8)",
    "(register, 0x80, 4) INT_ZEXT (unique, 0xc000, 1)",
    "(register, 0x80, 8) INT_ZEXT (register, 0x80, 4)",
    "(unique, 0x3880, 8) INT_ADD (const, 0x3, 8) , (register, 0x0, 8)",
    "(unique, 0x3900, 8) INT_MULT (register, 0x38, 8) , (const, 0x1, 8)",
    "(unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8)",
    "(unique, 0x5380, 1) COPY (register, 0x80, 1)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (unique, 0x5380, 1)",
    "(unique, 0x3880, 8) INT_ADD (const, 0x4, 8) , (register, 0x30, 8)",
    "(unique, 0x3900, 8) INT_MULT (register, 0x38, 8) , (const, 0x1, 8)",
    "(unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8)",
    "(unique, 0xc000, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8)",
    "(register, 0x80, 4) INT_ZEXT (unique, 0xc000, 1)",
    "(register, 0x80, 8) INT_ZEXT (register, 0x80, 4)",
    "(unique, 0x3880, 8) INT_ADD (const, 0x4, 8) , (register, 0x0, 8)",
    "(unique, 0x3900, 8) INT_MULT (register, 0x38, 8) , (const, 0x1, 8)",
    "(unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8)",
    "(unique, 0x5380, 1) COPY (register, 0x80, 1)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (unique, 0x5380, 1)",
    "(unique, 0x3880, 8) INT_ADD (const, 0x5, 8) , (register, 0x30, 8)",
    "(unique, 0x3900, 8) INT_MULT (register, 0x38, 8) , (const, 0x1, 8)",
    "(unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8)",
    "(unique, 0xc000, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8)",
    "(register, 0x80, 4) INT_ZEXT (unique, 0xc000, 1)",
    "(register, 0x80, 8) INT_ZEXT (register, 0x80, 4)",
    "(unique, 0x3880, 8) INT_ADD (const, 0x5, 8) , (register, 0x0, 8)",
    "(unique, 0x3900, 8) INT_MULT (register, 0x38, 8) , (const, 0x1, 8)",
    "(unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8)",
    "(unique, 0x5380, 1) COPY (register, 0x80, 1)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (unique, 0x5380, 1)",
    "(unique, 0x3880, 8) INT_ADD (const, 0x6, 8) , (register, 0x30, 8)",
    "(unique, 0x3900, 8) INT_MULT (register, 0x38, 8) , (const, 0x1, 8)",
    "(unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8)",
    "(unique, 0xc000, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8)",
    "(register, 0x80, 4) INT_ZEXT (unique, 0xc000, 1)",
    "(register, 0x80, 8) INT_ZEXT (register, 0x80, 4)",
    "(unique, 0x3880, 8) INT_ADD (const, 0x6, 8) , (register, 0x0, 8)",
    "(unique, 0x3900, 8) INT_MULT (register, 0x38, 8) , (const, 0x1, 8)",
    "(unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8)",
    "(unique, 0x5380, 1) COPY (register, 0x80, 1)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (unique, 0x5380, 1)",
    "(unique, 0x3880, 8) INT_ADD (const, 0x7, 8) , (register, 0x30, 8)",
    "(unique, 0x3900, 8) INT_MULT (register, 0x38, 8) , (const, 0x1, 8)",
    "(unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8)",
    "(unique, 0xc000, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8)",
    "(register, 0x80, 4) INT_ZEXT (unique, 0xc000, 1)",
    "(register, 0x80, 8) INT_ZEXT (register, 0x80, 4)",
    "(unique, 0x3880, 8) INT_ADD (const, 0x7, 8) , (register, 0x0, 8)",
    "(unique, 0x3900, 8) INT_MULT (register, 0x38, 8) , (const, 0x1, 8)",
    "(unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8)",
    "(unique, 0x5380, 1) COPY (register, 0x80, 1)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (unique, 0x5380, 1)",
    "(unique, 0x3300, 8) INT_MULT (register, 0x38, 8) , (const, 0x1, 8)",
    "(unique, 0x3400, 8) INT_ADD (register, 0x30, 8) , (unique, 0x3300, 8)",
    "(register, 0x80, 8) COPY (unique, 0x3400, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0x80, 8) , (const, 0x8, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x80, 8) , (const, 0x8, 8)",
    "(register, 0x80, 8) INT_ADD (register, 0x80, 8) , (const, 0x8, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x80, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x80, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x80, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x200, 1) INT_CARRY (register, 0x38, 8) , (const, 0x8, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x38, 8) , (const, 0x8, 8)",
    "(register, 0x38, 8) INT_ADD (register, 0x38, 8) , (const, 0x8, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x38, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x38, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x38, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x200, 1) INT_LESS (register, 0x80, 8) , (register, 0x10, 8)",
    "(register, 0x20b, 1) INT_SBORROW (register, 0x80, 8) , (register, 0x10, 8)",
    "(unique, 0x25c80, 8) INT_SUB (register, 0x80, 8) , (register, 0x10, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x25c80, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x25c80, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x25c80, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0xcb80, 1) BOOL_NEGATE (register, 0x206, 1)",
    " ---  CBRANCH (ram, 0x2e80, 8) , (unique, 0xcb80, 1)",
    "(unique, 0x3100, 8) INT_ADD (register, 0xb0, 8) , (const, 0x8, 8)",
    "(unique, 0x5500, 8) COPY (register, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5500, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0xb0, 8) , (const, 0x18, 8)",
    "(unique, 0x5500, 8) COPY (register, 0xb8, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5500, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0xb0, 8) , (const, 0x20, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0xb0, 8) , (const, 0x20, 8)",
    "(register, 0xb0, 8) INT_ADD (register, 0xb0, 8) , (const, 0x20, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0xb0, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0xb0, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0xb0, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x200, 1) INT_LESS (register, 0x18, 8) , (register, 0xb0, 8)",
    "(register, 0x20b, 1) INT_SBORROW (register, 0x18, 8) , (register, 0xb0, 8)",
    "(unique, 0x25c80, 8) INT_SUB (register, 0x18, 8) , (register, 0xb0, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x25c80, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x25c80, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x25c80, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x2f0a, 8) , (register, 0x206, 1)",
    "(register, 0x38, 8) COPY (register, 0x18, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0xb0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0xb8, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  BRANCH (ram, 0x6108, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0xb0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0xb8, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  RETURN (register, 0x288, 8)"
  ],
  "__ZN6spdlog7details11file_helperC1ERKNS_19file_event_handlersE": [
    "(unique, 0xef80, 8) COPY (register, 0x28, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x28, 8) COPY (register, 0x20, 8)",
    "(unique, 0xef80, 8) COPY (register, 0xb0, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x18, 8) COPY (register, 0x38, 8)",
    "(register, 0x0, 8) COPY (const, 0xa00000005, 8)",
    "(unique, 0x5500, 8) COPY (register, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (unique, 0x5500, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0x38, 8) , (const, 0x30, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x38, 8) , (const, 0x30, 8)",
    "(register, 0x38, 8) INT_ADD (register, 0x38, 8) , (const, 0x30, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x38, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x38, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x38, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x1200, 4) INT_XOR (register, 0x1200, 4) , (register, 0x1200, 4)",
    "(register, 0x1204, 4) INT_XOR (register, 0x1204, 4) , (register, 0x1204, 4)",
    "(register, 0x1208, 4) INT_XOR (register, 0x1208, 4) , (register, 0x1208, 4)",
    "(register, 0x120c, 4) INT_XOR (register, 0x120c, 4) , (register, 0x120c, 4)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x8, 8)",
    "(unique, 0x5580, 16) COPY (register, 0x1200, 16)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5580, 16)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x18, 8)",
    "(unique, 0x5580, 16) COPY (register, 0x1200, 16)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5580, 16)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x7b, 8)",
    " ---  CALL (ram, 0x2880, 8)",
    "(register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0xb0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  RETURN (register, 0x288, 8)"
  ],
  "__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc": [],
  "__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE20__throw_length_errorB7v160006Ev": [
    "(unique, 0xef80, 8) COPY (register, 0x28, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x28, 8) COPY (register, 0x20, 8)",
    "(register, 0x38, 8) COPY (const, 0x35b4, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x2a80, 8)",
    " ---  BRANCH (ram, 0x2a80, 8)"
  ],
  "__ZN6spdlog5sinks15basic_file_sinkINSt3__15mutexEEC2ERKNS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEbRKNS_19file_event_handlersE": [
    "(unique, 0xef80, 8) COPY (register, 0x28, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x28, 8) COPY (register, 0x20, 8)",
    "(unique, 0xef80, 8) COPY (register, 0xb8, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0xb0, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0xa0, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0xa0, 8) COPY (register, 0x8, 8)",
    "(register, 0xb8, 4) COPY (register, 0x10, 4)",
    "(register, 0xb8, 8) INT_ZEXT (register, 0xb8, 4)",
    "(register, 0xb0, 8) COPY (register, 0x30, 8)",
    "(register, 0x18, 8) COPY (register, 0x38, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0xadc, 8)",
    " ---  CALL (ram, 0xb60, 8)",
    "(register, 0x0, 8) COPY (ram, 0x35c8, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0x0, 8) , (const, 0x10, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x0, 8) , (const, 0x10, 8)",
    "(register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x10, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x0, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x0, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0x5500, 8) COPY (register, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (register, 0x18, 8) , (unique, 0x5500, 8)",
    "(register, 0x0, 8) COPY (const, 0xa00000005, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x60, 8)",
    "(unique, 0x5500, 8) COPY (register, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5500, 8)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x90, 8)",
    "(register, 0x38, 8) COPY (unique, 0x3200, 8)",
    "(register, 0x1200, 4) INT_XOR (register, 0x1200, 4) , (register, 0x1200, 4)",
    "(register, 0x1204, 4) INT_XOR (register, 0x1204, 4) , (register, 0x1204, 4)",
    "(register, 0x1208, 4) INT_XOR (register, 0x1208, 4) , (register, 0x1208, 4)",
    "(register, 0x120c, 4) INT_XOR (register, 0x120c, 4) , (register, 0x120c, 4)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x68, 8)",
    "(unique, 0x5580, 16) COPY (register, 0x1200, 16)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5580, 16)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x78, 8)",
    "(unique, 0x5580, 16) COPY (register, 0x1200, 16)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5580, 16)",
    "(register, 0x30, 8) COPY (register, 0xa0, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0xb12, 8)",
    " ---  CALL (ram, 0x2880, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x60, 8)",
    "(register, 0xa0, 8) COPY (unique, 0x3100, 8)",
    "(register, 0x10, 4) INT_ZEXT (register, 0xb8, 1)",
    "(register, 0x10, 8) INT_ZEXT (register, 0x10, 4)",
    "(register, 0x38, 8) COPY (register, 0xa0, 8)",
    "(register, 0x30, 8) COPY (register, 0xb0, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0xb25, 8)",
    " ---  CALL (ram, 0x280, 8)",
    "(register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0xa0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0xb0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0xb8, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  RETURN (register, 0x288, 8)"
  ],
  "__ZN6spdlog5sinks18rotating_file_sinkINSt3__15mutexEE6flush_Ev": [
    "(unique, 0xef80, 8) COPY (register, 0x28, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x28, 8) COPY (register, 0x20, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0x38, 8) , (const, 0x90, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x38, 8) , (const, 0x90, 8)",
    "(register, 0x38, 8) INT_ADD (register, 0x38, 8) , (const, 0x90, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x38, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x38, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x38, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  BRANCH (ram, 0x690, 8)"
  ],
  "__ZdlPv": [],
  "__Znwm": [],
  "__ZN6spdlog5sinks9base_sinkINSt3__15mutexEEC2Ev": [
    "(unique, 0xef80, 8) COPY (register, 0x28, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x28, 8) COPY (register, 0x20, 8)",
    "(unique, 0xef80, 8) COPY (register, 0xb0, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x200, 1) INT_LESS (register, 0x20, 8) , (const, 0x20, 8)",
    "(register, 0x20b, 1) INT_SBORROW (register, 0x20, 8) , (const, 0x20, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x20, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x18, 8) COPY (register, 0x38, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x38, 8) , (const, 0x8, 8)",
    "(unique, 0x5780, 4) COPY (const, 0x0, 4)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5780, 4)",
    "(register, 0x0, 8) COPY (ram, 0x37e8, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0x0, 8) , (const, 0x10, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x0, 8) , (const, 0x10, 8)",
    "(register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x10, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x0, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x0, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0x5500, 8) COPY (register, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (unique, 0x5500, 8)",
    "(register, 0x38, 8) COPY (const, 0xc0, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0xb8d, 8)",
    " ---  CALL (ram, 0x6110, 8)",
    "(register, 0xb0, 8) COPY (register, 0x0, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffd8, 8)",
    "(unique, 0x5700, 2) COPY (const, 0xa02, 2)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5700, 2)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffda, 8)",
    "(unique, 0x5680, 1) COPY (const, 0x0, 1)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5680, 1)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffd8, 8)",
    "(register, 0x10, 8) COPY (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (register, 0x0, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(register, 0x30, 4) INT_XOR (register, 0x30, 4) , (register, 0x30, 4)",
    "(register, 0x30, 8) INT_ZEXT (register, 0x30, 4)",
    "(register, 0x207, 1) INT_SLESS (register, 0x30, 4) , (const, 0x0, 4)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x0, 4)",
    "(unique, 0x13400, 4) INT_AND (register, 0x30, 4) , (const, 0xff, 4)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 4)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0xba8, 8)",
    " ---  CALL (ram, 0x6020, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffd8, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0xc000, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(unique, 0x55980, 1) INT_AND (unique, 0xc000, 1) , (const, 0x1, 1)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x55980, 1) , (const, 0x0, 1)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x55980, 1) , (const, 0x0, 1)",
    "(unique, 0x13400, 1) INT_AND (unique, 0x55980, 1) , (const, 0xff, 1)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 1)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0xbb7, 8) , (register, 0x206, 1)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffe8, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0xbb7, 8)",
    " ---  CALL (ram, 0x6108, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x10, 8)",
    "(unique, 0x5500, 8) COPY (register, 0xb0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5500, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x18, 8)",
    "(unique, 0x5800, 8) COPY (const, 0x32aaaba7, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5800, 8)",
    "(register, 0x1200, 4) INT_XOR (register, 0x1200, 4) , (register, 0x1200, 4)",
    "(register, 0x1204, 4) INT_XOR (register, 0x1204, 4) , (register, 0x1204, 4)",
    "(register, 0x1208, 4) INT_XOR (register, 0x1208, 4) , (register, 0x1208, 4)",
    "(register, 0x120c, 4) INT_XOR (register, 0x120c, 4) , (register, 0x120c, 4)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x20, 8)",
    "(unique, 0x5580, 16) COPY (register, 0x1200, 16)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5580, 16)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x30, 8)",
    "(unique, 0x5580, 16) COPY (register, 0x1200, 16)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5580, 16)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x40, 8)",
    "(unique, 0x5580, 16) COPY (register, 0x1200, 16)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5580, 16)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x50, 8)",
    "(unique, 0x5800, 8) COPY (const, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5800, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x20, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x20, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0xb0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  RETURN (register, 0x288, 8)"
  ],
  "__ZN6spdlog5sinks15basic_file_sinkINS_7details10null_mutexEE6flush_Ev": [
    "(unique, 0xef80, 8) COPY (register, 0x28, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x28, 8) COPY (register, 0x20, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0x38, 8) , (const, 0x20, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x38, 8) , (const, 0x20, 8)",
    "(register, 0x38, 8) INT_ADD (register, 0x38, 8) , (const, 0x20, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x38, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x38, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x38, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  BRANCH (ram, 0x690, 8)"
  ],
  "__ZN6spdlog5sinks9base_sinkINSt3__15mutexEE13set_formatterENS2_10unique_ptrINS_9formatterENS2_14default_deleteIS6_EEEE": [
    "(unique, 0xef80, 8) COPY (register, 0x28, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x28, 8) COPY (register, 0x20, 8)",
    "(unique, 0xef80, 8) COPY (register, 0xb8, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0xb0, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0x0, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0xb0, 8) COPY (register, 0x30, 8)",
    "(register, 0xb8, 8) COPY (register, 0x38, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x38, 8) , (const, 0x18, 8)",
    "(register, 0x18, 8) COPY (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x23bc, 8)",
    " ---  CALL (ram, 0x60c8, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (register, 0xb0, 8)",
    "(register, 0x0, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x5800, 8) COPY (const, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (register, 0xb0, 8) , (unique, 0x5800, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffe0, 8)",
    "(unique, 0x5500, 8) COPY (register, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5500, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (register, 0xb8, 8)",
    "(register, 0x0, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffe0, 8)",
    "(register, 0x30, 8) COPY (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (register, 0xb8, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x48, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(unique, 0x23d80, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x23d7, 8)",
    " ---  CALLIND (unique, 0x23d80, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffe0, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffe0, 8)",
    "(unique, 0x5800, 8) COPY (const, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5800, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x56080, 8) INT_AND (register, 0x38, 8) , (register, 0x38, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x56080, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x23ee, 8) , (register, 0x206, 1)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)",
    "(register, 0x0, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x8, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(unique, 0x23d80, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x23ee, 8)",
    " ---  CALLIND (unique, 0x23d80, 8)",
    "(register, 0x38, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x23f6, 8)",
    " ---  CALL (ram, 0x60d0, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0xb0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0xb8, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  RETURN (register, 0x288, 8)"
  ],
  "__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_": [],
  "__ZN6spdlog5sinks15basic_file_sinkINSt3__15mutexEE8sink_it_ERKNS_7details7log_msgE": [
    "(unique, 0xef80, 8) COPY (register, 0x28, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x28, 8) COPY (register, 0x20, 8)",
    "(unique, 0xef80, 8) COPY (register, 0xb0, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x200, 1) INT_LESS (register, 0x20, 8) , (const, 0x130, 8)",
    "(register, 0x20b, 1) INT_SBORROW (register, 0x20, 8) , (const, 0x130, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x130, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x18, 8) COPY (register, 0x38, 8)",
    "(register, 0x0, 8) COPY (ram, 0x6158, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)",
    "(register, 0x0, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffe8, 8)",
    "(unique, 0x5500, 8) COPY (register, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5500, 8)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0xfffffffffffffed8, 8)",
    "(unique, 0x5800, 8) COPY (const, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (unique, 0x5800, 8)",
    "(register, 0x0, 8) COPY (ram, 0x38a8, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0x0, 8) , (const, 0x10, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x0, 8) , (const, 0x10, 8)",
    "(register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x10, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x0, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x0, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0xfffffffffffffec8, 8)",
    "(unique, 0x5500, 8) COPY (register, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (unique, 0x5500, 8)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0xfffffffffffffee8, 8)",
    "(register, 0xb0, 8) COPY (unique, 0x3200, 8)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0xfffffffffffffed0, 8)",
    "(unique, 0x5500, 8) COPY (register, 0xb0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (unique, 0x5500, 8)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0xfffffffffffffee0, 8)",
    "(unique, 0x5800, 8) COPY (const, 0xfa, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (unique, 0x5800, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x38, 8) , (const, 0x10, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)",
    "(register, 0x0, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0xfffffffffffffec8, 8)",
    "(register, 0x10, 8) COPY (unique, 0x3200, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x10, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(unique, 0x23d80, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0xda6, 8)",
    " ---  CALLIND (unique, 0x23d80, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0x18, 8) , (const, 0x60, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x18, 8) , (const, 0x60, 8)",
    "(register, 0x18, 8) INT_ADD (register, 0x18, 8) , (const, 0x60, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x18, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x18, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x18, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0xfffffffffffffec8, 8)",
    "(register, 0x30, 8) COPY (unique, 0x3200, 8)",
    "(register, 0x38, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0xdb9, 8)",
    " ---  CALL (ram, 0x810, 8)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0xfffffffffffffed0, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x200, 1) INT_LESS (register, 0x38, 8) , (register, 0xb0, 8)",
    "(register, 0x20b, 1) INT_SBORROW (register, 0x38, 8) , (register, 0xb0, 8)",
    "(unique, 0x25c80, 8) INT_SUB (register, 0x38, 8) , (register, 0xb0, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x25c80, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x25c80, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x25c80, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0xdca, 8) , (register, 0x206, 1)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0xdca, 8)",
    " ---  CALL (ram, 0x6108, 8)",
    "(register, 0x0, 8) COPY (ram, 0x6158, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)",
    "(register, 0x0, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffe8, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x200, 1) INT_LESS (register, 0x0, 8) , (unique, 0xc280, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x20b, 1) INT_SBORROW (register, 0x0, 8) , (unique, 0xc280, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(unique, 0x26180, 8) INT_SUB (register, 0x0, 8) , (unique, 0xc280, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x26180, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x26180, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x26180, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0xcb80, 1) BOOL_NEGATE (register, 0x206, 1)",
    " ---  CBRANCH (ram, 0xde6, 8) , (unique, 0xcb80, 1)",
    "(register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x130, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x130, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x130, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0xb0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  RETURN (register, 0x288, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0xdeb, 8)",
    " ---  CALL (ram, 0x6150, 8)"
  ],
  "__ZN6spdlog7details2os7fopen_sEPP7__sFILERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEESD_": [],
  "__ZN6spdlog5sinks15basic_file_sinkINS_7details10null_mutexEEC1ERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEEbRKNS_19file_event_handlersE": [
    "(unique, 0xef80, 8) COPY (register, 0x28, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x28, 8) COPY (register, 0x20, 8)",
    "(register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  BRANCH (ram, 0xe20, 8)"
  ],
  "__ZNSt3__15mutex4lockEv": [],
  "__ZN6spdlog7details2os11path_existsERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE": [],
  "__ZN6spdlog5sinks9base_sinkINSt3__15mutexEE5flushEv": [
    "(unique, 0xef80, 8) COPY (register, 0x28, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x28, 8) COPY (register, 0x20, 8)",
    "(unique, 0xef80, 8) COPY (register, 0xb0, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0xb0, 8) COPY (register, 0x38, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x38, 8) , (const, 0x18, 8)",
    "(register, 0x18, 8) COPY (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x2326, 8)",
    " ---  CALL (ram, 0x60c8, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (register, 0xb0, 8)",
    "(register, 0x0, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x38, 8) COPY (register, 0xb0, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x38, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(unique, 0x23d80, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x232f, 8)",
    " ---  CALLIND (unique, 0x23d80, 8)",
    "(register, 0x38, 8) COPY (register, 0x18, 8)",
    "(register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0xb0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  BRANCH (ram, 0x60d0, 8)"
  ],
  "__ZN6spdlog5sinks15basic_file_sinkINS_7details10null_mutexEED0Ev": [
    "(unique, 0xef80, 8) COPY (register, 0x28, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x28, 8) COPY (register, 0x20, 8)",
    "(unique, 0xef80, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0x0, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x18, 8) COPY (register, 0x38, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0x38, 8) , (const, 0x20, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x38, 8) , (const, 0x20, 8)",
    "(register, 0x38, 8) INT_ADD (register, 0x38, 8) , (const, 0x20, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x38, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x38, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x38, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x2562, 8)",
    " ---  CALL (ram, 0xa0, 8)",
    "(register, 0x0, 8) COPY (ram, 0x3848, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0x0, 8) , (const, 0x10, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x0, 8) , (const, 0x10, 8)",
    "(register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x10, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x0, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x0, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0x5500, 8) COPY (register, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (register, 0x18, 8) , (unique, 0x5500, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x10, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x10, 8)",
    "(unique, 0x5800, 8) COPY (const, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5800, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x56080, 8) INT_AND (register, 0x38, 8) , (register, 0x38, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x56080, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x2587, 8) , (register, 0x206, 1)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)",
    "(register, 0x0, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x8, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(unique, 0x23d80, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x2587, 8)",
    " ---  CALLIND (unique, 0x23d80, 8)",
    "(register, 0x38, 8) COPY (register, 0x18, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  BRANCH (ram, 0x6108, 8)"
  ],
  "__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE5rfindEcm": [],
  "__ZN3fmt2v97vformatENS0_17basic_string_viewIcEENS0_17basic_format_argsINS0_20basic_format_contextINS0_8appenderEcEEEE": [],
  "__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm": [],
  "__ZN6spdlog5sinks9base_sinkINSt3__15mutexEE3logERKNS_7details7log_msgE": [
    "(unique, 0xef80, 8) COPY (register, 0x28, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x28, 8) COPY (register, 0x20, 8)",
    "(unique, 0xef80, 8) COPY (register, 0xb8, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0xb0, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0x0, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0xb0, 8) COPY (register, 0x30, 8)",
    "(register, 0xb8, 8) COPY (register, 0x38, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x38, 8) , (const, 0x18, 8)",
    "(register, 0x18, 8) COPY (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x22dc, 8)",
    " ---  CALL (ram, 0x60c8, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (register, 0xb8, 8)",
    "(register, 0x0, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x38, 8) COPY (register, 0xb8, 8)",
    "(register, 0x30, 8) COPY (register, 0xb0, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x30, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(unique, 0x23d80, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x22e8, 8)",
    " ---  CALLIND (unique, 0x23d80, 8)",
    "(register, 0x38, 8) COPY (register, 0x18, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0xb0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0xb8, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  BRANCH (ram, 0x60d0, 8)"
  ],
  "__ZN6spdlog5sinks18rotating_file_sinkINS_7details10null_mutexEE8filenameEv": [
    "(unique, 0xef80, 8) COPY (register, 0x28, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x28, 8) COPY (register, 0x20, 8)",
    "(unique, 0xef80, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0x0, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x18, 8) COPY (register, 0x38, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0x30, 8) , (const, 0x60, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x30, 8) , (const, 0x60, 8)",
    "(register, 0x30, 8) INT_ADD (register, 0x30, 8) , (const, 0x60, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x30, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x30, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x30, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x20c2, 8)",
    " ---  CALL (ram, 0x60b0, 8)",
    "(register, 0x0, 8) COPY (register, 0x18, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  RETURN (register, 0x288, 8)"
  ],
  "__ZN6spdlog7details2os8dir_nameERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE": [],
  "__ZN6spdlog7details2os16sleep_for_millisEj": [],
  "__ZNSt11logic_errorC2EPKc": [],
  "__ZN6spdlog5sinks18rotating_file_sinkINSt3__15mutexEE7rotate_Ev": [
    "(unique, 0xef80, 8) COPY (register, 0x28, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x28, 8) COPY (register, 0x20, 8)",
    "(unique, 0xef80, 8) COPY (register, 0xb8, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0xb0, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0xa8, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0xa0, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x200, 1) INT_LESS (register, 0x20, 8) , (const, 0xc8, 8)",
    "(register, 0x20b, 1) INT_SBORROW (register, 0x20, 8) , (const, 0xc8, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0xc8, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x18, 8) COPY (register, 0x38, 8)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x38, 8) , (const, 0x98, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x56080, 8) INT_AND (register, 0x38, 8) , (register, 0x38, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x56080, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x13f7, 8) , (register, 0x206, 1)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x140, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)",
    "(register, 0x0, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x56080, 8) INT_AND (register, 0x0, 8) , (register, 0x0, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x56080, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x13ce, 8) , (register, 0x206, 1)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xa0, 8)",
    "(register, 0x30, 8) COPY (unique, 0x3200, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffb8, 8)",
    "(unique, 0x5500, 8) COPY (register, 0x38, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5500, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)",
    "(register, 0x8, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffb8, 8)",
    "(register, 0x10, 8) COPY (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (register, 0x0, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x8, 8) , (const, 0x30, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(unique, 0x23d80, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x13c7, 8)",
    " ---  CALLIND (unique, 0x23d80, 8)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x98, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x13d3, 8)",
    " ---  CALL (ram, 0x6160, 8)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x98, 8)",
    "(unique, 0x5800, 8) COPY (const, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (unique, 0x5800, 8)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x170, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x56080, 8) INT_AND (register, 0x38, 8) , (register, 0x38, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x56080, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x13f7, 8) , (register, 0x206, 1)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xa0, 8)",
    "(register, 0x30, 8) COPY (unique, 0x3200, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)",
    "(register, 0x0, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x30, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(unique, 0x23d80, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x13f7, 8)",
    " ---  CALLIND (unique, 0x23d80, 8)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x90, 8)",
    "(register, 0x0, 8) COPY (unique, 0x3200, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffb0, 8)",
    "(unique, 0x5500, 8) COPY (register, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5500, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffd0, 8)",
    "(unique, 0x5500, 8) COPY (register, 0x18, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5500, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x78, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0xb0, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x56080, 8) INT_AND (register, 0xb0, 8) , (register, 0xb0, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x56080, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x14c7, 8) , (register, 0x206, 1)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffd0, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x0, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x58, 8)",
    "(register, 0xb8, 8) COPY (unique, 0x3100, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffb8, 8)",
    "(register, 0xa0, 8) COPY (unique, 0x3100, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffff98, 8)",
    "(register, 0xa8, 8) COPY (unique, 0x3100, 8)",
    " ---  BRANCH (ram, 0x143c, 8)",
    "(register, 0xb0, 8) COPY (register, 0x18, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x56080, 8) INT_AND (register, 0x18, 8) , (register, 0x18, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x56080, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x14c7, 8) , (register, 0x206, 1)",
    "(unique, 0x3100, 8) INT_ADD (register, 0xb0, 8) , (const, 0xffffffffffffffff, 8)",
    "(register, 0x18, 8) COPY (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (register, 0xa0, 8)",
    "(register, 0x30, 8) COPY (register, 0xb8, 8)",
    "(register, 0x10, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x144e, 8)",
    " ---  CALL (ram, 0x1250, 8)",
    "(register, 0x38, 8) COPY (register, 0xa0, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x1456, 8)",
    " ---  CALL (ram, 0x6038, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x55d80, 1) INT_AND (register, 0x0, 1) , (register, 0x0, 1)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x55d80, 1) , (const, 0x0, 1)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x55d80, 1) , (const, 0x0, 1)",
    "(unique, 0x13400, 1) INT_AND (unique, 0x55d80, 1) , (const, 0xff, 1)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 1)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x14af, 8) , (register, 0x206, 1)",
    "(register, 0x38, 8) COPY (register, 0xa8, 8)",
    "(register, 0x30, 8) COPY (register, 0xb8, 8)",
    "(register, 0x10, 8) COPY (register, 0xb0, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x1468, 8)",
    " ---  CALL (ram, 0x1250, 8)",
    "(register, 0x38, 8) COPY (register, 0xa8, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x1470, 8)",
    " ---  CALL (ram, 0x6058, 8)",
    "(register, 0x38, 8) COPY (register, 0xa0, 8)",
    "(register, 0x30, 8) COPY (register, 0xa8, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x147b, 8)",
    " ---  CALL (ram, 0x6060, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x55f80, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x55f80, 4) , (const, 0x0, 4)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x55f80, 4) , (const, 0x0, 4)",
    "(unique, 0x13400, 4) INT_AND (unique, 0x55f80, 4) , (const, 0xff, 4)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 4)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x14a0, 8) , (register, 0x206, 1)",
    "(register, 0x38, 8) COPY (const, 0x64, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x1489, 8)",
    " ---  CALL (ram, 0x6048, 8)",
    "(register, 0x38, 8) COPY (register, 0xa8, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x1491, 8)",
    " ---  CALL (ram, 0x6058, 8)",
    "(register, 0x38, 8) COPY (register, 0xa0, 8)",
    "(register, 0x30, 8) COPY (register, 0xa8, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x149c, 8)",
    " ---  CALL (ram, 0x6060, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x55f80, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x55f80, 4) , (const, 0x0, 4)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x55f80, 4) , (const, 0x0, 4)",
    "(unique, 0x13400, 4) INT_AND (unique, 0x55f80, 4) , (const, 0xff, 4)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 4)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0xcb80, 1) BOOL_NEGATE (register, 0x206, 1)",
    " ---  CBRANCH (ram, 0x1512, 8) , (unique, 0xcb80, 1)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffff98, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0xc000, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(unique, 0x55980, 1) INT_AND (unique, 0xc000, 1) , (const, 0x1, 1)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x55980, 1) , (const, 0x0, 1)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x55980, 1) , (const, 0x0, 1)",
    "(unique, 0x13400, 1) INT_AND (unique, 0x55980, 1) , (const, 0xff, 1)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 1)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x14af, 8) , (register, 0x206, 1)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffa8, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x14af, 8)",
    " ---  CALL (ram, 0x6108, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffb8, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0xc000, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(unique, 0x55980, 1) INT_AND (unique, 0xc000, 1) , (const, 0x1, 1)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x55980, 1) , (const, 0x0, 1)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x55980, 1) , (const, 0x0, 1)",
    "(unique, 0x13400, 1) INT_AND (unique, 0x55980, 1) , (const, 0xff, 1)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 1)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x1430, 8) , (register, 0x206, 1)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffc8, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x14c2, 8)",
    " ---  CALL (ram, 0x6108, 8)",
    " ---  BRANCH (ram, 0x1430, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffd0, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x30, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x30, 8) , (const, 0xa0, 8)",
    "(unique, 0xc000, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)",
    "(register, 0x0, 4) INT_ZEXT (unique, 0xc000, 1)",
    "(register, 0x0, 8) INT_ZEXT (register, 0x0, 4)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x55580, 1) INT_AND (register, 0x0, 1) , (const, 0x1, 1)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x55580, 1) , (const, 0x0, 1)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x55580, 1) , (const, 0x0, 1)",
    "(unique, 0x13400, 1) INT_AND (unique, 0x55580, 1) , (const, 0xff, 1)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 1)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0xcb80, 1) BOOL_NEGATE (register, 0x206, 1)",
    " ---  CBRANCH (ram, 0x14db, 8) , (unique, 0xcb80, 1)",
    "(unique, 0x54200, 8) INT_AND (register, 0x0, 8) , (const, 0x1, 8)",
    "(register, 0x200, 1) INT_NOTEQUAL (unique, 0x54200, 8) , (const, 0x0, 8)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(register, 0x0, 8) INT_RIGHT (register, 0x0, 8) , (const, 0x1, 4)",
    "(register, 0x207, 1) INT_SLESS (register, 0x0, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x0, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  BRANCH (ram, 0x14e2, 8)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x30, 8) , (const, 0xa8, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)",
    "(register, 0x0, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x56080, 8) INT_AND (register, 0x0, 8) , (register, 0x0, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x56080, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x15e3, 8) , (register, 0x206, 1)",
    "(register, 0x200, 1) INT_CARRY (register, 0x30, 8) , (const, 0xa0, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x30, 8) , (const, 0xa0, 8)",
    "(register, 0x30, 8) INT_ADD (register, 0x30, 8) , (const, 0xa0, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x30, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x30, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x30, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffb0, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x10, 8) COPY (const, 0x1, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x1500, 8)",
    " ---  CALL (ram, 0x280, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0xc8, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0xc8, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0xc8, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0xa0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0xa8, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0xb0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0xb8, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  RETURN (register, 0x288, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffb0, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x30, 8) COPY (const, 0x1, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x1520, 8)",
    " ---  CALL (ram, 0x620, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffd0, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x0, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x0, 8) , (const, 0x80, 8)",
    "(unique, 0x5800, 8) COPY (const, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (unique, 0x5800, 8)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffff30, 8)",
    "(register, 0x38, 8) COPY (unique, 0x3200, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffb8, 8)",
    "(register, 0x30, 8) COPY (unique, 0x3100, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x153f, 8)",
    " ---  CALL (ram, 0x6040, 8)",
    "(register, 0x10, 8) COPY (const, 0x358a, 8)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffff30, 8)",
    "(register, 0x38, 8) COPY (unique, 0x3200, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(register, 0x30, 4) INT_XOR (register, 0x30, 4) , (register, 0x30, 4)",
    "(register, 0x30, 8) INT_ZEXT (register, 0x30, 4)",
    "(register, 0x207, 1) INT_SLESS (register, 0x30, 4) , (const, 0x0, 4)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x0, 4)",
    "(unique, 0x13400, 4) INT_AND (register, 0x30, 4) , (const, 0xff, 4)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 4)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x1554, 8)",
    " ---  CALL (ram, 0x60a8, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x10, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x8, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffff90, 8)",
    "(unique, 0x5500, 8) COPY (register, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5500, 8)",
    "(unique, 0x5580, 16) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)",
    "(unique, 0x7c980, 16) COPY (unique, 0x5580, 16)",
    "(register, 0x1200, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0x0, 4)",
    "(register, 0x1204, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0x4, 4)",
    "(register, 0x1208, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0x8, 4)",
    "(register, 0x120c, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0xc, 4)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffff80, 8)",
    "(unique, 0x5580, 16) COPY (register, 0x1200, 16)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5580, 16)",
    "(register, 0x1200, 4) INT_XOR (register, 0x1200, 4) , (register, 0x1200, 4)",
    "(register, 0x1204, 4) INT_XOR (register, 0x1204, 4) , (register, 0x1204, 4)",
    "(register, 0x1208, 4) INT_XOR (register, 0x1208, 4) , (register, 0x1208, 4)",
    "(register, 0x120c, 4) INT_XOR (register, 0x120c, 4) , (register, 0x120c, 4)",
    "(unique, 0x5580, 16) COPY (register, 0x1200, 16)",
    " ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (unique, 0x5580, 16)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x10, 8)",
    "(unique, 0x5800, 8) COPY (const, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5800, 8)",
    "(register, 0x30, 8) COPY (const, 0x35af, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffff80, 8)",
    "(register, 0x38, 8) COPY (unique, 0x3100, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x1581, 8)",
    " ---  CALL (ram, 0x6098, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x10, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x8, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffff70, 8)",
    "(unique, 0x5500, 8) COPY (register, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (unique, 0x5500, 8)",
    "(unique, 0x5580, 16) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)",
    "(unique, 0x7c980, 16) COPY (unique, 0x5580, 16)",
    "(register, 0x1200, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0x0, 4)",
    "(register, 0x1204, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0x4, 4)",
    "(register, 0x1208, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0x8, 4)",
    "(register, 0x120c, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0xc, 4)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffff60, 8)",
    "(unique, 0x5580, 16) COPY (register, 0x1200, 16)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (unique, 0x5580, 16)",
    "(register, 0x1200, 4) INT_XOR (register, 0x1200, 4) , (register, 0x1200, 4)",
    "(register, 0x1204, 4) INT_XOR (register, 0x1204, 4) , (register, 0x1204, 4)",
    "(register, 0x1208, 4) INT_XOR (register, 0x1208, 4) , (register, 0x1208, 4)",
    "(register, 0x120c, 4) INT_XOR (register, 0x120c, 4) , (register, 0x120c, 4)",
    "(unique, 0x5580, 16) COPY (register, 0x1200, 16)",
    " ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (unique, 0x5580, 16)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x10, 8)",
    "(unique, 0x5800, 8) COPY (const, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5800, 8)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffff48, 8)",
    "(register, 0x38, 8) COPY (unique, 0x3200, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffff98, 8)",
    "(register, 0x30, 8) COPY (unique, 0x3100, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x15b4, 8)",
    " ---  CALL (ram, 0x6040, 8)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffff18, 8)",
    "(register, 0x38, 8) COPY (unique, 0x3200, 8)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffff60, 8)",
    "(register, 0x30, 8) COPY (unique, 0x3200, 8)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffff48, 8)",
    "(register, 0x10, 8) COPY (unique, 0x3200, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x15ce, 8)",
    " ---  CALL (ram, 0x1920, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x15d3, 8)",
    " ---  CALL (ram, 0x6140, 8)",
    "(unique, 0xc180, 4) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)",
    "(register, 0x30, 4) COPY (unique, 0xc180, 4)",
    "(register, 0x30, 8) INT_ZEXT (register, 0x30, 4)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffff18, 8)",
    "(register, 0x38, 8) COPY (unique, 0x3200, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x15e1, 8)",
    " ---  CALL (ram, 0x6018, 8)",
    " ---  BRANCH (ram, 0x15fe, 8)",
    "(register, 0x30, 8) COPY (const, 0x3478, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffb8, 8)",
    "(register, 0x18, 8) COPY (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x15f6, 8)",
    " ---  CALL (ram, 0x5a0, 8)",
    "(register, 0x38, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x15fe, 8)",
    " ---  CALL (ram, 0x6010, 8)",
    " ---  CALLOTHER (const, 0x4d, 4)",
    " ---  BRANCH (ram, 0x15fe, 8)"
  ],
  "__ZN6spdlog5sinks18rotating_file_sinkINSt3__15mutexEE8filenameEv": [
    "(unique, 0xef80, 8) COPY (register, 0x28, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x28, 8) COPY (register, 0x20, 8)",
    "(unique, 0xef80, 8) COPY (register, 0xb8, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0xb0, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0x0, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0xb8, 8) COPY (register, 0x30, 8)",
    "(register, 0xb0, 8) COPY (register, 0x38, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x30, 8) , (const, 0x18, 8)",
    "(register, 0x18, 8) COPY (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x176c, 8)",
    " ---  CALL (ram, 0x60c8, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0xb8, 8) , (const, 0xa0, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0xb8, 8) , (const, 0xa0, 8)",
    "(register, 0xb8, 8) INT_ADD (register, 0xb8, 8) , (const, 0xa0, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0xb8, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0xb8, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0xb8, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x38, 8) COPY (register, 0xb0, 8)",
    "(register, 0x30, 8) COPY (register, 0xb8, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x177e, 8)",
    " ---  CALL (ram, 0x60b0, 8)",
    "(register, 0x38, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x1786, 8)",
    " ---  CALL (ram, 0x60d0, 8)",
    "(register, 0x0, 8) COPY (register, 0xb0, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0xb0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0xb8, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  RETURN (register, 0x288, 8)"
  ],
  "___cxa_allocate_exception": [],
  "__ZN6spdlog5sinks15basic_file_sinkINSt3__15mutexEED1Ev": [
    "(unique, 0xef80, 8) COPY (register, 0x28, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x28, 8) COPY (register, 0x20, 8)",
    "(unique, 0xef80, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0x0, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x18, 8) COPY (register, 0x38, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0x38, 8) , (const, 0x60, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x38, 8) , (const, 0x60, 8)",
    "(register, 0x38, 8) INT_ADD (register, 0x38, 8) , (const, 0x60, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x38, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x38, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x38, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x2232, 8)",
    " ---  CALL (ram, 0xa0, 8)",
    "(register, 0x0, 8) COPY (ram, 0x37e8, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0x0, 8) , (const, 0x10, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x0, 8) , (const, 0x10, 8)",
    "(register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x10, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x0, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x0, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0x5500, 8) COPY (register, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (register, 0x18, 8) , (unique, 0x5500, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x18, 8)",
    "(register, 0x38, 8) COPY (unique, 0x3100, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x2249, 8)",
    " ---  CALL (ram, 0x60d8, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x10, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x10, 8)",
    "(unique, 0x5800, 8) COPY (const, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5800, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x56080, 8) INT_AND (register, 0x38, 8) , (register, 0x38, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x56080, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x2266, 8) , (register, 0x206, 1)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)",
    "(register, 0x0, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x8, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    " ---  BRANCHIND (unique, 0xc280, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  RETURN (register, 0x288, 8)"
  ],
  "__ZN6spdlog7details11file_helperD1Ev": [
    "(unique, 0xef80, 8) COPY (register, 0x28, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x28, 8) COPY (register, 0x20, 8)",
    "(register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  BRANCH (ram, 0xa0, 8)"
  ],
  "__ZSt9terminatev": [],
  "__ZN6spdlog7details2os15filename_to_strERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE": [],
  "__ZN6spdlog7details11file_helper4openERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEb": [
    "(unique, 0xef80, 8) COPY (register, 0x28, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x28, 8) COPY (register, 0x20, 8)",
    "(unique, 0xef80, 8) COPY (register, 0xb8, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0xb0, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0xa8, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0xa0, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x200, 1) INT_LESS (register, 0x20, 8) , (const, 0x68, 8)",
    "(register, 0x20b, 1) INT_SBORROW (register, 0x20, 8) , (const, 0x68, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x68, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0xb8, 4) COPY (register, 0x10, 4)",
    "(register, 0xb8, 8) INT_ZEXT (register, 0xb8, 4)",
    "(register, 0xb0, 8) COPY (register, 0x30, 8)",
    "(register, 0x18, 8) COPY (register, 0x38, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x38, 8) , (const, 0x8, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x56080, 8) INT_AND (register, 0x38, 8) , (register, 0x38, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x56080, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x2eb, 8) , (register, 0x206, 1)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xb0, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)",
    "(register, 0x0, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x56080, 8) INT_AND (register, 0x0, 8) , (register, 0x0, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x56080, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x2c8, 8) , (register, 0x206, 1)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x10, 8)",
    "(register, 0x30, 8) COPY (unique, 0x3100, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffc0, 8)",
    "(unique, 0x5500, 8) COPY (register, 0x38, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5500, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)",
    "(register, 0x8, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffc0, 8)",
    "(register, 0x10, 8) COPY (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (register, 0x0, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x8, 8) , (const, 0x30, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(unique, 0x23d80, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x2c4, 8)",
    " ---  CALLIND (unique, 0x23d80, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x8, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x2cd, 8)",
    " ---  CALL (ram, 0x6160, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x8, 8)",
    "(unique, 0x5800, 8) COPY (const, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5800, 8)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xe0, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x56080, 8) INT_AND (register, 0x38, 8) , (register, 0x38, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x56080, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x2eb, 8) , (register, 0x206, 1)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x10, 8)",
    "(register, 0x30, 8) COPY (unique, 0x3100, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)",
    "(register, 0x0, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x30, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(unique, 0x23d80, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x2eb, 8)",
    " ---  CALLIND (unique, 0x23d80, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x10, 8)",
    "(register, 0xa0, 8) COPY (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (register, 0xa0, 8)",
    "(register, 0x30, 8) COPY (register, 0xb0, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x2fa, 8)",
    " ---  CALL (ram, 0x60c0, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x50, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x56080, 8) INT_AND (register, 0x38, 8) , (register, 0x38, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x56080, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x30c, 8) , (register, 0x206, 1)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)",
    "(register, 0x0, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x30, 8) COPY (register, 0xa0, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x30, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(unique, 0x23d80, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x30c, 8)",
    " ---  CALLIND (unique, 0x23d80, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffb0, 8)",
    "(unique, 0x5500, 8) COPY (register, 0xa0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5500, 8)",
    "(unique, 0xc200, 4) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)",
    "(register, 0x200, 1) INT_LESS (unique, 0xc200, 4) , (const, 0x0, 4)",
    "(unique, 0xc200, 4) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)",
    "(register, 0x20b, 1) INT_SBORROW (unique, 0xc200, 4) , (const, 0x0, 4)",
    "(unique, 0xc200, 4) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)",
    "(unique, 0x25780, 4) INT_SUB (unique, 0xc200, 4) , (const, 0x0, 4)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x25780, 4) , (const, 0x0, 4)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x25780, 4) , (const, 0x0, 4)",
    "(unique, 0x13400, 4) INT_AND (unique, 0x25780, 4) , (const, 0xff, 4)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 4)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0xd280, 1) INT_NOTEQUAL (register, 0x20b, 1) , (register, 0x207, 1)",
    "(unique, 0xd380, 1) BOOL_OR (register, 0x206, 1) , (unique, 0xd280, 1)",
    " ---  CBRANCH (ram, 0x46a, 8) , (unique, 0xd380, 1)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x8, 8)",
    "(register, 0x0, 8) COPY (unique, 0x3100, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffb8, 8)",
    "(unique, 0x5500, 8) COPY (register, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5500, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(register, 0xa0, 4) INT_XOR (register, 0xa0, 4) , (register, 0xa0, 4)",
    "(register, 0xa0, 8) INT_ZEXT (register, 0xa0, 4)",
    "(register, 0x207, 1) INT_SLESS (register, 0xa0, 4) , (const, 0x0, 4)",
    "(register, 0x206, 1) INT_EQUAL (register, 0xa0, 4) , (const, 0x0, 4)",
    "(unique, 0x13400, 4) INT_AND (register, 0xa0, 4) , (const, 0xff, 4)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 4)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x55d80, 1) INT_AND (register, 0xb8, 1) , (register, 0xb8, 1)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x55d80, 1) , (const, 0x0, 1)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x55d80, 1) , (const, 0x0, 1)",
    "(unique, 0x13400, 1) INT_AND (unique, 0x55d80, 1) , (const, 0xff, 1)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 1)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x3f0, 8) , (register, 0x206, 1)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffc0, 8)",
    "(register, 0xa8, 8) COPY (unique, 0x3100, 8)",
    " ---  BRANCH (ram, 0x34c, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0xa0, 4) , (const, 0x1, 4)",
    "(register, 0xa0, 4) INT_ADD (register, 0xa0, 4) , (const, 0x1, 4)",
    "(register, 0xa0, 8) INT_ZEXT (register, 0xa0, 4)",
    "(register, 0x207, 1) INT_SLESS (register, 0xa0, 4) , (const, 0x0, 4)",
    "(register, 0x206, 1) INT_EQUAL (register, 0xa0, 4) , (const, 0x0, 4)",
    "(unique, 0x13400, 4) INT_AND (register, 0xa0, 4) , (const, 0xff, 4)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 4)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0x5480, 4) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)",
    "(register, 0x200, 1) INT_LESS (register, 0xa0, 4) , (unique, 0x5480, 4)",
    "(unique, 0x5480, 4) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)",
    "(register, 0x20b, 1) INT_SBORROW (register, 0xa0, 4) , (unique, 0x5480, 4)",
    "(unique, 0x5480, 4) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)",
    "(unique, 0x26080, 4) INT_SUB (register, 0xa0, 4) , (unique, 0x5480, 4)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x26080, 4) , (const, 0x0, 4)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x26080, 4) , (const, 0x0, 4)",
    "(unique, 0x13400, 4) INT_AND (unique, 0x26080, 4) , (const, 0xff, 4)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 4)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0xd200, 1) INT_EQUAL (register, 0x20b, 1) , (register, 0x207, 1)",
    " ---  CBRANCH (ram, 0x46a, 8) , (unique, 0xd200, 1)",
    "(register, 0x38, 8) COPY (register, 0xa8, 8)",
    "(register, 0x30, 8) COPY (register, 0xb0, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x357, 8)",
    " ---  CALL (ram, 0x6070, 8)",
    "(register, 0x38, 8) COPY (register, 0xa8, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x35f, 8)",
    " ---  CALL (ram, 0x6030, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffc0, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0xc000, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(unique, 0x55980, 1) INT_AND (unique, 0xc000, 1) , (const, 0x1, 1)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x55980, 1) , (const, 0x0, 1)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x55980, 1) , (const, 0x0, 1)",
    "(unique, 0x13400, 1) INT_AND (unique, 0x55980, 1) , (const, 0xff, 1)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 1)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x36e, 8) , (register, 0x206, 1)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffd0, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x36e, 8)",
    " ---  CALL (ram, 0x6108, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffc0, 8)",
    "(unique, 0x5680, 1) COPY (const, 0x4, 1)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5680, 1)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffc1, 8)",
    "(unique, 0x5700, 2) COPY (const, 0x6277, 2)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5700, 2)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffc3, 8)",
    "(unique, 0x5680, 1) COPY (const, 0x0, 1)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5680, 1)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffff90, 8)",
    "(register, 0x38, 8) COPY (unique, 0x3100, 8)",
    "(register, 0x30, 8) COPY (register, 0xb0, 8)",
    "(register, 0x10, 8) COPY (register, 0xa8, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x38b, 8)",
    " ---  CALL (ram, 0x6068, 8)",
    "(register, 0xb8, 4) COPY (register, 0x0, 4)",
    "(register, 0xb8, 8) INT_ZEXT (register, 0xb8, 4)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffc0, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0xc000, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(unique, 0x55980, 1) INT_AND (unique, 0xc000, 1) , (const, 0x1, 1)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x55980, 1) , (const, 0x0, 1)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x55980, 1) , (const, 0x0, 1)",
    "(unique, 0x13400, 1) INT_AND (unique, 0x55980, 1) , (const, 0xff, 1)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 1)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x39d, 8) , (register, 0x206, 1)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffd0, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x39d, 8)",
    " ---  CALL (ram, 0x6108, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x55d80, 1) INT_AND (register, 0xb8, 1) , (register, 0xb8, 1)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x55d80, 1) , (const, 0x0, 1)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x55d80, 1) , (const, 0x0, 1)",
    "(unique, 0x13400, 1) INT_AND (unique, 0x55d80, 1) , (const, 0xff, 1)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 1)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0xcb80, 1) BOOL_NEGATE (register, 0x206, 1)",
    " ---  CBRANCH (ram, 0x340, 8) , (unique, 0xcb80, 1)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffff90, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x3ab, 8)",
    " ---  CALL (ram, 0x6160, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffc0, 8)",
    "(unique, 0x5680, 1) COPY (const, 0x4, 1)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5680, 1)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffc1, 8)",
    "(unique, 0x5700, 2) COPY (const, 0x6261, 2)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5700, 2)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffc3, 8)",
    "(unique, 0x5680, 1) COPY (const, 0x0, 1)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5680, 1)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffb8, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x30, 8) COPY (register, 0xb0, 8)",
    "(register, 0x10, 8) COPY (register, 0xa8, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x3c8, 8)",
    " ---  CALL (ram, 0x6068, 8)",
    "(register, 0xb8, 4) COPY (register, 0x0, 4)",
    "(register, 0xb8, 8) INT_ZEXT (register, 0xb8, 4)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffc0, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0xc000, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(unique, 0x55980, 1) INT_AND (unique, 0xc000, 1) , (const, 0x1, 1)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x55980, 1) , (const, 0x0, 1)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x55980, 1) , (const, 0x0, 1)",
    "(unique, 0x13400, 1) INT_AND (unique, 0x55980, 1) , (const, 0xff, 1)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 1)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x3da, 8) , (register, 0x206, 1)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffd0, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x3da, 8)",
    " ---  CALL (ram, 0x6108, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x55d80, 1) INT_AND (register, 0xb8, 1) , (register, 0xb8, 1)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x55d80, 1) , (const, 0x0, 1)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x55d80, 1) , (const, 0x0, 1)",
    "(unique, 0x13400, 1) INT_AND (unique, 0x55d80, 1) , (const, 0xff, 1)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 1)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x4ea, 8) , (register, 0x206, 1)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x4, 8)",
    "(unique, 0xc180, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x38, 4) COPY (unique, 0xc180, 4)",
    "(register, 0x38, 8) INT_ZEXT (register, 0x38, 4)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x3eb, 8)",
    " ---  CALL (ram, 0x6048, 8)",
    " ---  BRANCH (ram, 0x340, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffc0, 8)",
    "(register, 0xb8, 8) COPY (unique, 0x3100, 8)",
    "(unique, 0x3f00, 8) INT_MULT (register, 0x0, 8) , (const, 0x1, 8)",
    "(unique, 0x4000, 8) INT_ADD (register, 0x0, 8) , (unique, 0x3f00, 8)",
    "(register, 0x38, 8) COPY (register, 0xb8, 8)",
    "(register, 0x30, 8) COPY (register, 0xb0, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x40b, 8)",
    " ---  CALL (ram, 0x6070, 8)",
    "(register, 0x38, 8) COPY (register, 0xb8, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x413, 8)",
    " ---  CALL (ram, 0x6030, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffc0, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0xc000, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(unique, 0x55980, 1) INT_AND (unique, 0xc000, 1) , (const, 0x1, 1)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x55980, 1) , (const, 0x0, 1)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x55980, 1) , (const, 0x0, 1)",
    "(unique, 0x13400, 1) INT_AND (unique, 0x55980, 1) , (const, 0xff, 1)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 1)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x422, 8) , (register, 0x206, 1)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffd0, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x422, 8)",
    " ---  CALL (ram, 0x6108, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffc0, 8)",
    "(unique, 0x5680, 1) COPY (const, 0x4, 1)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5680, 1)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffc1, 8)",
    "(unique, 0x5700, 2) COPY (const, 0x6261, 2)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5700, 2)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffc3, 8)",
    "(unique, 0x5680, 1) COPY (const, 0x0, 1)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5680, 1)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffb8, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x30, 8) COPY (register, 0xb0, 8)",
    "(register, 0x10, 8) COPY (register, 0xb8, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x43f, 8)",
    " ---  CALL (ram, 0x6068, 8)",
    "(register, 0xa8, 4) COPY (register, 0x0, 4)",
    "(register, 0xa8, 8) INT_ZEXT (register, 0xa8, 4)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffc0, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0xc000, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(unique, 0x55980, 1) INT_AND (unique, 0xc000, 1) , (const, 0x1, 1)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x55980, 1) , (const, 0x0, 1)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x55980, 1) , (const, 0x0, 1)",
    "(unique, 0x13400, 1) INT_AND (unique, 0x55980, 1) , (const, 0xff, 1)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 1)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x451, 8) , (register, 0x206, 1)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffd0, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x451, 8)",
    " ---  CALL (ram, 0x6108, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x55d80, 1) INT_AND (register, 0xa8, 1) , (register, 0xa8, 1)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x55d80, 1) , (const, 0x0, 1)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x55d80, 1) , (const, 0x0, 1)",
    "(unique, 0x13400, 1) INT_AND (unique, 0x55d80, 1) , (const, 0xff, 1)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 1)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x4ea, 8) , (register, 0x206, 1)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x4, 8)",
    "(unique, 0xc180, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x38, 4) COPY (unique, 0xc180, 4)",
    "(register, 0x38, 8) INT_ZEXT (register, 0x38, 4)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x462, 8)",
    " ---  CALL (ram, 0x6048, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0xa0, 4) , (const, 0x1, 4)",
    "(register, 0xa0, 4) INT_ADD (register, 0xa0, 4) , (const, 0x1, 4)",
    "(register, 0xa0, 8) INT_ZEXT (register, 0xa0, 4)",
    "(register, 0x207, 1) INT_SLESS (register, 0xa0, 4) , (const, 0x0, 4)",
    "(register, 0x206, 1) INT_EQUAL (register, 0xa0, 4) , (const, 0x0, 4)",
    "(unique, 0x13400, 4) INT_AND (register, 0xa0, 4) , (const, 0xff, 4)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 4)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0x5480, 4) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)",
    "(register, 0x200, 1) INT_LESS (register, 0xa0, 4) , (unique, 0x5480, 4)",
    "(unique, 0x5480, 4) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)",
    "(register, 0x20b, 1) INT_SBORROW (register, 0xa0, 4) , (unique, 0x5480, 4)",
    "(unique, 0x5480, 4) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)",
    "(unique, 0x26080, 4) INT_SUB (register, 0xa0, 4) , (unique, 0x5480, 4)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x26080, 4) , (const, 0x0, 4)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x26080, 4) , (const, 0x0, 4)",
    "(unique, 0x13400, 4) INT_AND (unique, 0x26080, 4) , (const, 0xff, 4)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 4)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0xd100, 1) INT_NOTEQUAL (register, 0x20b, 1) , (register, 0x207, 1)",
    " ---  CBRANCH (ram, 0x400, 8) , (unique, 0xd100, 1)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffff78, 8)",
    "(register, 0x18, 8) COPY (unique, 0x3200, 8)",
    "(register, 0x38, 8) COPY (register, 0x18, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffb0, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x30, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x47d, 8)",
    " ---  CALL (ram, 0x6040, 8)",
    "(register, 0x10, 8) COPY (const, 0x3456, 8)",
    "(register, 0x38, 8) COPY (register, 0x18, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(register, 0x30, 4) INT_XOR (register, 0x30, 4) , (register, 0x30, 4)",
    "(register, 0x30, 8) INT_ZEXT (register, 0x30, 4)",
    "(register, 0x207, 1) INT_SLESS (register, 0x30, 4) , (const, 0x0, 4)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x0, 4)",
    "(unique, 0x13400, 4) INT_AND (register, 0x30, 4) , (const, 0xff, 4)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 4)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x48e, 8)",
    " ---  CALL (ram, 0x60a8, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x10, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x8, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffa0, 8)",
    "(unique, 0x5500, 8) COPY (register, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5500, 8)",
    "(unique, 0x5580, 16) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)",
    "(unique, 0x7c980, 16) COPY (unique, 0x5580, 16)",
    "(register, 0x1200, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0x0, 4)",
    "(register, 0x1204, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0x4, 4)",
    "(register, 0x1208, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0x8, 4)",
    "(register, 0x120c, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0xc, 4)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffff90, 8)",
    "(unique, 0x5580, 16) COPY (register, 0x1200, 16)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5580, 16)",
    "(register, 0x1200, 4) INT_XOR (register, 0x1200, 4) , (register, 0x1200, 4)",
    "(register, 0x1204, 4) INT_XOR (register, 0x1204, 4) , (register, 0x1204, 4)",
    "(register, 0x1208, 4) INT_XOR (register, 0x1208, 4) , (register, 0x1208, 4)",
    "(register, 0x120c, 4) INT_XOR (register, 0x120c, 4) , (register, 0x120c, 4)",
    "(unique, 0x5580, 16) COPY (register, 0x1200, 16)",
    " ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (unique, 0x5580, 16)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x10, 8)",
    "(unique, 0x5800, 8) COPY (const, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5800, 8)",
    "(register, 0x30, 8) COPY (const, 0x346b, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffff90, 8)",
    "(register, 0x38, 8) COPY (unique, 0x3100, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x4bb, 8)",
    " ---  CALL (ram, 0x6098, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x10, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x8, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffd0, 8)",
    "(unique, 0x5500, 8) COPY (register, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5500, 8)",
    "(unique, 0x5580, 16) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)",
    "(unique, 0x7c980, 16) COPY (unique, 0x5580, 16)",
    "(register, 0x1200, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0x0, 4)",
    "(register, 0x1204, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0x4, 4)",
    "(register, 0x1208, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0x8, 4)",
    "(register, 0x120c, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0xc, 4)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffc0, 8)",
    "(unique, 0x5580, 16) COPY (register, 0x1200, 16)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5580, 16)",
    "(register, 0x1200, 4) INT_XOR (register, 0x1200, 4) , (register, 0x1200, 4)",
    "(register, 0x1204, 4) INT_XOR (register, 0x1204, 4) , (register, 0x1204, 4)",
    "(register, 0x1208, 4) INT_XOR (register, 0x1208, 4) , (register, 0x1208, 4)",
    "(register, 0x120c, 4) INT_XOR (register, 0x120c, 4) , (register, 0x120c, 4)",
    "(unique, 0x5580, 16) COPY (register, 0x1200, 16)",
    " ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (unique, 0x5580, 16)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x10, 8)",
    "(unique, 0x5800, 8) COPY (const, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5800, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x4dd, 8)",
    " ---  CALL (ram, 0x6140, 8)",
    "(unique, 0xc180, 4) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)",
    "(register, 0x30, 4) COPY (unique, 0xc180, 4)",
    "(register, 0x30, 8) INT_ZEXT (register, 0x30, 4)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffc0, 8)",
    "(register, 0x38, 8) COPY (unique, 0x3100, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x4e8, 8)",
    " ---  CALL (ram, 0x6018, 8)",
    " ---  CALLOTHER (const, 0x4d, 4)",
    " ---  BRANCH (ram, 0x4e8, 8)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x80, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x56080, 8) INT_AND (register, 0x38, 8) , (register, 0x38, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x56080, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x50f, 8) , (register, 0x206, 1)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffb8, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x0, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)",
    "(register, 0x0, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffc0, 8)",
    "(unique, 0x5500, 8) COPY (register, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5500, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)",
    "(register, 0x0, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffc0, 8)",
    "(register, 0x10, 8) COPY (unique, 0x3100, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffb0, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x30, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x30, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(unique, 0x23d80, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x50f, 8)",
    " ---  CALLIND (unique, 0x23d80, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x68, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x68, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x68, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0xa0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0xa8, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0xb0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0xb8, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  RETURN (register, 0x288, 8)"
  ],
  "__ZN6spdlog7details11file_helper5flushEv": [
    "(unique, 0xef80, 8) COPY (register, 0x28, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x28, 8) COPY (register, 0x20, 8)",
    "(unique, 0xef80, 8) COPY (register, 0xb0, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x200, 1) INT_LESS (register, 0x20, 8) , (const, 0x40, 8)",
    "(register, 0x20b, 1) INT_SBORROW (register, 0x20, 8) , (const, 0x40, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x40, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x18, 8) COPY (register, 0x38, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x38, 8) , (const, 0x8, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x6a7, 8)",
    " ---  CALL (ram, 0x6168, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x55f80, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x55f80, 4) , (const, 0x0, 4)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x55f80, 4) , (const, 0x0, 4)",
    "(unique, 0x13400, 4) INT_AND (unique, 0x55f80, 4) , (const, 0xff, 4)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 4)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0xcb80, 1) BOOL_NEGATE (register, 0x206, 1)",
    " ---  CBRANCH (ram, 0x6b4, 8) , (unique, 0xcb80, 1)",
    "(register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x40, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x40, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x40, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0xb0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  RETURN (register, 0x288, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0x18, 8) , (const, 0x10, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x18, 8) , (const, 0x10, 8)",
    "(register, 0x18, 8) INT_ADD (register, 0x18, 8) , (const, 0x10, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x18, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x18, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x18, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffb8, 8)",
    "(register, 0xb0, 8) COPY (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (register, 0xb0, 8)",
    "(register, 0x30, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x6c7, 8)",
    " ---  CALL (ram, 0x6040, 8)",
    "(register, 0x10, 8) COPY (const, 0x34a7, 8)",
    "(register, 0x38, 8) COPY (register, 0xb0, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(register, 0x30, 4) INT_XOR (register, 0x30, 4) , (register, 0x30, 4)",
    "(register, 0x30, 8) INT_ZEXT (register, 0x30, 4)",
    "(register, 0x207, 1) INT_SLESS (register, 0x30, 4) , (const, 0x0, 4)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x0, 4)",
    "(unique, 0x13400, 4) INT_AND (register, 0x30, 4) , (const, 0xff, 4)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 4)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x6d8, 8)",
    " ---  CALL (ram, 0x60a8, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x10, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x8, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffe0, 8)",
    "(unique, 0x5500, 8) COPY (register, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5500, 8)",
    "(unique, 0x5580, 16) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)",
    "(unique, 0x7c980, 16) COPY (unique, 0x5580, 16)",
    "(register, 0x1200, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0x0, 4)",
    "(register, 0x1204, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0x4, 4)",
    "(register, 0x1208, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0x8, 4)",
    "(register, 0x120c, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0xc, 4)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffd0, 8)",
    "(unique, 0x5580, 16) COPY (register, 0x1200, 16)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5580, 16)",
    "(register, 0x1200, 4) INT_XOR (register, 0x1200, 4) , (register, 0x1200, 4)",
    "(register, 0x1204, 4) INT_XOR (register, 0x1204, 4) , (register, 0x1204, 4)",
    "(register, 0x1208, 4) INT_XOR (register, 0x1208, 4) , (register, 0x1208, 4)",
    "(register, 0x120c, 4) INT_XOR (register, 0x120c, 4) , (register, 0x120c, 4)",
    "(unique, 0x5580, 16) COPY (register, 0x1200, 16)",
    " ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (unique, 0x5580, 16)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x10, 8)",
    "(unique, 0x5800, 8) COPY (const, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5800, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x6fa, 8)",
    " ---  CALL (ram, 0x6140, 8)",
    "(unique, 0xc180, 4) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)",
    "(register, 0x30, 4) COPY (unique, 0xc180, 4)",
    "(register, 0x30, 8) INT_ZEXT (register, 0x30, 4)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffd0, 8)",
    "(register, 0x38, 8) COPY (unique, 0x3100, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x705, 8)",
    " ---  CALL (ram, 0x6018, 8)",
    " ---  CALLOTHER (const, 0x4d, 4)",
    " ---  BRANCH (ram, 0x705, 8)"
  ],
  "_memmove": [],
  "__ZN6spdlog7details11file_helper5closeEv": [
    "(unique, 0xef80, 8) COPY (register, 0x28, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x28, 8) COPY (register, 0x20, 8)",
    "(unique, 0xef80, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0x0, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x18, 8) COPY (register, 0x38, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x38, 8) , (const, 0x8, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x56080, 8) INT_AND (register, 0x38, 8) , (register, 0x38, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x56080, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x24d, 8) , (register, 0x206, 1)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xb0, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)",
    "(register, 0x0, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x56080, 8) INT_AND (register, 0x0, 8) , (register, 0x0, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x56080, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x227, 8) , (register, 0x206, 1)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x10, 8)",
    "(register, 0x30, 8) COPY (unique, 0x3100, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xfffffffffffffff0, 8)",
    "(unique, 0x5500, 8) COPY (register, 0x38, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5500, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)",
    "(register, 0x8, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xfffffffffffffff0, 8)",
    "(register, 0x10, 8) COPY (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (register, 0x0, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x8, 8) , (const, 0x30, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(unique, 0x23d80, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x223, 8)",
    " ---  CALLIND (unique, 0x23d80, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x8, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x22c, 8)",
    " ---  CALL (ram, 0x6160, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x8, 8)",
    "(unique, 0x5800, 8) COPY (const, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5800, 8)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xe0, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x56080, 8) INT_AND (register, 0x38, 8) , (register, 0x38, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x56080, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x24d, 8) , (register, 0x206, 1)",
    "(register, 0x200, 1) INT_CARRY (register, 0x18, 8) , (const, 0x10, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x18, 8) , (const, 0x10, 8)",
    "(register, 0x18, 8) INT_ADD (register, 0x18, 8) , (const, 0x10, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x18, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x18, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x18, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)",
    "(register, 0x0, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x30, 8) COPY (register, 0x18, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x30, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(unique, 0x23d80, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x24d, 8)",
    " ---  CALLIND (unique, 0x23d80, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  RETURN (register, 0x288, 8)"
  ],
  "__ZN6spdlog5sinks18rotating_file_sinkINS_7details10null_mutexEE13calc_filenameERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEEm": [
    "(unique, 0xef80, 8) COPY (register, 0x28, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x28, 8) COPY (register, 0x20, 8)",
    "(unique, 0xef80, 8) COPY (register, 0xb0, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x200, 1) INT_LESS (register, 0x20, 8) , (const, 0x70, 8)",
    "(register, 0x20b, 1) INT_SBORROW (register, 0x20, 8) , (const, 0x70, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x70, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x18, 8) COPY (register, 0x38, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x56080, 8) INT_AND (register, 0x10, 8) , (register, 0x10, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x56080, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x1c3e, 8) , (register, 0x206, 1)",
    "(register, 0xb0, 8) COPY (register, 0x10, 8)",
    "(register, 0x1200, 4) INT_XOR (register, 0x1200, 4) , (register, 0x1200, 4)",
    "(register, 0x1204, 4) INT_XOR (register, 0x1204, 4) , (register, 0x1204, 4)",
    "(register, 0x1208, 4) INT_XOR (register, 0x1208, 4) , (register, 0x1208, 4)",
    "(register, 0x120c, 4) INT_XOR (register, 0x120c, 4) , (register, 0x120c, 4)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffd0, 8)",
    "(unique, 0x5580, 16) COPY (register, 0x1200, 16)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5580, 16)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffe0, 8)",
    "(unique, 0x5800, 8) COPY (const, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5800, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffff80, 8)",
    "(register, 0x38, 8) COPY (unique, 0x3100, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x1bfe, 8)",
    " ---  CALL (ram, 0x9a0, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffff90, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x0, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffe0, 8)",
    "(unique, 0x5500, 8) COPY (register, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5500, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffff80, 8)",
    "(unique, 0x5580, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(unique, 0x7c980, 16) COPY (unique, 0x5580, 16)",
    "(register, 0x1200, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0x0, 4)",
    "(register, 0x1204, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0x4, 4)",
    "(register, 0x1208, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0x8, 4)",
    "(register, 0x120c, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0xc, 4)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffd0, 8)",
    "(unique, 0x5580, 16) COPY (register, 0x1200, 16)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5580, 16)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffff98, 8)",
    "(unique, 0x5580, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(unique, 0x7c980, 16) COPY (unique, 0x5580, 16)",
    "(register, 0x1200, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0x0, 4)",
    "(register, 0x1204, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0x4, 4)",
    "(register, 0x1208, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0x8, 4)",
    "(register, 0x120c, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0xc, 4)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffb0, 8)",
    "(unique, 0x5580, 16) COPY (register, 0x1200, 16)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5580, 16)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffa8, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x8, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffc0, 8)",
    "(unique, 0x5500, 8) COPY (register, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5500, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffd0, 8)",
    "(unique, 0xc000, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x10, 4) INT_ZEXT (unique, 0xc000, 1)",
    "(register, 0x10, 8) INT_ZEXT (register, 0x10, 4)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x55980, 1) INT_AND (register, 0x10, 1) , (const, 0x1, 1)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x55980, 1) , (const, 0x0, 1)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x55980, 1) , (const, 0x0, 1)",
    "(unique, 0x13400, 1) INT_AND (unique, 0x55980, 1) , (const, 0xff, 1)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 1)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x1c48, 8) , (register, 0x206, 1)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffd8, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x10, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffb0, 8)",
    "(unique, 0xc000, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x30, 4) INT_ZEXT (unique, 0xc000, 1)",
    "(register, 0x30, 8) INT_ZEXT (register, 0x30, 4)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x55980, 1) INT_AND (register, 0x30, 1) , (const, 0x1, 1)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x55980, 1) , (const, 0x0, 1)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x55980, 1) , (const, 0x0, 1)",
    "(unique, 0x13400, 1) INT_AND (unique, 0x55980, 1) , (const, 0xff, 1)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 1)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0xcb80, 1) BOOL_NEGATE (register, 0x206, 1)",
    " ---  CBRANCH (ram, 0x1c59, 8) , (unique, 0xcb80, 1)",
    "(unique, 0x54200, 8) INT_AND (register, 0x30, 8) , (const, 0x1, 8)",
    "(register, 0x200, 1) INT_NOTEQUAL (unique, 0x54200, 8) , (const, 0x0, 8)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(register, 0x30, 8) INT_RIGHT (register, 0x30, 8) , (const, 0x1, 4)",
    "(register, 0x207, 1) INT_SLESS (register, 0x30, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x30, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x30, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffb1, 8)",
    "(register, 0x8, 8) COPY (unique, 0x3100, 8)",
    " ---  BRANCH (ram, 0x1c5d, 8)",
    "(register, 0x38, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x1c46, 8)",
    " ---  CALL (ram, 0x60b0, 8)",
    " ---  BRANCH (ram, 0x1cac, 8)",
    "(unique, 0x54200, 8) INT_AND (register, 0x10, 8) , (const, 0x1, 8)",
    "(register, 0x200, 1) INT_NOTEQUAL (unique, 0x54200, 8) , (const, 0x0, 8)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(register, 0x10, 8) INT_RIGHT (register, 0x10, 8) , (const, 0x1, 4)",
    "(register, 0x207, 1) INT_SLESS (register, 0x10, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x10, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x10, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffd1, 8)",
    "(register, 0x0, 8) COPY (unique, 0x3100, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffb0, 8)",
    "(unique, 0xc000, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x30, 4) INT_ZEXT (unique, 0xc000, 1)",
    "(register, 0x30, 8) INT_ZEXT (register, 0x30, 4)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x55980, 1) INT_AND (register, 0x30, 1) , (const, 0x1, 1)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x55980, 1) , (const, 0x0, 1)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x55980, 1) , (const, 0x0, 1)",
    "(unique, 0x13400, 1) INT_AND (unique, 0x55980, 1) , (const, 0xff, 1)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 1)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x1c35, 8) , (register, 0x206, 1)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffb8, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x30, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffff80, 8)",
    "(unique, 0x5500, 8) COPY (register, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5500, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffff88, 8)",
    "(unique, 0x5500, 8) COPY (register, 0x10, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5500, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffff90, 8)",
    "(unique, 0x5500, 8) COPY (register, 0xb0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5500, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffa0, 8)",
    "(unique, 0x5500, 8) COPY (register, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5500, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffa8, 8)",
    "(unique, 0x5500, 8) COPY (register, 0x30, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5500, 8)",
    "(register, 0x30, 8) COPY (const, 0x3582, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffff80, 8)",
    "(register, 0x80, 8) COPY (unique, 0x3100, 8)",
    "(register, 0x10, 8) COPY (const, 0x7, 8)",
    "(register, 0x8, 8) COPY (const, 0xd4d, 8)",
    "(register, 0x38, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x1c8e, 8)",
    " ---  CALL (ram, 0x6008, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffb0, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0xc000, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(unique, 0x55980, 1) INT_AND (unique, 0xc000, 1) , (const, 0x1, 1)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x55980, 1) , (const, 0x0, 1)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x55980, 1) , (const, 0x0, 1)",
    "(unique, 0x13400, 1) INT_AND (unique, 0x55980, 1) , (const, 0xff, 1)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 1)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x1c9d, 8) , (register, 0x206, 1)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffc0, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x1c9d, 8)",
    " ---  CALL (ram, 0x6108, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffd0, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0xc000, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(unique, 0x55980, 1) INT_AND (unique, 0xc000, 1) , (const, 0x1, 1)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x55980, 1) , (const, 0x0, 1)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x55980, 1) , (const, 0x0, 1)",
    "(unique, 0x13400, 1) INT_AND (unique, 0x55980, 1) , (const, 0xff, 1)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 1)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x1cac, 8) , (register, 0x206, 1)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffe0, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x1cac, 8)",
    " ---  CALL (ram, 0x6108, 8)",
    "(register, 0x0, 8) COPY (register, 0x18, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x70, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x70, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x70, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0xb0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  RETURN (register, 0x288, 8)"
  ],
  "__ZNSt3__15mutexD1Ev": [],
  "__ZN6spdlog5sinks9base_sinkINSt3__15mutexEED2Ev": [
    "(unique, 0xef80, 8) COPY (register, 0x28, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x28, 8) COPY (register, 0x20, 8)",
    "(unique, 0xef80, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0x0, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x18, 8) COPY (register, 0x38, 8)",
    "(register, 0x0, 8) COPY (ram, 0x37e8, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0x0, 8) , (const, 0x10, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x0, 8) , (const, 0x10, 8)",
    "(register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x10, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x0, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x0, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0x5500, 8) COPY (register, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (unique, 0x5500, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0x38, 8) , (const, 0x18, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x38, 8) , (const, 0x18, 8)",
    "(register, 0x38, 8) INT_ADD (register, 0x38, 8) , (const, 0x18, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x38, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x38, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x38, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0xc30, 8)",
    " ---  CALL (ram, 0x60d8, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x10, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x10, 8)",
    "(unique, 0x5800, 8) COPY (const, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5800, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x56080, 8) INT_AND (register, 0x38, 8) , (register, 0x38, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x56080, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0xc4d, 8) , (register, 0x206, 1)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)",
    "(register, 0x0, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x8, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    " ---  BRANCHIND (unique, 0xc280, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  RETURN (register, 0x288, 8)"
  ],
  "__ZN6spdlog7details11make_uniqueINS_17pattern_formatterEJRKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEEENS3_10unique_ptrIT_NS3_14default_deleteISD_EEEEDpOT0_": [
    "(unique, 0xef80, 8) COPY (register, 0x28, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x28, 8) COPY (register, 0x20, 8)",
    "(unique, 0xef80, 8) COPY (register, 0xb8, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0xb0, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x200, 1) INT_LESS (register, 0x20, 8) , (const, 0x58, 8)",
    "(register, 0x20b, 1) INT_SBORROW (register, 0x20, 8) , (const, 0x58, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x58, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0xb8, 8) COPY (register, 0x30, 8)",
    "(register, 0x18, 8) COPY (register, 0x38, 8)",
    "(register, 0x38, 8) COPY (const, 0xc0, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x2f3d, 8)",
    " ---  CALL (ram, 0x6110, 8)",
    "(register, 0xb0, 8) COPY (register, 0x0, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffb8, 8)",
    "(register, 0x38, 8) COPY (unique, 0x3100, 8)",
    "(register, 0x30, 8) COPY (register, 0xb8, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x2f4c, 8)",
    " ---  CALL (ram, 0x60b0, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffd0, 8)",
    "(unique, 0x5700, 2) COPY (const, 0xa02, 2)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5700, 2)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffd2, 8)",
    "(unique, 0x5680, 1) COPY (const, 0x0, 1)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5680, 1)",
    "(register, 0x1200, 4) INT_XOR (register, 0x1200, 4) , (register, 0x1200, 4)",
    "(register, 0x1204, 4) INT_XOR (register, 0x1204, 4) , (register, 0x1204, 4)",
    "(register, 0x1208, 4) INT_XOR (register, 0x1208, 4) , (register, 0x1208, 4)",
    "(register, 0x120c, 4) INT_XOR (register, 0x120c, 4) , (register, 0x120c, 4)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffff90, 8)",
    "(unique, 0x5580, 16) COPY (register, 0x1200, 16)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5580, 16)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffa0, 8)",
    "(unique, 0x5580, 16) COPY (register, 0x1200, 16)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5580, 16)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffb0, 8)",
    "(unique, 0x5780, 4) COPY (const, 0x3f800000, 4)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5780, 4)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffb8, 8)",
    "(register, 0x30, 8) COPY (unique, 0x3100, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffd0, 8)",
    "(register, 0x8, 8) COPY (unique, 0x3100, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffff90, 8)",
    "(register, 0x80, 8) COPY (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (register, 0xb0, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(register, 0x10, 4) INT_XOR (register, 0x10, 4) , (register, 0x10, 4)",
    "(register, 0x10, 8) INT_ZEXT (register, 0x10, 4)",
    "(register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)",
    "(unique, 0x13400, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 4)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x2f7e, 8)",
    " ---  CALL (ram, 0x6028, 8)",
    "(unique, 0x5500, 8) COPY (register, 0xb0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (register, 0x18, 8) , (unique, 0x5500, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffa0, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0xb0, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x56080, 8) INT_AND (register, 0xb0, 8) , (register, 0xb0, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x56080, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0xcb80, 1) BOOL_NEGATE (register, 0x206, 1)",
    " ---  CBRANCH (ram, 0x2fe0, 8) , (unique, 0xcb80, 1)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffff90, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffff90, 8)",
    "(unique, 0x5800, 8) COPY (const, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5800, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x56080, 8) INT_AND (register, 0x38, 8) , (register, 0x38, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x56080, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x2fa0, 8) , (register, 0x206, 1)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x2fa0, 8)",
    " ---  CALL (ram, 0x6108, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffd0, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0xc000, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(unique, 0x55980, 1) INT_AND (unique, 0xc000, 1) , (const, 0x1, 1)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x55980, 1) , (const, 0x0, 1)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x55980, 1) , (const, 0x0, 1)",
    "(unique, 0x13400, 1) INT_AND (unique, 0x55980, 1) , (const, 0xff, 1)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 1)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x2faf, 8) , (register, 0x206, 1)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffe0, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x2faf, 8)",
    " ---  CALL (ram, 0x6108, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffb8, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0xc000, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(unique, 0x55980, 1) INT_AND (unique, 0xc000, 1) , (const, 0x1, 1)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x55980, 1) , (const, 0x0, 1)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x55980, 1) , (const, 0x0, 1)",
    "(unique, 0x13400, 1) INT_AND (unique, 0x55980, 1) , (const, 0xff, 1)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 1)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x2fbe, 8) , (register, 0x206, 1)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffc8, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x2fbe, 8)",
    " ---  CALL (ram, 0x6108, 8)",
    "(register, 0x0, 8) COPY (register, 0x18, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x58, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x58, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x58, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0xb0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0xb8, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  RETURN (register, 0x288, 8)",
    "(register, 0x38, 8) COPY (register, 0xb0, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x2fd8, 8)",
    " ---  CALL (ram, 0x6108, 8)",
    "(register, 0xb0, 8) COPY (register, 0xb8, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x56080, 8) INT_AND (register, 0xb8, 8) , (register, 0xb8, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x56080, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x2f8a, 8) , (register, 0x206, 1)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (register, 0xb0, 8)",
    "(register, 0xb8, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0xb0, 8) , (const, 0x18, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0xb0, 8) , (const, 0x18, 8)",
    "(unique, 0x5800, 8) COPY (const, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5800, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x56080, 8) INT_AND (register, 0x38, 8) , (register, 0x38, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x56080, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x2fd0, 8) , (register, 0x206, 1)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)",
    "(register, 0x0, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x8, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(unique, 0x23d80, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x2ffa, 8)",
    " ---  CALLIND (unique, 0x23d80, 8)",
    " ---  BRANCH (ram, 0x2fd0, 8)"
  ],
  "___cxa_begin_catch": [],
  "__ZN6spdlog7details11file_helper18split_by_extensionERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE": [
    "(unique, 0xef80, 8) COPY (register, 0x28, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x28, 8) COPY (register, 0x20, 8)",
    "(unique, 0xef80, 8) COPY (register, 0xb8, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0xb0, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x200, 1) INT_LESS (register, 0x20, 8) , (const, 0x38, 8)",
    "(register, 0x20b, 1) INT_SBORROW (register, 0x20, 8) , (const, 0x38, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x38, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0xb0, 8) COPY (register, 0x30, 8)",
    "(register, 0x18, 8) COPY (register, 0x38, 8)",
    "(register, 0x38, 8) COPY (register, 0x30, 8)",
    "(register, 0x30, 8) COPY (const, 0x2e, 8)",
    "(register, 0x10, 8) COPY (const, 0xffffffffffffffff, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x9c7, 8)",
    " ---  CALL (ram, 0x6080, 8)",
    "(register, 0xb8, 8) COPY (register, 0x0, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x0, 8) , (const, 0x1, 8)",
    "(register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x1, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x0, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x0, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x200, 1) INT_LESS (register, 0x0, 8) , (const, 0x2, 8)",
    "(register, 0x20b, 1) INT_SBORROW (register, 0x0, 8) , (const, 0x2, 8)",
    "(unique, 0x25880, 8) INT_SUB (register, 0x0, 8) , (const, 0x2, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x25880, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x25880, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x25880, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0xa24, 8) , (register, 0x200, 1)",
    "(unique, 0xc000, 1) LOAD (const, 0x1b1, 4) , (register, 0xb0, 8)",
    "(register, 0x0, 4) INT_ZEXT (unique, 0xc000, 1)",
    "(register, 0x0, 8) INT_ZEXT (register, 0x0, 4)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x55580, 1) INT_AND (register, 0x0, 1) , (const, 0x1, 1)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x55580, 1) , (const, 0x0, 1)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x55580, 1) , (const, 0x0, 1)",
    "(unique, 0x13400, 1) INT_AND (unique, 0x55580, 1) , (const, 0xff, 1)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 1)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0xcb80, 1) BOOL_NEGATE (register, 0x206, 1)",
    " ---  CBRANCH (ram, 0x9ed, 8) , (unique, 0xcb80, 1)",
    "(unique, 0x54200, 8) INT_AND (register, 0x0, 8) , (const, 0x1, 8)",
    "(register, 0x200, 1) INT_NOTEQUAL (unique, 0x54200, 8) , (const, 0x0, 8)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(register, 0x0, 8) INT_RIGHT (register, 0x0, 8) , (const, 0x1, 4)",
    "(register, 0x207, 1) INT_SLESS (register, 0x0, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x0, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0xffffffffffffffff, 8)",
    "(register, 0x8, 8) COPY (unique, 0x3100, 8)",
    "(register, 0x200, 1) INT_LESS (register, 0xb8, 8) , (register, 0x8, 8)",
    "(register, 0x20b, 1) INT_SBORROW (register, 0xb8, 8) , (register, 0x8, 8)",
    "(unique, 0x25c80, 8) INT_SUB (register, 0xb8, 8) , (register, 0x8, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x25c80, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x25c80, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x25c80, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0xa24, 8) , (register, 0x206, 1)",
    "(unique, 0x3100, 8) INT_ADD (register, 0xb0, 8) , (const, 0x1, 8)",
    "(register, 0x8, 8) COPY (unique, 0x3100, 8)",
    " ---  BRANCH (ram, 0xa00, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0xb0, 8) , (const, 0x8, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x0, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0xffffffffffffffff, 8)",
    "(register, 0x8, 8) COPY (unique, 0x3100, 8)",
    "(register, 0x200, 1) INT_LESS (register, 0xb8, 8) , (register, 0x8, 8)",
    "(register, 0x20b, 1) INT_SBORROW (register, 0xb8, 8) , (register, 0x8, 8)",
    "(unique, 0x25c80, 8) INT_SUB (register, 0xb8, 8) , (register, 0x8, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x25c80, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x25c80, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x25c80, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0xa24, 8) , (register, 0x206, 1)",
    "(unique, 0x3100, 8) INT_ADD (register, 0xb0, 8) , (const, 0x10, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x8, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x56080, 8) INT_AND (register, 0x0, 8) , (register, 0x0, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x56080, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0xa4c, 8) , (register, 0x206, 1)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0xffffffffffffffff, 8)",
    "(register, 0x10, 8) COPY (unique, 0x3100, 8)",
    "(unique, 0x3880, 8) INT_ADD (const, 0xffffffffffffffff, 8) , (register, 0x8, 8)",
    "(unique, 0x3900, 8) INT_MULT (register, 0x0, 8) , (const, 0x1, 8)",
    "(unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8)",
    "(unique, 0xc000, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8)",
    "(register, 0x200, 1) INT_LESS (unique, 0xc000, 1) , (const, 0x2f, 1)",
    "(unique, 0xc000, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8)",
    "(register, 0x20b, 1) INT_SBORROW (unique, 0xc000, 1) , (const, 0x2f, 1)",
    "(unique, 0xc000, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8)",
    "(unique, 0x25280, 1) INT_SUB (unique, 0xc000, 1) , (const, 0x2f, 1)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x25280, 1) , (const, 0x0, 1)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x25280, 1) , (const, 0x0, 1)",
    "(unique, 0x13400, 1) INT_AND (unique, 0x25280, 1) , (const, 0xff, 1)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 1)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x0, 8) COPY (register, 0x10, 8)",
    "(unique, 0xcb80, 1) BOOL_NEGATE (register, 0x206, 1)",
    " ---  CBRANCH (ram, 0xa00, 8) , (unique, 0xcb80, 1)",
    "(register, 0x200, 1) INT_LESS (register, 0x10, 8) , (const, 0xffffffffffffffff, 8)",
    "(register, 0x20b, 1) INT_SBORROW (register, 0x10, 8) , (const, 0xffffffffffffffff, 8)",
    "(unique, 0x25880, 8) INT_SUB (register, 0x10, 8) , (const, 0xffffffffffffffff, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x25880, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x25880, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x25880, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0xa4c, 8) , (register, 0x206, 1)",
    "(register, 0x0, 8) COPY (register, 0xb8, 8)",
    "(register, 0x20b, 1) INT_SBORROW (register, 0x0, 8) , (const, 0x1, 8)",
    "(register, 0x0, 8) INT_SUB (register, 0x0, 8) , (const, 0x1, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x0, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x0, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x200, 1) INT_LESS (register, 0x10, 8) , (register, 0x0, 8)",
    "(register, 0x20b, 1) INT_SBORROW (register, 0x10, 8) , (register, 0x0, 8)",
    "(unique, 0x25c80, 8) INT_SUB (register, 0x10, 8) , (register, 0x0, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x25c80, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x25c80, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x25c80, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0xa4c, 8) , (register, 0x200, 1)",
    "(register, 0x38, 8) COPY (register, 0x18, 8)",
    "(register, 0x30, 8) COPY (register, 0xb0, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0xa2f, 8)",
    " ---  CALL (ram, 0x60b0, 8)",
    "(register, 0x1200, 4) INT_XOR (register, 0x1200, 4) , (register, 0x1200, 4)",
    "(register, 0x1204, 4) INT_XOR (register, 0x1204, 4) , (register, 0x1204, 4)",
    "(register, 0x1208, 4) INT_XOR (register, 0x1208, 4) , (register, 0x1208, 4)",
    "(register, 0x120c, 4) INT_XOR (register, 0x120c, 4) , (register, 0x120c, 4)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x18, 8)",
    "(unique, 0x5580, 16) COPY (register, 0x1200, 16)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5580, 16)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x28, 8)",
    "(unique, 0x5800, 8) COPY (const, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5800, 8)",
    "(register, 0x0, 8) COPY (register, 0x18, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x38, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x38, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x38, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0xb0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0xb8, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  RETURN (register, 0x288, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffc8, 8)",
    "(register, 0x38, 8) COPY (unique, 0x3100, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffb0, 8)",
    "(register, 0x80, 8) COPY (unique, 0x3100, 8)",
    "(register, 0x30, 8) COPY (register, 0xb0, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(register, 0x10, 4) INT_XOR (register, 0x10, 4) , (register, 0x10, 4)",
    "(register, 0x10, 8) INT_ZEXT (register, 0x10, 4)",
    "(register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)",
    "(unique, 0x13400, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 4)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x8, 8) COPY (register, 0xb8, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0xa61, 8)",
    " ---  CALL (ram, 0x60b8, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffb0, 8)",
    "(register, 0x38, 8) COPY (unique, 0x3100, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffe0, 8)",
    "(register, 0x80, 8) COPY (unique, 0x3100, 8)",
    "(register, 0x30, 8) COPY (register, 0xb0, 8)",
    "(register, 0x10, 8) COPY (register, 0xb8, 8)",
    "(register, 0x8, 8) COPY (const, 0xffffffffffffffff, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0xa7b, 8)",
    " ---  CALL (ram, 0x60b8, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffd8, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x0, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x10, 8)",
    "(unique, 0x5500, 8) COPY (register, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5500, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffc8, 8)",
    "(unique, 0x5580, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(unique, 0x7c980, 16) COPY (unique, 0x5580, 16)",
    "(register, 0x1200, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0x0, 4)",
    "(register, 0x1204, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0x4, 4)",
    "(register, 0x1208, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0x8, 4)",
    "(register, 0x120c, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0xc, 4)",
    "(unique, 0x5580, 16) COPY (register, 0x1200, 16)",
    " ---  STORE (const, 0x1b1, 4) , (register, 0x18, 8) , (unique, 0x5580, 16)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffb0, 8)",
    "(unique, 0x5580, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(unique, 0x7c980, 16) COPY (unique, 0x5580, 16)",
    "(register, 0x1200, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0x0, 4)",
    "(register, 0x1204, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0x4, 4)",
    "(register, 0x1208, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0x8, 4)",
    "(register, 0x120c, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0xc, 4)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x18, 8)",
    "(unique, 0x5580, 16) COPY (register, 0x1200, 16)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5580, 16)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffc0, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x0, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x28, 8)",
    "(unique, 0x5500, 8) COPY (register, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5500, 8)",
    " ---  BRANCH (ram, 0xa3e, 8)"
  ],
  "__ZN6spdlog5sinks9base_sinkINSt3__15mutexEE11set_patternERKNS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE": [
    "(unique, 0xef80, 8) COPY (register, 0x28, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x28, 8) COPY (register, 0x20, 8)",
    "(unique, 0xef80, 8) COPY (register, 0xb8, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0xb0, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0x0, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0xb0, 8) COPY (register, 0x30, 8)",
    "(register, 0xb8, 8) COPY (register, 0x38, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x38, 8) , (const, 0x18, 8)",
    "(register, 0x18, 8) COPY (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x236c, 8)",
    " ---  CALL (ram, 0x60c8, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (register, 0xb8, 8)",
    "(register, 0x0, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x38, 8) COPY (register, 0xb8, 8)",
    "(register, 0x30, 8) COPY (register, 0xb0, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x40, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(unique, 0x23d80, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x2378, 8)",
    " ---  CALLIND (unique, 0x23d80, 8)",
    "(register, 0x38, 8) COPY (register, 0x18, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0xb0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0xb8, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  BRANCH (ram, 0x60d0, 8)"
  ],
  "__ZN6spdlog7details2os6renameERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEESA_": [],
  "__ZN6spdlog5sinks15basic_file_sinkINSt3__15mutexEED0Ev": [
    "(unique, 0xef80, 8) COPY (register, 0x28, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x28, 8) COPY (register, 0x20, 8)",
    "(unique, 0xef80, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0x0, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x18, 8) COPY (register, 0x38, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0x38, 8) , (const, 0x60, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x38, 8) , (const, 0x60, 8)",
    "(register, 0x38, 8) INT_ADD (register, 0x38, 8) , (const, 0x60, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x38, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x38, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x38, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x2282, 8)",
    " ---  CALL (ram, 0xa0, 8)",
    "(register, 0x0, 8) COPY (ram, 0x37e8, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0x0, 8) , (const, 0x10, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x0, 8) , (const, 0x10, 8)",
    "(register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x10, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x0, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x0, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0x5500, 8) COPY (register, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (register, 0x18, 8) , (unique, 0x5500, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x18, 8)",
    "(register, 0x38, 8) COPY (unique, 0x3100, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x2299, 8)",
    " ---  CALL (ram, 0x60d8, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x10, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x10, 8)",
    "(unique, 0x5800, 8) COPY (const, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5800, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x56080, 8) INT_AND (register, 0x38, 8) , (register, 0x38, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x56080, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x22b0, 8) , (register, 0x206, 1)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)",
    "(register, 0x0, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x8, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(unique, 0x23d80, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x22b0, 8)",
    " ---  CALLIND (unique, 0x23d80, 8)",
    "(register, 0x38, 8) COPY (register, 0x18, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  BRANCH (ram, 0x6108, 8)"
  ],
  "__ZNSt12length_errorC1B7v160006EPKc": [
    "(unique, 0xef80, 8) COPY (register, 0x28, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x28, 8) COPY (register, 0x20, 8)",
    "(unique, 0xef80, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0x0, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x18, 8) COPY (register, 0x38, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x2ade, 8)",
    " ---  CALL (ram, 0x6088, 8)",
    "(register, 0x0, 8) COPY (ram, 0x6100, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0x0, 8) , (const, 0x10, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x0, 8) , (const, 0x10, 8)",
    "(register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x10, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x0, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x0, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0x5500, 8) COPY (register, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (register, 0x18, 8) , (unique, 0x5500, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  RETURN (register, 0x288, 8)"
  ],
  "__ZNSt3__113unordered_mapIcNS_10unique_ptrIN6spdlog21custom_flag_formatterENS_14default_deleteIS3_EEEENS_4hashIcEENS_8equal_toIcEENS_9allocatorINS_4pairIKcS6_EEEEED1B7v160006Ev": [
    "(unique, 0xef80, 8) COPY (register, 0x28, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x28, 8) COPY (register, 0x20, 8)",
    "(unique, 0xef80, 8) COPY (register, 0xb8, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0xb0, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0x0, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x18, 8) COPY (register, 0x38, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x38, 8) , (const, 0x10, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0xb0, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x56080, 8) INT_AND (register, 0xb0, 8) , (register, 0xb0, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x56080, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0xcb80, 1) BOOL_NEGATE (register, 0x206, 1)",
    " ---  CBRANCH (ram, 0x2c90, 8) , (unique, 0xcb80, 1)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x5800, 8) COPY (const, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (register, 0x18, 8) , (unique, 0x5800, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x56080, 8) INT_AND (register, 0x38, 8) , (register, 0x38, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x56080, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x2cac, 8) , (register, 0x206, 1)",
    "(register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0xb0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0xb8, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  BRANCH (ram, 0x6108, 8)",
    "(register, 0x38, 8) COPY (register, 0xb0, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x2c88, 8)",
    " ---  CALL (ram, 0x6108, 8)",
    "(register, 0xb0, 8) COPY (register, 0xb8, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x56080, 8) INT_AND (register, 0xb8, 8) , (register, 0xb8, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x56080, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x2c56, 8) , (register, 0x206, 1)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (register, 0xb0, 8)",
    "(register, 0xb8, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0xb0, 8) , (const, 0x18, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0xb0, 8) , (const, 0x18, 8)",
    "(unique, 0x5800, 8) COPY (const, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5800, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x56080, 8) INT_AND (register, 0x38, 8) , (register, 0x38, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x56080, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x2c80, 8) , (register, 0x206, 1)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)",
    "(register, 0x0, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x8, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(unique, 0x23d80, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x2caa, 8)",
    " ---  CALLIND (unique, 0x23d80, 8)",
    " ---  BRANCH (ram, 0x2c80, 8)",
    "(register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0xb0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0xb8, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  RETURN (register, 0x288, 8)"
  ],
  "__ZN6spdlog7details11file_helperD2Ev": [
    "(unique, 0xef80, 8) COPY (register, 0x28, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x28, 8) COPY (register, 0x20, 8)",
    "(unique, 0xef80, 8) COPY (register, 0xb0, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x200, 1) INT_LESS (register, 0x20, 8) , (const, 0x10, 8)",
    "(register, 0x20b, 1) INT_SBORROW (register, 0x20, 8) , (const, 0x10, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x10, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x18, 8) COPY (register, 0x38, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x38, 8) , (const, 0x8, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x56080, 8) INT_AND (register, 0x38, 8) , (register, 0x38, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x56080, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0xff, 8) , (register, 0x206, 1)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xb0, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)",
    "(register, 0x0, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x56080, 8) INT_AND (register, 0x0, 8) , (register, 0x0, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x56080, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0xdc, 8) , (register, 0x206, 1)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x10, 8)",
    "(register, 0x30, 8) COPY (unique, 0x3100, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffe8, 8)",
    "(unique, 0x5500, 8) COPY (register, 0x38, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5500, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)",
    "(register, 0x8, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffe8, 8)",
    "(register, 0x10, 8) COPY (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (register, 0x0, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x8, 8) , (const, 0x30, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(unique, 0x23d80, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0xd8, 8)",
    " ---  CALLIND (unique, 0x23d80, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x8, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0xe1, 8)",
    " ---  CALL (ram, 0x6160, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x8, 8)",
    "(unique, 0x5800, 8) COPY (const, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5800, 8)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xe0, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x56080, 8) INT_AND (register, 0x38, 8) , (register, 0x38, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x56080, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0xff, 8) , (register, 0x206, 1)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x10, 8)",
    "(register, 0x30, 8) COPY (unique, 0x3100, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)",
    "(register, 0x0, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x30, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(unique, 0x23d80, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0xff, 8)",
    " ---  CALLIND (unique, 0x23d80, 8)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xc0, 8)",
    "(register, 0x8, 8) COPY (unique, 0x3200, 8)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xe0, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x200, 1) INT_LESS (register, 0x38, 8) , (register, 0x8, 8)",
    "(register, 0x20b, 1) INT_SBORROW (register, 0x38, 8) , (register, 0x8, 8)",
    "(unique, 0x25c80, 8) INT_SUB (register, 0x38, 8) , (register, 0x8, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x25c80, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x25c80, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x25c80, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x13b, 8) , (register, 0x206, 1)",
    "(register, 0x0, 8) COPY (const, 0x5, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x56080, 8) INT_AND (register, 0x38, 8) , (register, 0x38, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x56080, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0xcb80, 1) BOOL_NEGATE (register, 0x206, 1)",
    " ---  CBRANCH (ram, 0x143, 8) , (unique, 0xcb80, 1)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x90, 8)",
    "(register, 0x8, 8) COPY (unique, 0x3200, 8)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xb0, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x200, 1) INT_LESS (register, 0x38, 8) , (register, 0x8, 8)",
    "(register, 0x20b, 1) INT_SBORROW (register, 0x38, 8) , (register, 0x8, 8)",
    "(unique, 0x25c80, 8) INT_SUB (register, 0x38, 8) , (register, 0x8, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x25c80, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x25c80, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x25c80, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x15c, 8) , (register, 0x206, 1)",
    "(register, 0x0, 8) COPY (const, 0x5, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x56080, 8) INT_AND (register, 0x38, 8) , (register, 0x38, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x56080, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0xcb80, 1) BOOL_NEGATE (register, 0x206, 1)",
    " ---  CBRANCH (ram, 0x164, 8) , (unique, 0xcb80, 1)",
    " ---  BRANCH (ram, 0x16a, 8)",
    "(register, 0x0, 8) COPY (const, 0x4, 8)",
    "(register, 0x38, 8) COPY (register, 0x8, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)",
    "(register, 0x8, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x8, 8)",
    "(unique, 0x3400, 8) INT_ADD (register, 0x8, 8) , (unique, 0x3300, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8)",
    "(unique, 0x23d80, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x149, 8)",
    " ---  CALLIND (unique, 0x23d80, 8)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x90, 8)",
    "(register, 0x8, 8) COPY (unique, 0x3200, 8)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xb0, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x200, 1) INT_LESS (register, 0x38, 8) , (register, 0x8, 8)",
    "(register, 0x20b, 1) INT_SBORROW (register, 0x38, 8) , (register, 0x8, 8)",
    "(unique, 0x25c80, 8) INT_SUB (register, 0x38, 8) , (register, 0x8, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x25c80, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x25c80, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x25c80, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0xcb80, 1) BOOL_NEGATE (register, 0x206, 1)",
    " ---  CBRANCH (ram, 0x12f, 8) , (unique, 0xcb80, 1)",
    "(register, 0x0, 8) COPY (const, 0x4, 8)",
    "(register, 0x38, 8) COPY (register, 0x8, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)",
    "(register, 0x8, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x8, 8)",
    "(unique, 0x3400, 8) INT_ADD (register, 0x8, 8) , (unique, 0x3300, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8)",
    "(unique, 0x23d80, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x16a, 8)",
    " ---  CALLIND (unique, 0x23d80, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x30, 8)",
    "(register, 0xb0, 8) COPY (unique, 0x3100, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x60, 8)",
    "(register, 0x8, 8) COPY (unique, 0x3100, 8)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x80, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x200, 1) INT_LESS (register, 0x38, 8) , (register, 0x8, 8)",
    "(register, 0x20b, 1) INT_SBORROW (register, 0x38, 8) , (register, 0x8, 8)",
    "(unique, 0x25c80, 8) INT_SUB (register, 0x38, 8) , (register, 0x8, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x25c80, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x25c80, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x25c80, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x1b3, 8) , (register, 0x206, 1)",
    "(register, 0x0, 8) COPY (const, 0x5, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x56080, 8) INT_AND (register, 0x38, 8) , (register, 0x38, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x56080, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0xcb80, 1) BOOL_NEGATE (register, 0x206, 1)",
    " ---  CBRANCH (ram, 0x1bb, 8) , (unique, 0xcb80, 1)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x50, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x200, 1) INT_LESS (register, 0x38, 8) , (register, 0xb0, 8)",
    "(register, 0x20b, 1) INT_SBORROW (register, 0x38, 8) , (register, 0xb0, 8)",
    "(unique, 0x25c80, 8) INT_SUB (register, 0x38, 8) , (register, 0xb0, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x25c80, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x25c80, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x25c80, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x1ca, 8) , (register, 0x206, 1)",
    "(register, 0x0, 8) COPY (const, 0x5, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x56080, 8) INT_AND (register, 0x38, 8) , (register, 0x38, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x56080, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0xcb80, 1) BOOL_NEGATE (register, 0x206, 1)",
    " ---  CBRANCH (ram, 0x1d2, 8) , (unique, 0xcb80, 1)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x10, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0xc000, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(unique, 0x55980, 1) INT_AND (unique, 0xc000, 1) , (const, 0x1, 1)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x55980, 1) , (const, 0x0, 1)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x55980, 1) , (const, 0x0, 1)",
    "(unique, 0x13400, 1) INT_AND (unique, 0x55980, 1) , (const, 0xff, 1)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 1)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x1aa, 8) , (register, 0x206, 1)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x20, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x1aa, 8)",
    " ---  CALL (ram, 0x6108, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x10, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x10, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x10, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0xb0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  RETURN (register, 0x288, 8)",
    "(register, 0x0, 8) COPY (const, 0x4, 8)",
    "(register, 0x38, 8) COPY (register, 0x8, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)",
    "(register, 0x8, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x8, 8)",
    "(unique, 0x3400, 8) INT_ADD (register, 0x8, 8) , (unique, 0x3300, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8)",
    "(unique, 0x23d80, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x1c1, 8)",
    " ---  CALLIND (unique, 0x23d80, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x50, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x200, 1) INT_LESS (register, 0x38, 8) , (register, 0xb0, 8)",
    "(register, 0x20b, 1) INT_SBORROW (register, 0x38, 8) , (register, 0xb0, 8)",
    "(unique, 0x25c80, 8) INT_SUB (register, 0x38, 8) , (register, 0xb0, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x25c80, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x25c80, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x25c80, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0xcb80, 1) BOOL_NEGATE (register, 0x206, 1)",
    " ---  CBRANCH (ram, 0x191, 8) , (unique, 0xcb80, 1)",
    "(register, 0x0, 8) COPY (const, 0x4, 8)",
    "(register, 0x38, 8) COPY (register, 0xb0, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)",
    "(register, 0x8, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x8, 8)",
    "(unique, 0x3400, 8) INT_ADD (register, 0x8, 8) , (unique, 0x3300, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8)",
    "(unique, 0x23d80, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x1d8, 8)",
    " ---  CALLIND (unique, 0x23d80, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x10, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0xc000, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(unique, 0x55980, 1) INT_AND (unique, 0xc000, 1) , (const, 0x1, 1)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x55980, 1) , (const, 0x0, 1)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x55980, 1) , (const, 0x0, 1)",
    "(unique, 0x13400, 1) INT_AND (unique, 0x55980, 1) , (const, 0xff, 1)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 1)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0xcb80, 1) BOOL_NEGATE (register, 0x206, 1)",
    " ---  CBRANCH (ram, 0x1a1, 8) , (unique, 0xcb80, 1)",
    " ---  BRANCH (ram, 0x1aa, 8)"
  ],
  "__ZN6spdlog5sinks18rotating_file_sinkINSt3__15mutexEEC1ENS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEmmbRKNS_19file_event_handlersE": [
    "(unique, 0xef80, 8) COPY (register, 0x28, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x28, 8) COPY (register, 0x20, 8)",
    "(register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  BRANCH (ram, 0x1050, 8)"
  ],
  "___clang_call_terminate": [
    "(unique, 0xef80, 8) COPY (register, 0x0, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x266, 8)",
    " ---  CALL (ram, 0x6120, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x26b, 8)",
    " ---  CALL (ram, 0x60e0, 8)",
    "(unique, 0x3a80, 8) INT_MULT (register, 0x0, 8) , (const, 0x1, 8)",
    "(unique, 0x3b80, 8) INT_ADD (register, 0x0, 8) , (unique, 0x3a80, 8)"
  ],
  "__ZN6spdlog5sinks15basic_file_sinkINSt3__15mutexEEC1ERKNS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEbRKNS_19file_event_handlersE": [
    "(unique, 0xef80, 8) COPY (register, 0x28, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x28, 8) COPY (register, 0x20, 8)",
    "(unique, 0xef80, 8) COPY (register, 0xb8, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0xb0, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0xa0, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0xa0, 8) COPY (register, 0x8, 8)",
    "(register, 0xb8, 4) COPY (register, 0x10, 4)",
    "(register, 0xb8, 8) INT_ZEXT (register, 0xb8, 4)",
    "(register, 0xb0, 8) COPY (register, 0x30, 8)",
    "(register, 0x18, 8) COPY (register, 0x38, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0xc7c, 8)",
    " ---  CALL (ram, 0xb60, 8)",
    "(register, 0x0, 8) COPY (ram, 0x35c8, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0x0, 8) , (const, 0x10, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x0, 8) , (const, 0x10, 8)",
    "(register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x10, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x0, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x0, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0x5500, 8) COPY (register, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (register, 0x18, 8) , (unique, 0x5500, 8)",
    "(register, 0x0, 8) COPY (const, 0xa00000005, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x60, 8)",
    "(unique, 0x5500, 8) COPY (register, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5500, 8)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x90, 8)",
    "(register, 0x38, 8) COPY (unique, 0x3200, 8)",
    "(register, 0x1200, 4) INT_XOR (register, 0x1200, 4) , (register, 0x1200, 4)",
    "(register, 0x1204, 4) INT_XOR (register, 0x1204, 4) , (register, 0x1204, 4)",
    "(register, 0x1208, 4) INT_XOR (register, 0x1208, 4) , (register, 0x1208, 4)",
    "(register, 0x120c, 4) INT_XOR (register, 0x120c, 4) , (register, 0x120c, 4)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x68, 8)",
    "(unique, 0x5580, 16) COPY (register, 0x1200, 16)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5580, 16)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x78, 8)",
    "(unique, 0x5580, 16) COPY (register, 0x1200, 16)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5580, 16)",
    "(register, 0x30, 8) COPY (register, 0xa0, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0xcb2, 8)",
    " ---  CALL (ram, 0x2880, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x60, 8)",
    "(register, 0xa0, 8) COPY (unique, 0x3100, 8)",
    "(register, 0x10, 4) INT_ZEXT (register, 0xb8, 1)",
    "(register, 0x10, 8) INT_ZEXT (register, 0x10, 4)",
    "(register, 0x38, 8) COPY (register, 0xa0, 8)",
    "(register, 0x30, 8) COPY (register, 0xb0, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0xcc5, 8)",
    " ---  CALL (ram, 0x280, 8)",
    "(register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0xa0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0xb0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0xb8, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  RETURN (register, 0x288, 8)"
  ],
  "__ZN6spdlog5sinks9base_sinkINSt3__15mutexEE14set_formatter_ENS2_10unique_ptrINS_9formatterENS2_14default_deleteIS6_EEEE": [
    "(unique, 0xef80, 8) COPY (register, 0x28, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x28, 8) COPY (register, 0x20, 8)",
    "(register, 0x0, 8) COPY (register, 0x38, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)",
    "(register, 0x8, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x5800, 8) COPY (const, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (register, 0x30, 8) , (unique, 0x5800, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x38, 8) , (const, 0x10, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x10, 8)",
    "(unique, 0x5500, 8) COPY (register, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5500, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x56080, 8) INT_AND (register, 0x38, 8) , (register, 0x38, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x56080, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x24f5, 8) , (register, 0x206, 1)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)",
    "(register, 0x0, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x8, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    " ---  BRANCHIND (unique, 0xc280, 8)",
    "(register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  RETURN (register, 0x288, 8)"
  ]
}