{
  "__ZN6spdlog5sinks18rotating_file_sinkINSt3__15mutexEE12rename_file_ERKNS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEESC_": [
    "(unique, 0xef80, 8) COPY (register, 0x28, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x28, 8) COPY (register, 0x20, 8)",
    "(unique, 0xef80, 8) COPY (register, 0xb0, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x18, 8) COPY (register, 0x10, 8)",
    "(register, 0xb0, 8) COPY (register, 0x30, 8)",
    "(register, 0x38, 8) COPY (register, 0x10, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x1445, 8)",
    " ---  CALL (ram, 0x5050, 8)",
    "(register, 0x38, 8) COPY (register, 0xb0, 8)",
    "(register, 0x30, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x1450, 8)",
    " ---  CALL (ram, 0x5058, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x55f80, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x55f80, 4) , (const, 0x0, 4)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x55f80, 4) , (const, 0x0, 4)",
    "(unique, 0x13400, 4) INT_AND (unique, 0x55f80, 4) , (const, 0xff, 4)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 4)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x0, 1) COPY (register, 0x206, 1)",
    "(register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0xb0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  RETURN (register, 0x288, 8)"
  ],
  "__ZN6spdlog7details2os8dir_nameENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE": [],
  "__ZNSt3__15mutex6unlockEv": [],
  "___error": [],
  "__ZNK6spdlog5sinks15basic_file_sinkINSt3__15mutexEE8filenameEv": [
    "(unique, 0xef80, 8) COPY (register, 0x28, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x28, 8) COPY (register, 0x20, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x38, 8) , (const, 0x68, 8)",
    "(register, 0x0, 8) COPY (unique, 0x3100, 8)",
    "(register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  RETURN (register, 0x288, 8)"
  ],
  "__ZN6spdlog5sinks18rotating_file_sinkINSt3__15mutexEED1Ev": [
    "(unique, 0xef80, 8) COPY (register, 0x28, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x28, 8) COPY (register, 0x20, 8)",
    "(unique, 0xef80, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0x0, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x18, 8) COPY (register, 0x38, 8)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x38, 8) , (const, 0x90, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x56080, 8) INT_AND (register, 0x38, 8) , (register, 0x38, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x56080, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x21c5, 8) , (register, 0x206, 1)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x21ba, 8)",
    " ---  CALL (ram, 0x5148, 8)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x90, 8)",
    "(unique, 0x5800, 8) COPY (const, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (unique, 0x5800, 8)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x98, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0xc000, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)",
    "(unique, 0x55980, 1) INT_AND (unique, 0xc000, 1) , (const, 0x1, 1)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x55980, 1) , (const, 0x0, 1)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x55980, 1) , (const, 0x0, 1)",
    "(unique, 0x13400, 1) INT_AND (unique, 0x55980, 1) , (const, 0xff, 1)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 1)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x21da, 8) , (register, 0x206, 1)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xa8, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x21da, 8)",
    " ---  CALL (ram, 0x50f8, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x58, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0xc000, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(unique, 0x55980, 1) INT_AND (unique, 0xc000, 1) , (const, 0x1, 1)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x55980, 1) , (const, 0x0, 1)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x55980, 1) , (const, 0x0, 1)",
    "(unique, 0x13400, 1) INT_AND (unique, 0x55980, 1) , (const, 0xff, 1)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 1)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x21e9, 8) , (register, 0x206, 1)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x68, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x21e9, 8)",
    " ---  CALL (ram, 0x50f8, 8)",
    "(register, 0x0, 8) COPY (ram, 0x3038, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0x0, 8) , (const, 0x10, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x0, 8) , (const, 0x10, 8)",
    "(register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x10, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x0, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x0, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0x5500, 8) COPY (register, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (register, 0x18, 8) , (unique, 0x5500, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x18, 8)",
    "(register, 0x38, 8) COPY (unique, 0x3100, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x2200, 8)",
    " ---  CALL (ram, 0x50d0, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x10, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x10, 8)",
    "(unique, 0x5800, 8) COPY (const, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5800, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x56080, 8) INT_AND (register, 0x38, 8) , (register, 0x38, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x56080, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x221d, 8) , (register, 0x206, 1)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)",
    "(register, 0x0, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x8, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    " ---  BRANCHIND (unique, 0xc280, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  RETURN (register, 0x288, 8)"
  ],
  "__ZN6spdlog5sinks18rotating_file_sinkINS_7details10null_mutexEE12rename_file_ERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEESD_": [
    "(unique, 0xef80, 8) COPY (register, 0x28, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x28, 8) COPY (register, 0x20, 8)",
    "(unique, 0xef80, 8) COPY (register, 0xb0, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x18, 8) COPY (register, 0x10, 8)",
    "(register, 0xb0, 8) COPY (register, 0x30, 8)",
    "(register, 0x38, 8) COPY (register, 0x10, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x1c35, 8)",
    " ---  CALL (ram, 0x5050, 8)",
    "(register, 0x38, 8) COPY (register, 0xb0, 8)",
    "(register, 0x30, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x1c40, 8)",
    " ---  CALL (ram, 0x5058, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x55f80, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x55f80, 4) , (const, 0x0, 4)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x55f80, 4) , (const, 0x0, 4)",
    "(unique, 0x13400, 4) INT_AND (unique, 0x55f80, 4) , (const, 0xff, 4)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 4)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x0, 1) COPY (register, 0x206, 1)",
    "(register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0xb0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  RETURN (register, 0x288, 8)"
  ],
  "__ZN6spdlog5sinks9base_sinkINSt3__15mutexEED1Ev": [
    "(unique, 0xef80, 8) COPY (register, 0x28, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x28, 8) COPY (register, 0x20, 8)",
    " ---  CALLOTHER (const, 0x4d, 4)",
    " ---  BRANCH (ram, 0x23a4, 8)"
  ],
  "__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_": [],
  "__ZN6spdlog5sinks9base_sinkINS_7details10null_mutexEE5flushEv": [
    "(unique, 0xef80, 8) COPY (register, 0x28, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x28, 8) COPY (register, 0x20, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)",
    "(register, 0x0, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x38, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    " ---  BRANCHIND (unique, 0xc280, 8)"
  ],
  "__ZN6spdlog5sinks9base_sinkINSt3__15mutexEE12set_pattern_ERKNS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE": [
    "(unique, 0xef80, 8) COPY (register, 0x28, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x28, 8) COPY (register, 0x20, 8)",
    "(unique, 0xef80, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x200, 1) INT_LESS (register, 0x20, 8) , (const, 0x18, 8)",
    "(register, 0x20b, 1) INT_SBORROW (register, 0x20, 8) , (const, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x18, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x18, 8) COPY (register, 0x38, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xfffffffffffffff0, 8)",
    "(register, 0x38, 8) COPY (unique, 0x3100, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x1eb5, 8)",
    " ---  CALL (ram, 0x2890, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xfffffffffffffff0, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x0, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xfffffffffffffff0, 8)",
    "(unique, 0x5800, 8) COPY (const, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5800, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffe8, 8)",
    "(unique, 0x5500, 8) COPY (register, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5500, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)",
    "(register, 0x0, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffe8, 8)",
    "(register, 0x30, 8) COPY (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (register, 0x18, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x48, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(unique, 0x23d80, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x1ed2, 8)",
    " ---  CALLIND (unique, 0x23d80, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffe8, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffe8, 8)",
    "(unique, 0x5800, 8) COPY (const, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5800, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x56080, 8) INT_AND (register, 0x38, 8) , (register, 0x38, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x56080, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x1ee9, 8) , (register, 0x206, 1)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)",
    "(register, 0x0, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x8, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(unique, 0x23d80, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x1ee9, 8)",
    " ---  CALLIND (unique, 0x23d80, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xfffffffffffffff0, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x18, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xfffffffffffffff0, 8)",
    "(unique, 0x5800, 8) COPY (const, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5800, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x56080, 8) INT_AND (register, 0x18, 8) , (register, 0x18, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x56080, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x1f0a, 8) , (register, 0x206, 1)",
    "(register, 0x38, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x1f02, 8)",
    " ---  CALL (ram, 0x24b0, 8)",
    "(register, 0x38, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x1f0a, 8)",
    " ---  CALL (ram, 0x50f8, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x18, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x18, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x18, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  RETURN (register, 0x288, 8)"
  ],
  "_fwrite": [],
  "__ZNK6spdlog7details11file_helper4sizeEv": [
    "(unique, 0xef80, 8) COPY (register, 0x28, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x28, 8) COPY (register, 0x20, 8)",
    "(unique, 0xef80, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x200, 1) INT_LESS (register, 0x20, 8) , (const, 0x38, 8)",
    "(register, 0x20b, 1) INT_SBORROW (register, 0x20, 8) , (const, 0x38, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x38, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x30, 8) COPY (register, 0x38, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x38, 8) , (const, 0x8, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x56080, 8) INT_AND (register, 0x38, 8) , (register, 0x38, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x56080, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x5e0, 8) , (register, 0x206, 1)",
    "(register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x38, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x38, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x38, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  BRANCH (ram, 0x5070, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0x30, 8) , (const, 0x10, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x30, 8) , (const, 0x10, 8)",
    "(register, 0x30, 8) INT_ADD (register, 0x30, 8) , (const, 0x10, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x30, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x30, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x30, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffc8, 8)",
    "(register, 0x18, 8) COPY (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x5f0, 8)",
    " ---  CALL (ram, 0x5040, 8)",
    "(register, 0x10, 8) COPY (const, 0x2db3, 8)",
    "(register, 0x38, 8) COPY (register, 0x18, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(register, 0x30, 4) INT_XOR (register, 0x30, 4) , (register, 0x30, 4)",
    "(register, 0x30, 8) INT_ZEXT (register, 0x30, 4)",
    "(register, 0x207, 1) INT_SLESS (register, 0x30, 4) , (const, 0x0, 4)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x0, 4)",
    "(unique, 0x13400, 4) INT_AND (register, 0x30, 4) , (const, 0xff, 4)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 4)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x601, 8)",
    " ---  CALL (ram, 0x50a0, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x10, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x8, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xfffffffffffffff0, 8)",
    "(unique, 0x5500, 8) COPY (register, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5500, 8)",
    "(unique, 0x5580, 16) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)",
    "(unique, 0x7c980, 16) COPY (unique, 0x5580, 16)",
    "(register, 0x1200, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0x0, 4)",
    "(register, 0x1204, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0x4, 4)",
    "(register, 0x1208, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0x8, 4)",
    "(register, 0x120c, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0xc, 4)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffe0, 8)",
    "(unique, 0x5580, 16) COPY (register, 0x1200, 16)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5580, 16)",
    "(register, 0x1200, 4) INT_XOR (register, 0x1200, 4) , (register, 0x1200, 4)",
    "(register, 0x1204, 4) INT_XOR (register, 0x1204, 4) , (register, 0x1204, 4)",
    "(register, 0x1208, 4) INT_XOR (register, 0x1208, 4) , (register, 0x1208, 4)",
    "(register, 0x120c, 4) INT_XOR (register, 0x120c, 4) , (register, 0x120c, 4)",
    "(unique, 0x5580, 16) COPY (register, 0x1200, 16)",
    " ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (unique, 0x5580, 16)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x10, 8)",
    "(unique, 0x5800, 8) COPY (const, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5800, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffe0, 8)",
    "(register, 0x38, 8) COPY (unique, 0x3100, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x627, 8)",
    " ---  CALL (ram, 0x5010, 8)",
    " ---  CALLOTHER (const, 0x4d, 4)",
    " ---  BRANCH (ram, 0x627, 8)"
  ],
  "___stack_chk_fail": [],
  "__ZN6spdlog7details2os8filesizeEP7__sFILE": [],
  "__ZN6spdlog5sinks9base_sinkINS_7details10null_mutexEE14set_formatter_ENSt3__110unique_ptrINS_9formatterENS5_14default_deleteIS7_EEEE": [
    "(unique, 0xef80, 8) COPY (register, 0x28, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x28, 8) COPY (register, 0x20, 8)",
    "(register, 0x0, 8) COPY (register, 0x38, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)",
    "(register, 0x8, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x5800, 8) COPY (const, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (register, 0x30, 8) , (unique, 0x5800, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x38, 8) , (const, 0x10, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x10, 8)",
    "(unique, 0x5500, 8) COPY (register, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5500, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x56080, 8) INT_AND (register, 0x38, 8) , (register, 0x38, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x56080, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x2195, 8) , (register, 0x206, 1)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)",
    "(register, 0x0, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x8, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    " ---  BRANCHIND (unique, 0xc280, 8)",
    "(register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  RETURN (register, 0x288, 8)"
  ],
  "_strlen": [],
  "__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1B7v160006IDnEEPKc": [
    "(unique, 0xef80, 8) COPY (register, 0x28, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x28, 8) COPY (register, 0x20, 8)",
    "(unique, 0xef80, 8) COPY (register, 0xb8, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0xb0, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0xa0, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0xb0, 8) COPY (register, 0x30, 8)",
    "(register, 0x18, 8) COPY (register, 0x38, 8)",
    "(register, 0x38, 8) COPY (register, 0x30, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x409, 8)",
    " ---  CALL (ram, 0x5168, 8)",
    "(register, 0x200, 1) INT_LESS (register, 0x0, 8) , (const, 0xfffffffffffffff0, 8)",
    "(register, 0x20b, 1) INT_SBORROW (register, 0x0, 8) , (const, 0xfffffffffffffff0, 8)",
    "(unique, 0x25880, 8) INT_SUB (register, 0x0, 8) , (const, 0xfffffffffffffff0, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x25880, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x25880, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x25880, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0xca80, 1) BOOL_NEGATE (register, 0x200, 1)",
    " ---  CBRANCH (ram, 0x462, 8) , (unique, 0xca80, 1)",
    "(register, 0xb8, 8) COPY (register, 0x0, 8)",
    "(register, 0x200, 1) INT_LESS (register, 0x0, 8) , (const, 0x16, 8)",
    "(register, 0x20b, 1) INT_SBORROW (register, 0x0, 8) , (const, 0x16, 8)",
    "(unique, 0x25880, 8) INT_SUB (register, 0x0, 8) , (const, 0x16, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x25880, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x25880, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x25880, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0xcd00, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)",
    "(unique, 0xce00, 1) BOOL_NEGATE (unique, 0xcd00, 1)",
    " ---  CBRANCH (ram, 0x423, 8) , (unique, 0xce00, 1)",
    "(unique, 0x3300, 8) INT_MULT (register, 0xb8, 8) , (const, 0x1, 8)",
    "(unique, 0x3400, 8) INT_ADD (register, 0xb8, 8) , (unique, 0x3300, 8)",
    "(register, 0x0, 4) SUBPIECE (unique, 0x3400, 8) , (const, 0x0, 4)",
    "(register, 0x0, 8) INT_ZEXT (register, 0x0, 4)",
    "(unique, 0x5380, 1) COPY (register, 0x0, 1)",
    " ---  STORE (const, 0x1b1, 4) , (register, 0x18, 8) , (unique, 0x5380, 1)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x18, 8) , (const, 0x1, 8)",
    "(register, 0x18, 8) INT_ADD (register, 0x18, 8) , (const, 0x1, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x18, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x18, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x18, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  BRANCH (ram, 0x446, 8)",
    "(register, 0xa0, 8) COPY (register, 0xb8, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(register, 0xa0, 8) INT_OR (register, 0xa0, 8) , (const, 0xf, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0xa0, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0xa0, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0xa0, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0x3800, 8) INT_ADD (const, 0x1, 8) , (register, 0xa0, 8)",
    "(register, 0x38, 8) COPY (unique, 0x3800, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x434, 8)",
    " ---  CALL (ram, 0x5100, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x10, 8)",
    "(unique, 0x5500, 8) COPY (register, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5500, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0xa0, 8) , (const, 0x2, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0xa0, 8) , (const, 0x2, 8)",
    "(register, 0xa0, 8) INT_ADD (register, 0xa0, 8) , (const, 0x2, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0xa0, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0xa0, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0xa0, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0x5500, 8) COPY (register, 0xa0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (register, 0x18, 8) , (unique, 0x5500, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x8, 8)",
    "(unique, 0x5500, 8) COPY (register, 0xb8, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5500, 8)",
    "(register, 0x18, 8) COPY (register, 0x0, 8)",
    "(register, 0x38, 8) COPY (register, 0x18, 8)",
    "(register, 0x30, 8) COPY (register, 0xb0, 8)",
    "(register, 0x10, 8) COPY (register, 0xb8, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x454, 8)",
    " ---  CALL (ram, 0x5160, 8)",
    "(unique, 0x3300, 8) INT_MULT (register, 0xb8, 8) , (const, 0x1, 8)",
    "(unique, 0x3400, 8) INT_ADD (register, 0x18, 8) , (unique, 0x3300, 8)",
    "(unique, 0x5680, 1) COPY (const, 0x0, 1)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (unique, 0x5680, 1)",
    "(register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0xa0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0xb0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0xb8, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  RETURN (register, 0x288, 8)",
    "(register, 0x38, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x46a, 8)",
    " ---  CALL (ram, 0x23e0, 8)"
  ],
  "__ZN6spdlog5sinks18rotating_file_sinkINSt3__15mutexEE13calc_filenameERKNS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEm": [
    "(unique, 0xef80, 8) COPY (register, 0x28, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x28, 8) COPY (register, 0x20, 8)",
    "(unique, 0xef80, 8) COPY (register, 0xb0, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x200, 1) INT_LESS (register, 0x20, 8) , (const, 0x70, 8)",
    "(register, 0x20b, 1) INT_SBORROW (register, 0x20, 8) , (const, 0x70, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x70, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x18, 8) COPY (register, 0x38, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x56080, 8) INT_AND (register, 0x10, 8) , (register, 0x10, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x56080, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0xe5e, 8) , (register, 0x206, 1)",
    "(register, 0xb0, 8) COPY (register, 0x10, 8)",
    "(register, 0x1200, 4) INT_XOR (register, 0x1200, 4) , (register, 0x1200, 4)",
    "(register, 0x1204, 4) INT_XOR (register, 0x1204, 4) , (register, 0x1204, 4)",
    "(register, 0x1208, 4) INT_XOR (register, 0x1208, 4) , (register, 0x1208, 4)",
    "(register, 0x120c, 4) INT_XOR (register, 0x120c, 4) , (register, 0x120c, 4)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffd0, 8)",
    "(unique, 0x5580, 16) COPY (register, 0x1200, 16)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5580, 16)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffe0, 8)",
    "(unique, 0x5800, 8) COPY (const, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5800, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffff80, 8)",
    "(register, 0x38, 8) COPY (unique, 0x3100, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0xe1e, 8)",
    " ---  CALL (ram, 0x680, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffff90, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x0, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffe0, 8)",
    "(unique, 0x5500, 8) COPY (register, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5500, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffff80, 8)",
    "(unique, 0x5580, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(unique, 0x7c980, 16) COPY (unique, 0x5580, 16)",
    "(register, 0x1200, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0x0, 4)",
    "(register, 0x1204, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0x4, 4)",
    "(register, 0x1208, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0x8, 4)",
    "(register, 0x120c, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0xc, 4)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffd0, 8)",
    "(unique, 0x5580, 16) COPY (register, 0x1200, 16)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5580, 16)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffff98, 8)",
    "(unique, 0x5580, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(unique, 0x7c980, 16) COPY (unique, 0x5580, 16)",
    "(register, 0x1200, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0x0, 4)",
    "(register, 0x1204, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0x4, 4)",
    "(register, 0x1208, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0x8, 4)",
    "(register, 0x120c, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0xc, 4)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffb0, 8)",
    "(unique, 0x5580, 16) COPY (register, 0x1200, 16)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5580, 16)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffa8, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x8, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffc0, 8)",
    "(unique, 0x5500, 8) COPY (register, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5500, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffd0, 8)",
    "(unique, 0xc000, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x10, 4) INT_ZEXT (unique, 0xc000, 1)",
    "(register, 0x10, 8) INT_ZEXT (register, 0x10, 4)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x55980, 1) INT_AND (register, 0x10, 1) , (const, 0x1, 1)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x55980, 1) , (const, 0x0, 1)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x55980, 1) , (const, 0x0, 1)",
    "(unique, 0x13400, 1) INT_AND (unique, 0x55980, 1) , (const, 0xff, 1)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 1)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0xe68, 8) , (register, 0x206, 1)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffd8, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x10, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffb0, 8)",
    "(unique, 0xc000, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x30, 4) INT_ZEXT (unique, 0xc000, 1)",
    "(register, 0x30, 8) INT_ZEXT (register, 0x30, 4)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x55980, 1) INT_AND (register, 0x30, 1) , (const, 0x1, 1)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x55980, 1) , (const, 0x0, 1)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x55980, 1) , (const, 0x0, 1)",
    "(unique, 0x13400, 1) INT_AND (unique, 0x55980, 1) , (const, 0xff, 1)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 1)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0xcb80, 1) BOOL_NEGATE (register, 0x206, 1)",
    " ---  CBRANCH (ram, 0xe79, 8) , (unique, 0xcb80, 1)",
    "(unique, 0x54200, 8) INT_AND (register, 0x30, 8) , (const, 0x1, 8)",
    "(register, 0x200, 1) INT_NOTEQUAL (unique, 0x54200, 8) , (const, 0x0, 8)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(register, 0x30, 8) INT_RIGHT (register, 0x30, 8) , (const, 0x1, 4)",
    "(register, 0x207, 1) INT_SLESS (register, 0x30, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x30, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x30, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffb1, 8)",
    "(register, 0x8, 8) COPY (unique, 0x3100, 8)",
    " ---  BRANCH (ram, 0xe7d, 8)",
    "(register, 0x38, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0xe66, 8)",
    " ---  CALL (ram, 0x50a8, 8)",
    " ---  BRANCH (ram, 0xecc, 8)",
    "(unique, 0x54200, 8) INT_AND (register, 0x10, 8) , (const, 0x1, 8)",
    "(register, 0x200, 1) INT_NOTEQUAL (unique, 0x54200, 8) , (const, 0x0, 8)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(register, 0x10, 8) INT_RIGHT (register, 0x10, 8) , (const, 0x1, 4)",
    "(register, 0x207, 1) INT_SLESS (register, 0x10, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x10, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x10, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffd1, 8)",
    "(register, 0x0, 8) COPY (unique, 0x3100, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffb0, 8)",
    "(unique, 0xc000, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x30, 4) INT_ZEXT (unique, 0xc000, 1)",
    "(register, 0x30, 8) INT_ZEXT (register, 0x30, 4)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x55980, 1) INT_AND (register, 0x30, 1) , (const, 0x1, 1)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x55980, 1) , (const, 0x0, 1)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x55980, 1) , (const, 0x0, 1)",
    "(unique, 0x13400, 1) INT_AND (unique, 0x55980, 1) , (const, 0xff, 1)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 1)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0xe55, 8) , (register, 0x206, 1)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffb8, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x30, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffff80, 8)",
    "(unique, 0x5500, 8) COPY (register, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5500, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffff88, 8)",
    "(unique, 0x5500, 8) COPY (register, 0x10, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5500, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffff90, 8)",
    "(unique, 0x5500, 8) COPY (register, 0xb0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5500, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffa0, 8)",
    "(unique, 0x5500, 8) COPY (register, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5500, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffa8, 8)",
    "(unique, 0x5500, 8) COPY (register, 0x30, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5500, 8)",
    "(register, 0x30, 8) COPY (const, 0x2dd5, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffff80, 8)",
    "(register, 0x80, 8) COPY (unique, 0x3100, 8)",
    "(register, 0x10, 8) COPY (const, 0x7, 8)",
    "(register, 0x8, 8) COPY (const, 0xd4d, 8)",
    "(register, 0x38, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0xeae, 8)",
    " ---  CALL (ram, 0x5008, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffb0, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0xc000, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(unique, 0x55980, 1) INT_AND (unique, 0xc000, 1) , (const, 0x1, 1)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x55980, 1) , (const, 0x0, 1)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x55980, 1) , (const, 0x0, 1)",
    "(unique, 0x13400, 1) INT_AND (unique, 0x55980, 1) , (const, 0xff, 1)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 1)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0xebd, 8) , (register, 0x206, 1)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffc0, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0xebd, 8)",
    " ---  CALL (ram, 0x50f8, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffd0, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0xc000, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(unique, 0x55980, 1) INT_AND (unique, 0xc000, 1) , (const, 0x1, 1)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x55980, 1) , (const, 0x0, 1)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x55980, 1) , (const, 0x0, 1)",
    "(unique, 0x13400, 1) INT_AND (unique, 0x55980, 1) , (const, 0xff, 1)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 1)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0xecc, 8) , (register, 0x206, 1)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffe0, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0xecc, 8)",
    " ---  CALL (ram, 0x50f8, 8)",
    "(register, 0x0, 8) COPY (register, 0x18, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x70, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x70, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x70, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0xb0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  RETURN (register, 0x288, 8)"
  ],
  "___cxa_throw": [],
  "__ZN6spdlog5sinks15basic_file_sinkINS_7details10null_mutexEE8sink_it_ERKNS2_7log_msgE": [
    "(unique, 0xef80, 8) COPY (register, 0x28, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x28, 8) COPY (register, 0x20, 8)",
    "(unique, 0xef80, 8) COPY (register, 0xb0, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x200, 1) INT_LESS (register, 0x20, 8) , (const, 0x130, 8)",
    "(register, 0x20b, 1) INT_SBORROW (register, 0x20, 8) , (const, 0x130, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x130, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x18, 8) COPY (register, 0x38, 8)",
    "(register, 0x0, 8) COPY (ram, 0x5140, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)",
    "(register, 0x0, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffe8, 8)",
    "(unique, 0x5500, 8) COPY (register, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5500, 8)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0xfffffffffffffed8, 8)",
    "(unique, 0x5800, 8) COPY (const, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (unique, 0x5800, 8)",
    "(register, 0x0, 8) COPY (ram, 0x30f8, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0x0, 8) , (const, 0x10, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x0, 8) , (const, 0x10, 8)",
    "(register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x10, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x0, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x0, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0xfffffffffffffec8, 8)",
    "(unique, 0x5500, 8) COPY (register, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (unique, 0x5500, 8)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0xfffffffffffffee8, 8)",
    "(register, 0xb0, 8) COPY (unique, 0x3200, 8)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0xfffffffffffffed0, 8)",
    "(unique, 0x5500, 8) COPY (register, 0xb0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (unique, 0x5500, 8)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0xfffffffffffffee0, 8)",
    "(unique, 0x5800, 8) COPY (const, 0xfa, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (unique, 0x5800, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x38, 8) , (const, 0x10, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)",
    "(register, 0x0, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0xfffffffffffffec8, 8)",
    "(register, 0x10, 8) COPY (unique, 0x3200, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x10, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(unique, 0x23d80, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0xc26, 8)",
    " ---  CALLIND (unique, 0x23d80, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0x18, 8) , (const, 0x20, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x18, 8) , (const, 0x20, 8)",
    "(register, 0x18, 8) INT_ADD (register, 0x18, 8) , (const, 0x20, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x18, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x18, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x18, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0xfffffffffffffec8, 8)",
    "(register, 0x30, 8) COPY (unique, 0x3200, 8)",
    "(register, 0x38, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0xc39, 8)",
    " ---  CALL (ram, 0x4f0, 8)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0xfffffffffffffed0, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x200, 1) INT_LESS (register, 0x38, 8) , (register, 0xb0, 8)",
    "(register, 0x20b, 1) INT_SBORROW (register, 0x38, 8) , (register, 0xb0, 8)",
    "(unique, 0x25c80, 8) INT_SUB (register, 0x38, 8) , (register, 0xb0, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x25c80, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x25c80, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x25c80, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0xc4a, 8) , (register, 0x206, 1)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0xc4a, 8)",
    " ---  CALL (ram, 0x50f8, 8)",
    "(register, 0x0, 8) COPY (ram, 0x5140, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)",
    "(register, 0x0, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffe8, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x200, 1) INT_LESS (register, 0x0, 8) , (unique, 0xc280, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x20b, 1) INT_SBORROW (register, 0x0, 8) , (unique, 0xc280, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(unique, 0x26180, 8) INT_SUB (register, 0x0, 8) , (unique, 0xc280, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x26180, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x26180, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x26180, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0xcb80, 1) BOOL_NEGATE (register, 0x206, 1)",
    " ---  CBRANCH (ram, 0xc66, 8) , (unique, 0xcb80, 1)",
    "(register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x130, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x130, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x130, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0xb0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  RETURN (register, 0x288, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0xc6b, 8)",
    " ---  CALL (ram, 0x5138, 8)"
  ],
  "__ZN6spdlog5sinks9base_sinkINS_7details10null_mutexEED0Ev": [
    "(unique, 0xef80, 8) COPY (register, 0x28, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x28, 8) COPY (register, 0x20, 8)",
    " ---  CALLOTHER (const, 0x4d, 4)",
    " ---  BRANCH (ram, 0x23d4, 8)"
  ],
  "__ZNK6spdlog5sinks15basic_file_sinkINS_7details10null_mutexEE8filenameEv": [
    "(unique, 0xef80, 8) COPY (register, 0x28, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x28, 8) COPY (register, 0x20, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x38, 8) , (const, 0x30, 8)",
    "(register, 0x0, 8) COPY (unique, 0x3100, 8)",
    "(register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  RETURN (register, 0x288, 8)"
  ],
  "__ZN6spdlog5sinks15basic_file_sinkINSt3__15mutexEEC2ERKNS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEb": [
    "(unique, 0xef80, 8) COPY (register, 0x28, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x28, 8) COPY (register, 0x20, 8)",
    "(unique, 0xef80, 8) COPY (register, 0xb8, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0xb0, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0xa0, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0xb8, 4) COPY (register, 0x10, 4)",
    "(register, 0xb8, 8) INT_ZEXT (register, 0xb8, 4)",
    "(register, 0xa0, 8) COPY (register, 0x30, 8)",
    "(register, 0x18, 8) COPY (register, 0x38, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x7b9, 8)",
    " ---  CALL (ram, 0x820, 8)",
    "(register, 0x0, 8) COPY (ram, 0x2e18, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0x0, 8) , (const, 0x10, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x0, 8) , (const, 0x10, 8)",
    "(register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x10, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x0, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x0, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0x5500, 8) COPY (register, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (register, 0x18, 8) , (unique, 0x5500, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x58, 8)",
    "(register, 0xb0, 8) COPY (unique, 0x3100, 8)",
    "(register, 0x0, 8) COPY (const, 0xa00000005, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x58, 8)",
    "(unique, 0x5500, 8) COPY (register, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5500, 8)",
    "(register, 0x1200, 4) INT_XOR (register, 0x1200, 4) , (register, 0x1200, 4)",
    "(register, 0x1204, 4) INT_XOR (register, 0x1204, 4) , (register, 0x1204, 4)",
    "(register, 0x1208, 4) INT_XOR (register, 0x1208, 4) , (register, 0x1208, 4)",
    "(register, 0x120c, 4) INT_XOR (register, 0x120c, 4) , (register, 0x120c, 4)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x60, 8)",
    "(unique, 0x5580, 16) COPY (register, 0x1200, 16)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5580, 16)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x70, 8)",
    "(unique, 0x5580, 16) COPY (register, 0x1200, 16)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5580, 16)",
    "(register, 0x38, 8) COPY (register, 0xb0, 8)",
    "(register, 0x30, 8) COPY (register, 0xa0, 8)",
    "(register, 0x10, 4) COPY (register, 0xb8, 4)",
    "(register, 0x10, 8) INT_ZEXT (register, 0x10, 4)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x7f2, 8)",
    " ---  CALL (ram, 0xb0, 8)",
    "(register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0xa0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0xb0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0xb8, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  RETURN (register, 0x288, 8)"
  ],
  "__ZN6spdlog7details11file_helper6reopenEb": [
    "(unique, 0xef80, 8) COPY (register, 0x28, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x28, 8) COPY (register, 0x20, 8)",
    "(unique, 0xef80, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x200, 1) INT_LESS (register, 0x20, 8) , (const, 0x18, 8)",
    "(register, 0x20b, 1) INT_SBORROW (register, 0x20, 8) , (const, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x18, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x38, 8) , (const, 0x10, 8)",
    "(unique, 0xc000, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x0, 4) INT_ZEXT (unique, 0xc000, 1)",
    "(register, 0x0, 8) INT_ZEXT (register, 0x0, 4)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x55580, 1) INT_AND (register, 0x0, 1) , (const, 0x1, 1)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x55580, 1) , (const, 0x0, 1)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x55580, 1) , (const, 0x0, 1)",
    "(unique, 0x13400, 1) INT_AND (unique, 0x55580, 1) , (const, 0xff, 1)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 1)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0xcb80, 1) BOOL_NEGATE (register, 0x206, 1)",
    " ---  CBRANCH (ram, 0x486, 8) , (unique, 0xcb80, 1)",
    "(unique, 0x54200, 8) INT_AND (register, 0x0, 8) , (const, 0x1, 8)",
    "(register, 0x200, 1) INT_NOTEQUAL (unique, 0x54200, 8) , (const, 0x0, 8)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(register, 0x0, 8) INT_RIGHT (register, 0x0, 8) , (const, 0x1, 4)",
    "(register, 0x207, 1) INT_SLESS (register, 0x0, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x0, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  BRANCH (ram, 0x48a, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x38, 8) , (const, 0x18, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x0, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x56080, 8) INT_AND (register, 0x0, 8) , (register, 0x0, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x56080, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x4a5, 8) , (register, 0x206, 1)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x38, 8) , (const, 0x10, 8)",
    "(register, 0x0, 8) COPY (unique, 0x3100, 8)",
    "(register, 0x10, 4) INT_ZEXT (register, 0x30, 1)",
    "(register, 0x10, 8) INT_ZEXT (register, 0x10, 4)",
    "(register, 0x30, 8) COPY (register, 0x0, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x18, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x18, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x18, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  BRANCH (ram, 0xb0, 8)",
    "(register, 0x30, 8) COPY (const, 0x2d6c, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffe0, 8)",
    "(register, 0x18, 8) COPY (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x4b8, 8)",
    " ---  CALL (ram, 0x3f0, 8)",
    "(register, 0x38, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x4c0, 8)",
    " ---  CALL (ram, 0x5010, 8)",
    " ---  CALLOTHER (const, 0x4d, 4)",
    " ---  BRANCH (ram, 0x4c0, 8)"
  ],
  "__ZN3fmt2v87vformatENS0_17basic_string_viewIcEENS0_17basic_format_argsINS0_20basic_format_contextINS0_8appenderEcEEEE": [],
  "__ZN6spdlog15throw_spdlog_exENSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE": [],
  "_fflush": [],
  "__ZN6spdlog5sinks15basic_file_sinkINSt3__15mutexEE6flush_Ev": [
    "(unique, 0xef80, 8) COPY (register, 0x28, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x28, 8) COPY (register, 0x20, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x38, 8) , (const, 0x60, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  BRANCH (ram, 0x5150, 8)"
  ],
  "__ZN6spdlog5sinks18rotating_file_sinkINS_7details10null_mutexEE7rotate_Ev": [
    "(unique, 0xef80, 8) COPY (register, 0x28, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x28, 8) COPY (register, 0x20, 8)",
    "(unique, 0xef80, 8) COPY (register, 0xb8, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0xb0, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0xa8, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0xa0, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x200, 1) INT_LESS (register, 0x20, 8) , (const, 0xc8, 8)",
    "(register, 0x20b, 1) INT_SBORROW (register, 0x20, 8) , (const, 0xc8, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0xc8, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x18, 8) COPY (register, 0x38, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x38, 8) , (const, 0x58, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x56080, 8) INT_AND (register, 0x38, 8) , (register, 0x38, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x56080, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x17bd, 8) , (register, 0x206, 1)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x17b5, 8)",
    " ---  CALL (ram, 0x5148, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x58, 8)",
    "(unique, 0x5800, 8) COPY (const, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5800, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x50, 8)",
    "(register, 0x0, 8) COPY (unique, 0x3100, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffc8, 8)",
    "(unique, 0x5500, 8) COPY (register, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5500, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffd0, 8)",
    "(unique, 0x5500, 8) COPY (register, 0x18, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5500, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x40, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0xb0, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x56080, 8) INT_AND (register, 0xb0, 8) , (register, 0xb0, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x56080, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x1887, 8) , (register, 0x206, 1)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffd0, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x0, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x20, 8)",
    "(register, 0xb8, 8) COPY (unique, 0x3100, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffb0, 8)",
    "(register, 0xa0, 8) COPY (unique, 0x3100, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffff98, 8)",
    "(register, 0xa8, 8) COPY (unique, 0x3100, 8)",
    " ---  BRANCH (ram, 0x17fc, 8)",
    "(register, 0xb0, 8) COPY (register, 0x18, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x56080, 8) INT_AND (register, 0x18, 8) , (register, 0x18, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x56080, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x1887, 8) , (register, 0x206, 1)",
    "(unique, 0x3100, 8) INT_ADD (register, 0xb0, 8) , (const, 0xffffffffffffffff, 8)",
    "(register, 0x18, 8) COPY (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (register, 0xa0, 8)",
    "(register, 0x30, 8) COPY (register, 0xb8, 8)",
    "(register, 0x10, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x180e, 8)",
    " ---  CALL (ram, 0x1660, 8)",
    "(register, 0x38, 8) COPY (register, 0xa0, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x1816, 8)",
    " ---  CALL (ram, 0x5038, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x55d80, 1) INT_AND (register, 0x0, 1) , (register, 0x0, 1)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x55d80, 1) , (const, 0x0, 1)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x55d80, 1) , (const, 0x0, 1)",
    "(unique, 0x13400, 1) INT_AND (unique, 0x55d80, 1) , (const, 0xff, 1)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 1)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x186f, 8) , (register, 0x206, 1)",
    "(register, 0x38, 8) COPY (register, 0xa8, 8)",
    "(register, 0x30, 8) COPY (register, 0xb8, 8)",
    "(register, 0x10, 8) COPY (register, 0xb0, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x1828, 8)",
    " ---  CALL (ram, 0x1660, 8)",
    "(register, 0x38, 8) COPY (register, 0xa8, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x1830, 8)",
    " ---  CALL (ram, 0x5050, 8)",
    "(register, 0x38, 8) COPY (register, 0xa0, 8)",
    "(register, 0x30, 8) COPY (register, 0xa8, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x183b, 8)",
    " ---  CALL (ram, 0x5058, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x55f80, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x55f80, 4) , (const, 0x0, 4)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x55f80, 4) , (const, 0x0, 4)",
    "(unique, 0x13400, 4) INT_AND (unique, 0x55f80, 4) , (const, 0xff, 4)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 4)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x1860, 8) , (register, 0x206, 1)",
    "(register, 0x38, 8) COPY (const, 0x64, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x1849, 8)",
    " ---  CALL (ram, 0x5048, 8)",
    "(register, 0x38, 8) COPY (register, 0xa8, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x1851, 8)",
    " ---  CALL (ram, 0x5050, 8)",
    "(register, 0x38, 8) COPY (register, 0xa0, 8)",
    "(register, 0x30, 8) COPY (register, 0xa8, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x185c, 8)",
    " ---  CALL (ram, 0x5058, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x55f80, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x55f80, 4) , (const, 0x0, 4)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x55f80, 4) , (const, 0x0, 4)",
    "(unique, 0x13400, 4) INT_AND (unique, 0x55f80, 4) , (const, 0xff, 4)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 4)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0xcb80, 1) BOOL_NEGATE (register, 0x206, 1)",
    " ---  CBRANCH (ram, 0x18c9, 8) , (unique, 0xcb80, 1)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffff98, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0xc000, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(unique, 0x55980, 1) INT_AND (unique, 0xc000, 1) , (const, 0x1, 1)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x55980, 1) , (const, 0x0, 1)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x55980, 1) , (const, 0x0, 1)",
    "(unique, 0x13400, 1) INT_AND (unique, 0x55980, 1) , (const, 0xff, 1)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 1)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x186f, 8) , (register, 0x206, 1)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffa8, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x186f, 8)",
    " ---  CALL (ram, 0x50f8, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffb0, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0xc000, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(unique, 0x55980, 1) INT_AND (unique, 0xc000, 1) , (const, 0x1, 1)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x55980, 1) , (const, 0x0, 1)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x55980, 1) , (const, 0x0, 1)",
    "(unique, 0x13400, 1) INT_AND (unique, 0x55980, 1) , (const, 0xff, 1)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 1)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x17f0, 8) , (register, 0x206, 1)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffc0, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x1882, 8)",
    " ---  CALL (ram, 0x50f8, 8)",
    " ---  BRANCH (ram, 0x17f0, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffd0, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x30, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x30, 8) , (const, 0x60, 8)",
    "(unique, 0xc000, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x0, 4) INT_ZEXT (unique, 0xc000, 1)",
    "(register, 0x0, 8) INT_ZEXT (register, 0x0, 4)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x55580, 1) INT_AND (register, 0x0, 1) , (const, 0x1, 1)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x55580, 1) , (const, 0x0, 1)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x55580, 1) , (const, 0x0, 1)",
    "(unique, 0x13400, 1) INT_AND (unique, 0x55580, 1) , (const, 0xff, 1)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 1)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0xcb80, 1) BOOL_NEGATE (register, 0x206, 1)",
    " ---  CBRANCH (ram, 0x1898, 8) , (unique, 0xcb80, 1)",
    "(unique, 0x54200, 8) INT_AND (register, 0x0, 8) , (const, 0x1, 8)",
    "(register, 0x200, 1) INT_NOTEQUAL (unique, 0x54200, 8) , (const, 0x0, 8)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(register, 0x0, 8) INT_RIGHT (register, 0x0, 8) , (const, 0x1, 4)",
    "(register, 0x207, 1) INT_SLESS (register, 0x0, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x0, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  BRANCH (ram, 0x189c, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x30, 8) , (const, 0x68, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x0, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x56080, 8) INT_AND (register, 0x0, 8) , (register, 0x0, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x56080, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x1997, 8) , (register, 0x206, 1)",
    "(register, 0x200, 1) INT_CARRY (register, 0x30, 8) , (const, 0x60, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x30, 8) , (const, 0x60, 8)",
    "(register, 0x30, 8) INT_ADD (register, 0x30, 8) , (const, 0x60, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x30, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x30, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x30, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffc8, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x10, 8) COPY (const, 0x1, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x18b7, 8)",
    " ---  CALL (ram, 0xb0, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0xc8, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0xc8, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0xc8, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0xa0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0xa8, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0xb0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0xb8, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  RETURN (register, 0x288, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffc8, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x30, 8) COPY (const, 0x1, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x18d7, 8)",
    " ---  CALL (ram, 0x470, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffd0, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x0, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x48, 8)",
    "(unique, 0x5800, 8) COPY (const, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5800, 8)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffff30, 8)",
    "(register, 0x38, 8) COPY (unique, 0x3200, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffb0, 8)",
    "(register, 0x30, 8) COPY (unique, 0x3100, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x18f3, 8)",
    " ---  CALL (ram, 0x5040, 8)",
    "(register, 0x10, 8) COPY (const, 0x2ddd, 8)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffff30, 8)",
    "(register, 0x38, 8) COPY (unique, 0x3200, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(register, 0x30, 4) INT_XOR (register, 0x30, 4) , (register, 0x30, 4)",
    "(register, 0x30, 8) INT_ZEXT (register, 0x30, 4)",
    "(register, 0x207, 1) INT_SLESS (register, 0x30, 4) , (const, 0x0, 4)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x0, 4)",
    "(unique, 0x13400, 4) INT_AND (register, 0x30, 4) , (const, 0xff, 4)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 4)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x1908, 8)",
    " ---  CALL (ram, 0x50a0, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x10, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x8, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffff90, 8)",
    "(unique, 0x5500, 8) COPY (register, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5500, 8)",
    "(unique, 0x5580, 16) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)",
    "(unique, 0x7c980, 16) COPY (unique, 0x5580, 16)",
    "(register, 0x1200, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0x0, 4)",
    "(register, 0x1204, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0x4, 4)",
    "(register, 0x1208, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0x8, 4)",
    "(register, 0x120c, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0xc, 4)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffff80, 8)",
    "(unique, 0x5580, 16) COPY (register, 0x1200, 16)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5580, 16)",
    "(register, 0x1200, 4) INT_XOR (register, 0x1200, 4) , (register, 0x1200, 4)",
    "(register, 0x1204, 4) INT_XOR (register, 0x1204, 4) , (register, 0x1204, 4)",
    "(register, 0x1208, 4) INT_XOR (register, 0x1208, 4) , (register, 0x1208, 4)",
    "(register, 0x120c, 4) INT_XOR (register, 0x120c, 4) , (register, 0x120c, 4)",
    "(unique, 0x5580, 16) COPY (register, 0x1200, 16)",
    " ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (unique, 0x5580, 16)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x10, 8)",
    "(unique, 0x5800, 8) COPY (const, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5800, 8)",
    "(register, 0x30, 8) COPY (const, 0x2e02, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffff80, 8)",
    "(register, 0x38, 8) COPY (unique, 0x3100, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x1935, 8)",
    " ---  CALL (ram, 0x5090, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x10, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x8, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffff70, 8)",
    "(unique, 0x5500, 8) COPY (register, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (unique, 0x5500, 8)",
    "(unique, 0x5580, 16) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)",
    "(unique, 0x7c980, 16) COPY (unique, 0x5580, 16)",
    "(register, 0x1200, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0x0, 4)",
    "(register, 0x1204, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0x4, 4)",
    "(register, 0x1208, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0x8, 4)",
    "(register, 0x120c, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0xc, 4)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffff60, 8)",
    "(unique, 0x5580, 16) COPY (register, 0x1200, 16)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (unique, 0x5580, 16)",
    "(register, 0x1200, 4) INT_XOR (register, 0x1200, 4) , (register, 0x1200, 4)",
    "(register, 0x1204, 4) INT_XOR (register, 0x1204, 4) , (register, 0x1204, 4)",
    "(register, 0x1208, 4) INT_XOR (register, 0x1208, 4) , (register, 0x1208, 4)",
    "(register, 0x120c, 4) INT_XOR (register, 0x120c, 4) , (register, 0x120c, 4)",
    "(unique, 0x5580, 16) COPY (register, 0x1200, 16)",
    " ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (unique, 0x5580, 16)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x10, 8)",
    "(unique, 0x5800, 8) COPY (const, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5800, 8)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffff48, 8)",
    "(register, 0x38, 8) COPY (unique, 0x3200, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffff98, 8)",
    "(register, 0x30, 8) COPY (unique, 0x3100, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x1968, 8)",
    " ---  CALL (ram, 0x5040, 8)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffff18, 8)",
    "(register, 0x38, 8) COPY (unique, 0x3200, 8)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffff60, 8)",
    "(register, 0x30, 8) COPY (unique, 0x3200, 8)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffff48, 8)",
    "(register, 0x10, 8) COPY (unique, 0x3200, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x1982, 8)",
    " ---  CALL (ram, 0x1460, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x1987, 8)",
    " ---  CALL (ram, 0x5128, 8)",
    "(unique, 0xc180, 4) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)",
    "(register, 0x30, 4) COPY (unique, 0xc180, 4)",
    "(register, 0x30, 8) INT_ZEXT (register, 0x30, 4)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffff18, 8)",
    "(register, 0x38, 8) COPY (unique, 0x3200, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x1995, 8)",
    " ---  CALL (ram, 0x5018, 8)",
    " ---  BRANCH (ram, 0x19b2, 8)",
    "(register, 0x30, 8) COPY (const, 0x2d6c, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffb0, 8)",
    "(register, 0x18, 8) COPY (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x19aa, 8)",
    " ---  CALL (ram, 0x3f0, 8)",
    "(register, 0x38, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x19b2, 8)",
    " ---  CALL (ram, 0x5010, 8)",
    " ---  CALLOTHER (const, 0x4d, 4)",
    " ---  BRANCH (ram, 0x19b2, 8)"
  ],
  "__ZNSt3__110unique_ptrIN6spdlog17pattern_formatterENS_14default_deleteIS2_EEED1B7v160006Ev": [
    "(unique, 0xef80, 8) COPY (register, 0x28, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x28, 8) COPY (register, 0x20, 8)",
    "(unique, 0xef80, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0x0, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)",
    "(register, 0x18, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x5800, 8) COPY (const, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (unique, 0x5800, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x56080, 8) INT_AND (register, 0x18, 8) , (register, 0x18, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x56080, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x249b, 8) , (register, 0x206, 1)",
    "(register, 0x38, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x248d, 8)",
    " ---  CALL (ram, 0x24b0, 8)",
    "(register, 0x38, 8) COPY (register, 0x18, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  BRANCH (ram, 0x50f8, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  RETURN (register, 0x288, 8)"
  ],
  "__ZN6spdlog5sinks9base_sinkINS_7details10null_mutexEE12set_pattern_ERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEE": [
    "(unique, 0xef80, 8) COPY (register, 0x28, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x28, 8) COPY (register, 0x20, 8)",
    "(unique, 0xef80, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x200, 1) INT_LESS (register, 0x20, 8) , (const, 0x18, 8)",
    "(register, 0x20b, 1) INT_SBORROW (register, 0x20, 8) , (const, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x18, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x18, 8) COPY (register, 0x38, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xfffffffffffffff0, 8)",
    "(register, 0x38, 8) COPY (unique, 0x3100, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x20e5, 8)",
    " ---  CALL (ram, 0x2890, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xfffffffffffffff0, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x0, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xfffffffffffffff0, 8)",
    "(unique, 0x5800, 8) COPY (const, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5800, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffe8, 8)",
    "(unique, 0x5500, 8) COPY (register, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5500, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)",
    "(register, 0x0, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffe8, 8)",
    "(register, 0x30, 8) COPY (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (register, 0x18, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x48, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(unique, 0x23d80, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x2102, 8)",
    " ---  CALLIND (unique, 0x23d80, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffe8, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffe8, 8)",
    "(unique, 0x5800, 8) COPY (const, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5800, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x56080, 8) INT_AND (register, 0x38, 8) , (register, 0x38, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x56080, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x2119, 8) , (register, 0x206, 1)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)",
    "(register, 0x0, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x8, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(unique, 0x23d80, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x2119, 8)",
    " ---  CALLIND (unique, 0x23d80, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xfffffffffffffff0, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x18, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xfffffffffffffff0, 8)",
    "(unique, 0x5800, 8) COPY (const, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5800, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x56080, 8) INT_AND (register, 0x18, 8) , (register, 0x18, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x56080, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x213a, 8) , (register, 0x206, 1)",
    "(register, 0x38, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x2132, 8)",
    " ---  CALL (ram, 0x24b0, 8)",
    "(register, 0x38, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x213a, 8)",
    " ---  CALL (ram, 0x50f8, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x18, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x18, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x18, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  RETURN (register, 0x288, 8)"
  ],
  "__ZN6spdlog17pattern_formatterC1ENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS_17pattern_time_typeES7_NS1_13unordered_mapIcNS1_10unique_ptrINS_21custom_flag_formatterENS1_14default_deleteISB_EEEENS1_4hashIcEENS1_8equal_toIcEENS5_INS1_4pairIKcSE_EEEEEE": [],
  "__ZN6spdlog7details2os6removeERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE": [],
  "__ZN6spdlog5sinks18rotating_file_sinkINSt3__15mutexEED0Ev": [
    "(unique, 0xef80, 8) COPY (register, 0x28, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x28, 8) COPY (register, 0x20, 8)",
    "(unique, 0xef80, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0x0, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x18, 8) COPY (register, 0x38, 8)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x38, 8) , (const, 0x90, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x56080, 8) INT_AND (register, 0x38, 8) , (register, 0x38, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x56080, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x2255, 8) , (register, 0x206, 1)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x224a, 8)",
    " ---  CALL (ram, 0x5148, 8)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x90, 8)",
    "(unique, 0x5800, 8) COPY (const, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (unique, 0x5800, 8)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x98, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0xc000, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)",
    "(unique, 0x55980, 1) INT_AND (unique, 0xc000, 1) , (const, 0x1, 1)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x55980, 1) , (const, 0x0, 1)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x55980, 1) , (const, 0x0, 1)",
    "(unique, 0x13400, 1) INT_AND (unique, 0x55980, 1) , (const, 0xff, 1)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 1)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x226a, 8) , (register, 0x206, 1)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xa8, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x226a, 8)",
    " ---  CALL (ram, 0x50f8, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x58, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0xc000, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(unique, 0x55980, 1) INT_AND (unique, 0xc000, 1) , (const, 0x1, 1)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x55980, 1) , (const, 0x0, 1)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x55980, 1) , (const, 0x0, 1)",
    "(unique, 0x13400, 1) INT_AND (unique, 0x55980, 1) , (const, 0xff, 1)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 1)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x2279, 8) , (register, 0x206, 1)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x68, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x2279, 8)",
    " ---  CALL (ram, 0x50f8, 8)",
    "(register, 0x0, 8) COPY (ram, 0x3038, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0x0, 8) , (const, 0x10, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x0, 8) , (const, 0x10, 8)",
    "(register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x10, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x0, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x0, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0x5500, 8) COPY (register, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (register, 0x18, 8) , (unique, 0x5500, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x18, 8)",
    "(register, 0x38, 8) COPY (unique, 0x3100, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x2290, 8)",
    " ---  CALL (ram, 0x50d0, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x10, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x10, 8)",
    "(unique, 0x5800, 8) COPY (const, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5800, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x56080, 8) INT_AND (register, 0x38, 8) , (register, 0x38, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x56080, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x22a7, 8) , (register, 0x206, 1)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)",
    "(register, 0x0, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x8, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(unique, 0x23d80, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x22a7, 8)",
    " ---  CALLIND (unique, 0x23d80, 8)",
    "(register, 0x38, 8) COPY (register, 0x18, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  BRANCH (ram, 0x50f8, 8)"
  ],
  "__ZN6spdlog5sinks9base_sinkINS_7details10null_mutexEE3logERKNS2_7log_msgE": [
    "(unique, 0xef80, 8) COPY (register, 0x28, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x28, 8) COPY (register, 0x20, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)",
    "(register, 0x0, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x30, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x0, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  BRANCHIND (register, 0x0, 8)"
  ],
  "__ZN6spdlog5sinks18rotating_file_sinkINS_7details10null_mutexEED1Ev": [
    "(unique, 0xef80, 8) COPY (register, 0x28, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x28, 8) COPY (register, 0x20, 8)",
    "(unique, 0xef80, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0x0, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x18, 8) COPY (register, 0x38, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x38, 8) , (const, 0x58, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x56080, 8) INT_AND (register, 0x38, 8) , (register, 0x38, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x56080, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x22df, 8) , (register, 0x206, 1)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x22d7, 8)",
    " ---  CALL (ram, 0x5148, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x58, 8)",
    "(unique, 0x5800, 8) COPY (const, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5800, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x60, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0xc000, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(unique, 0x55980, 1) INT_AND (unique, 0xc000, 1) , (const, 0x1, 1)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x55980, 1) , (const, 0x0, 1)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x55980, 1) , (const, 0x0, 1)",
    "(unique, 0x13400, 1) INT_AND (unique, 0x55980, 1) , (const, 0xff, 1)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 1)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x22ee, 8) , (register, 0x206, 1)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x70, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x22ee, 8)",
    " ---  CALL (ram, 0x50f8, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x20, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0xc000, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(unique, 0x55980, 1) INT_AND (unique, 0xc000, 1) , (const, 0x1, 1)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x55980, 1) , (const, 0x0, 1)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x55980, 1) , (const, 0x0, 1)",
    "(unique, 0x13400, 1) INT_AND (unique, 0x55980, 1) , (const, 0xff, 1)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 1)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x22fd, 8) , (register, 0x206, 1)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x30, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x22fd, 8)",
    " ---  CALL (ram, 0x50f8, 8)",
    "(register, 0x0, 8) COPY (ram, 0x3098, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0x0, 8) , (const, 0x10, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x0, 8) , (const, 0x10, 8)",
    "(register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x10, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x0, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x0, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0x5500, 8) COPY (register, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (register, 0x18, 8) , (unique, 0x5500, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x10, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x10, 8)",
    "(unique, 0x5800, 8) COPY (const, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5800, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x56080, 8) INT_AND (register, 0x38, 8) , (register, 0x38, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x56080, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x2328, 8) , (register, 0x206, 1)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)",
    "(register, 0x0, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x8, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    " ---  BRANCHIND (unique, 0xc280, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  RETURN (register, 0x288, 8)"
  ],
  "__ZN6spdlog5sinks15basic_file_sinkINSt3__15mutexEEC1ERKNS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEb": [
    "(unique, 0xef80, 8) COPY (register, 0x28, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x28, 8) COPY (register, 0x20, 8)",
    "(unique, 0xef80, 8) COPY (register, 0xb8, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0xb0, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0xa0, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0xb0, 4) COPY (register, 0x10, 4)",
    "(register, 0xb0, 8) INT_ZEXT (register, 0xb0, 4)",
    "(register, 0xb8, 8) COPY (register, 0x30, 8)",
    "(register, 0x18, 8) COPY (register, 0x38, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x939, 8)",
    " ---  CALL (ram, 0x820, 8)",
    "(register, 0x0, 8) COPY (ram, 0x2e18, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0x0, 8) , (const, 0x10, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x0, 8) , (const, 0x10, 8)",
    "(register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x10, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x0, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x0, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0x5500, 8) COPY (register, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (register, 0x18, 8) , (unique, 0x5500, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x58, 8)",
    "(register, 0x38, 8) COPY (unique, 0x3100, 8)",
    "(register, 0x0, 8) COPY (const, 0xa00000005, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x58, 8)",
    "(unique, 0x5500, 8) COPY (register, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5500, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x60, 8)",
    "(register, 0xa0, 8) COPY (unique, 0x3100, 8)",
    "(register, 0x1200, 4) INT_XOR (register, 0x1200, 4) , (register, 0x1200, 4)",
    "(register, 0x1204, 4) INT_XOR (register, 0x1204, 4) , (register, 0x1204, 4)",
    "(register, 0x1208, 4) INT_XOR (register, 0x1208, 4) , (register, 0x1208, 4)",
    "(register, 0x120c, 4) INT_XOR (register, 0x120c, 4) , (register, 0x120c, 4)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x60, 8)",
    "(unique, 0x5580, 16) COPY (register, 0x1200, 16)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5580, 16)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x70, 8)",
    "(unique, 0x5580, 16) COPY (register, 0x1200, 16)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5580, 16)",
    "(register, 0x30, 8) COPY (register, 0xb8, 8)",
    "(register, 0x10, 4) COPY (register, 0xb0, 4)",
    "(register, 0x10, 8) INT_ZEXT (register, 0x10, 4)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x973, 8)",
    " ---  CALL (ram, 0xb0, 8)",
    "(register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0xa0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0xb0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0xb8, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  RETURN (register, 0x288, 8)"
  ],
  "__ZN6spdlog5sinks18rotating_file_sinkINS_7details10null_mutexEEC2ENSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEEmmb": [
    "(unique, 0xef80, 8) COPY (register, 0x28, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x28, 8) COPY (register, 0x20, 8)",
    "(unique, 0xef80, 8) COPY (register, 0xb8, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0xb0, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0xa8, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0xa0, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x200, 1) INT_LESS (register, 0x20, 8) , (const, 0x28, 8)",
    "(register, 0x20b, 1) INT_SBORROW (register, 0x20, 8) , (const, 0x28, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x28, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffbc, 8)",
    "(unique, 0x5480, 4) COPY (register, 0x80, 4)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5480, 4)",
    "(register, 0xa0, 8) COPY (register, 0x8, 8)",
    "(register, 0xa8, 8) COPY (register, 0x10, 8)",
    "(register, 0xb0, 8) COPY (register, 0x30, 8)",
    "(register, 0x18, 8) COPY (register, 0x38, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x38, 8) , (const, 0x8, 8)",
    "(unique, 0x5780, 4) COPY (const, 0x0, 4)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5780, 4)",
    "(register, 0x0, 8) COPY (ram, 0x3098, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0x0, 8) , (const, 0x10, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x0, 8) , (const, 0x10, 8)",
    "(register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x10, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x0, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x0, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffb0, 8)",
    "(unique, 0x5500, 8) COPY (register, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5500, 8)",
    "(unique, 0x5500, 8) COPY (register, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (unique, 0x5500, 8)",
    "(register, 0x38, 8) COPY (const, 0xc0, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x1504, 8)",
    " ---  CALL (ram, 0x5100, 8)",
    "(register, 0xb8, 8) COPY (register, 0x0, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffc0, 8)",
    "(unique, 0x5700, 2) COPY (const, 0xa02, 2)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5700, 2)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffc2, 8)",
    "(unique, 0x5680, 1) COPY (const, 0x0, 1)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5680, 1)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffc0, 8)",
    "(register, 0x10, 8) COPY (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (register, 0x0, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(register, 0x30, 4) INT_XOR (register, 0x30, 4) , (register, 0x30, 4)",
    "(register, 0x30, 8) INT_ZEXT (register, 0x30, 4)",
    "(register, 0x207, 1) INT_SLESS (register, 0x30, 4) , (const, 0x0, 4)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x0, 4)",
    "(unique, 0x13400, 4) INT_AND (register, 0x30, 4) , (const, 0xff, 4)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 4)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x151f, 8)",
    " ---  CALL (ram, 0x5020, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffc0, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0xc000, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(unique, 0x55980, 1) INT_AND (unique, 0xc000, 1) , (const, 0x1, 1)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x55980, 1) , (const, 0x0, 1)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x55980, 1) , (const, 0x0, 1)",
    "(unique, 0x13400, 1) INT_AND (unique, 0x55980, 1) , (const, 0xff, 1)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 1)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x152e, 8) , (register, 0x206, 1)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffd0, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x152e, 8)",
    " ---  CALL (ram, 0x50f8, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x10, 8)",
    "(unique, 0x5500, 8) COPY (register, 0xb8, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5500, 8)",
    "(register, 0x0, 8) COPY (ram, 0x2f38, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0x0, 8) , (const, 0x10, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x0, 8) , (const, 0x10, 8)",
    "(register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x10, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x0, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x0, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0x5500, 8) COPY (register, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (register, 0x18, 8) , (unique, 0x5500, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x20, 8)",
    "(register, 0xb8, 8) COPY (unique, 0x3100, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0xb0, 8) , (const, 0x10, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x0, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x30, 8)",
    "(unique, 0x5500, 8) COPY (register, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5500, 8)",
    "(unique, 0x5580, 16) LOAD (const, 0x1b1, 4) , (register, 0xb0, 8)",
    "(unique, 0x7c980, 16) COPY (unique, 0x5580, 16)",
    "(register, 0x1200, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0x0, 4)",
    "(register, 0x1204, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0x4, 4)",
    "(register, 0x1208, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0x8, 4)",
    "(register, 0x120c, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0xc, 4)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x20, 8)",
    "(unique, 0x5580, 16) COPY (register, 0x1200, 16)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5580, 16)",
    "(register, 0x1200, 4) INT_XOR (register, 0x1200, 4) , (register, 0x1200, 4)",
    "(register, 0x1204, 4) INT_XOR (register, 0x1204, 4) , (register, 0x1204, 4)",
    "(register, 0x1208, 4) INT_XOR (register, 0x1208, 4) , (register, 0x1208, 4)",
    "(register, 0x120c, 4) INT_XOR (register, 0x120c, 4) , (register, 0x120c, 4)",
    "(unique, 0x5580, 16) COPY (register, 0x1200, 16)",
    " ---  STORE (const, 0x1b1, 4) , (register, 0xb0, 8) , (unique, 0x5580, 16)",
    "(unique, 0x3100, 8) INT_ADD (register, 0xb0, 8) , (const, 0x10, 8)",
    "(unique, 0x5800, 8) COPY (const, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5800, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x38, 8)",
    "(unique, 0x5500, 8) COPY (register, 0xa8, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5500, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x40, 8)",
    "(unique, 0x5500, 8) COPY (register, 0xa0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5500, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x50, 8)",
    "(register, 0xa0, 8) COPY (unique, 0x3100, 8)",
    "(register, 0x0, 8) COPY (const, 0xa00000005, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x50, 8)",
    "(unique, 0x5500, 8) COPY (register, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5500, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x58, 8)",
    "(unique, 0x5580, 16) COPY (register, 0x1200, 16)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5580, 16)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x68, 8)",
    "(unique, 0x5580, 16) COPY (register, 0x1200, 16)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5580, 16)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffc0, 8)",
    "(register, 0x38, 8) COPY (unique, 0x3100, 8)",
    "(register, 0x30, 8) COPY (register, 0xb8, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x1591, 8)",
    " ---  CALL (ram, 0x50a8, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffc0, 8)",
    "(register, 0x30, 8) COPY (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (register, 0xa0, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(register, 0x10, 4) INT_XOR (register, 0x10, 4) , (register, 0x10, 4)",
    "(register, 0x10, 8) INT_ZEXT (register, 0x10, 4)",
    "(register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)",
    "(unique, 0x13400, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 4)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x159f, 8)",
    " ---  CALL (ram, 0xb0, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffc0, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0xc000, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(unique, 0x55980, 1) INT_AND (unique, 0xc000, 1) , (const, 0x1, 1)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x55980, 1) , (const, 0x0, 1)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x55980, 1) , (const, 0x0, 1)",
    "(unique, 0x13400, 1) INT_AND (unique, 0x55980, 1) , (const, 0xff, 1)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 1)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x15ae, 8) , (register, 0x206, 1)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffd0, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x15ae, 8)",
    " ---  CALL (ram, 0x50f8, 8)",
    "(register, 0x38, 8) COPY (register, 0xa0, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x15b6, 8)",
    " ---  CALL (ram, 0x5c0, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x48, 8)",
    "(unique, 0x5500, 8) COPY (register, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5500, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffbc, 8)",
    "(unique, 0xc000, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x200, 1) INT_LESS (unique, 0xc000, 1) , (const, 0x0, 1)",
    "(unique, 0xc000, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x20b, 1) INT_SBORROW (unique, 0xc000, 1) , (const, 0x0, 1)",
    "(unique, 0xc000, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(unique, 0x25280, 1) INT_SUB (unique, 0xc000, 1) , (const, 0x0, 1)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x25280, 1) , (const, 0x0, 1)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x25280, 1) , (const, 0x0, 1)",
    "(unique, 0x13400, 1) INT_AND (unique, 0x25280, 1) , (const, 0xff, 1)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 1)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x15cd, 8) , (register, 0x206, 1)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x56080, 8) INT_AND (register, 0x0, 8) , (register, 0x0, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x56080, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x15cd, 8) , (register, 0x206, 1)",
    "(register, 0x38, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x15cd, 8)",
    " ---  CALL (ram, 0x1790, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x28, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x28, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x28, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0xa0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0xa8, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0xb0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0xb8, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  RETURN (register, 0x288, 8)"
  ],
  "__ZN6spdlog5sinks9base_sinkINSt3__15mutexEED0Ev": [
    "(unique, 0xef80, 8) COPY (register, 0x28, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x28, 8) COPY (register, 0x20, 8)",
    " ---  CALLOTHER (const, 0x4d, 4)",
    " ---  BRANCH (ram, 0x23b4, 8)"
  ],
  "__ZN6spdlog17pattern_formatterD2Ev": [
    "(unique, 0xef80, 8) COPY (register, 0x28, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x28, 8) COPY (register, 0x20, 8)",
    "(unique, 0xef80, 8) COPY (register, 0xb8, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0xb0, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0x0, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x18, 8) COPY (register, 0x38, 8)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x38, 8) , (const, 0xa8, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)",
    "(register, 0xb0, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x56080, 8) INT_AND (register, 0xb0, 8) , (register, 0xb0, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x56080, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0xcb80, 1) BOOL_NEGATE (register, 0x206, 1)",
    " ---  CBRANCH (ram, 0x2520, 8) , (unique, 0xcb80, 1)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x98, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x98, 8)",
    "(unique, 0x5800, 8) COPY (const, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (unique, 0x5800, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x56080, 8) INT_AND (register, 0x38, 8) , (register, 0x38, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x56080, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x24e5, 8) , (register, 0x206, 1)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x24e5, 8)",
    " ---  CALL (ram, 0x50f8, 8)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x80, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)",
    "(register, 0xb0, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x56080, 8) INT_AND (register, 0xb0, 8) , (register, 0xb0, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x56080, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x2575, 8) , (register, 0x206, 1)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x88, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)",
    "(register, 0xb8, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x38, 8) COPY (register, 0xb0, 8)",
    "(register, 0x200, 1) INT_LESS (register, 0xb8, 8) , (register, 0xb0, 8)",
    "(register, 0x20b, 1) INT_SBORROW (register, 0xb8, 8) , (register, 0xb0, 8)",
    "(unique, 0x25c80, 8) INT_SUB (register, 0xb8, 8) , (register, 0xb0, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x25c80, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x25c80, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x25c80, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0xcb80, 1) BOOL_NEGATE (register, 0x206, 1)",
    " ---  CBRANCH (ram, 0x2545, 8) , (unique, 0xcb80, 1)",
    " ---  BRANCH (ram, 0x2569, 8)",
    "(register, 0x38, 8) COPY (register, 0xb0, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x2518, 8)",
    " ---  CALL (ram, 0x50f8, 8)",
    "(register, 0xb0, 8) COPY (register, 0xb8, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x56080, 8) INT_AND (register, 0xb8, 8) , (register, 0xb8, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x56080, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x24c9, 8) , (register, 0x206, 1)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (register, 0xb0, 8)",
    "(register, 0xb8, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0xb0, 8) , (const, 0x18, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0xb0, 8) , (const, 0x18, 8)",
    "(unique, 0x5800, 8) COPY (const, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5800, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x56080, 8) INT_AND (register, 0x38, 8) , (register, 0x38, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x56080, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x2510, 8) , (register, 0x206, 1)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)",
    "(register, 0x0, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x8, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(unique, 0x23d80, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x253a, 8)",
    " ---  CALLIND (unique, 0x23d80, 8)",
    " ---  BRANCH (ram, 0x2510, 8)",
    "(register, 0x200, 1) INT_LESS (register, 0xb8, 8) , (register, 0xb0, 8)",
    "(register, 0x20b, 1) INT_SBORROW (register, 0xb8, 8) , (register, 0xb0, 8)",
    "(unique, 0x25c80, 8) INT_SUB (register, 0xb8, 8) , (register, 0xb0, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x25c80, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x25c80, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x25c80, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x2562, 8) , (register, 0x206, 1)",
    "(unique, 0x3100, 8) INT_ADD (register, 0xb8, 8) , (const, 0xfffffffffffffff8, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0xb8, 8) , (const, 0xfffffffffffffff8, 8)",
    "(unique, 0x5800, 8) COPY (const, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5800, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0xb8, 8) , (const, 0xfffffffffffffff8, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0xb8, 8) , (const, 0xfffffffffffffff8, 8)",
    "(register, 0xb8, 8) INT_ADD (register, 0xb8, 8) , (const, 0xfffffffffffffff8, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0xb8, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0xb8, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0xb8, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x56080, 8) INT_AND (register, 0x38, 8) , (register, 0x38, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x56080, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x2540, 8) , (register, 0x206, 1)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)",
    "(register, 0x0, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x8, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(unique, 0x23d80, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x2560, 8)",
    " ---  CALLIND (unique, 0x23d80, 8)",
    " ---  BRANCH (ram, 0x2540, 8)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x80, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x88, 8)",
    "(unique, 0x5500, 8) COPY (register, 0xb0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (unique, 0x5500, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x2575, 8)",
    " ---  CALL (ram, 0x50f8, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x20, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0xc000, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(unique, 0x55980, 1) INT_AND (unique, 0xc000, 1) , (const, 0x1, 1)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x55980, 1) , (const, 0x0, 1)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x55980, 1) , (const, 0x0, 1)",
    "(unique, 0x13400, 1) INT_AND (unique, 0x55980, 1) , (const, 0xff, 1)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 1)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x2584, 8) , (register, 0x206, 1)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x30, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x2584, 8)",
    " ---  CALL (ram, 0x50f8, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x8, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0xc000, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(unique, 0x55980, 1) INT_AND (unique, 0xc000, 1) , (const, 0x1, 1)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x55980, 1) , (const, 0x0, 1)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x55980, 1) , (const, 0x0, 1)",
    "(unique, 0x13400, 1) INT_AND (unique, 0x55980, 1) , (const, 0xff, 1)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 1)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0xcb80, 1) BOOL_NEGATE (register, 0x206, 1)",
    " ---  CBRANCH (ram, 0x2595, 8) , (unique, 0xcb80, 1)",
    "(register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0xb0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0xb8, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  RETURN (register, 0x288, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x18, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0xb0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0xb8, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  BRANCH (ram, 0x50f8, 8)"
  ],
  "_fclose": [],
  "__ZNSt3__1plB7v160006IcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_SA_": [
    "(unique, 0xef80, 8) COPY (register, 0x28, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x28, 8) COPY (register, 0x20, 8)",
    "(unique, 0xef80, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0x0, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x18, 8) COPY (register, 0x38, 8)",
    "(unique, 0xc000, 1) LOAD (const, 0x1b1, 4) , (register, 0x10, 8)",
    "(register, 0x0, 4) INT_ZEXT (unique, 0xc000, 1)",
    "(register, 0x0, 8) INT_ZEXT (register, 0x0, 4)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x55580, 1) INT_AND (register, 0x0, 1) , (const, 0x1, 1)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x55580, 1) , (const, 0x0, 1)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x55580, 1) , (const, 0x0, 1)",
    "(unique, 0x13400, 1) INT_AND (unique, 0x55580, 1) , (const, 0xff, 1)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 1)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x147a, 8) , (register, 0x206, 1)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x10, 8) , (const, 0x8, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x0, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x10, 8) , (const, 0x10, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x10, 8) COPY (unique, 0xc280, 8)",
    " ---  BRANCH (ram, 0x1480, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x10, 8) , (const, 0x1, 8)",
    "(register, 0x10, 8) INT_ADD (register, 0x10, 8) , (const, 0x1, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x10, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x10, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x10, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0x54200, 8) INT_AND (register, 0x0, 8) , (const, 0x1, 8)",
    "(register, 0x200, 1) INT_NOTEQUAL (unique, 0x54200, 8) , (const, 0x0, 8)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(register, 0x0, 8) INT_RIGHT (register, 0x0, 8) , (const, 0x1, 4)",
    "(register, 0x207, 1) INT_SLESS (register, 0x0, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x0, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x38, 8) COPY (register, 0x30, 8)",
    "(register, 0x30, 8) COPY (register, 0x10, 8)",
    "(register, 0x10, 8) COPY (register, 0x0, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x148e, 8)",
    " ---  CALL (ram, 0x5098, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x10, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x8, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x10, 8)",
    "(unique, 0x5500, 8) COPY (register, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5500, 8)",
    "(unique, 0x5580, 16) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)",
    "(unique, 0x7c980, 16) COPY (unique, 0x5580, 16)",
    "(register, 0x1200, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0x0, 4)",
    "(register, 0x1204, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0x4, 4)",
    "(register, 0x1208, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0x8, 4)",
    "(register, 0x120c, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0xc, 4)",
    "(unique, 0x5580, 16) COPY (register, 0x1200, 16)",
    " ---  STORE (const, 0x1b1, 4) , (register, 0x18, 8) , (unique, 0x5580, 16)",
    "(register, 0x1200, 4) INT_XOR (register, 0x1200, 4) , (register, 0x1200, 4)",
    "(register, 0x1204, 4) INT_XOR (register, 0x1204, 4) , (register, 0x1204, 4)",
    "(register, 0x1208, 4) INT_XOR (register, 0x1208, 4) , (register, 0x1208, 4)",
    "(register, 0x120c, 4) INT_XOR (register, 0x120c, 4) , (register, 0x120c, 4)",
    "(unique, 0x5580, 16) COPY (register, 0x1200, 16)",
    " ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (unique, 0x5580, 16)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x10, 8)",
    "(unique, 0x5800, 8) COPY (const, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5800, 8)",
    "(register, 0x0, 8) COPY (register, 0x18, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  RETURN (register, 0x288, 8)"
  ],
  "__ZN6spdlog5sinks18rotating_file_sinkINS_7details10null_mutexEE6flush_Ev": [
    "(unique, 0xef80, 8) COPY (register, 0x28, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x28, 8) COPY (register, 0x20, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x38, 8) , (const, 0x58, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  BRANCH (ram, 0x5150, 8)"
  ],
  "__ZN6spdlog15throw_spdlog_exERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEi": [],
  "__ZN6spdlog5sinks15basic_file_sinkINS_7details10null_mutexEED1Ev": [
    "(unique, 0xef80, 8) COPY (register, 0x28, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x28, 8) COPY (register, 0x20, 8)",
    "(unique, 0xef80, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0x0, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x18, 8) COPY (register, 0x38, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x38, 8) , (const, 0x28, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x56080, 8) INT_AND (register, 0x38, 8) , (register, 0x38, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x56080, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x1f8f, 8) , (register, 0x206, 1)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x1f87, 8)",
    " ---  CALL (ram, 0x5148, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x28, 8)",
    "(unique, 0x5800, 8) COPY (const, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5800, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x30, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0xc000, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(unique, 0x55980, 1) INT_AND (unique, 0xc000, 1) , (const, 0x1, 1)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x55980, 1) , (const, 0x0, 1)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x55980, 1) , (const, 0x0, 1)",
    "(unique, 0x13400, 1) INT_AND (unique, 0x55980, 1) , (const, 0xff, 1)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 1)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x1f9e, 8) , (register, 0x206, 1)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x40, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x1f9e, 8)",
    " ---  CALL (ram, 0x50f8, 8)",
    "(register, 0x0, 8) COPY (ram, 0x3098, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0x0, 8) , (const, 0x10, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x0, 8) , (const, 0x10, 8)",
    "(register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x10, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x0, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x0, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0x5500, 8) COPY (register, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (register, 0x18, 8) , (unique, 0x5500, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x10, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x10, 8)",
    "(unique, 0x5800, 8) COPY (const, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5800, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x56080, 8) INT_AND (register, 0x38, 8) , (register, 0x38, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x56080, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x1fc9, 8) , (register, 0x206, 1)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)",
    "(register, 0x0, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x8, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    " ---  BRANCHIND (unique, 0xc280, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  RETURN (register, 0x288, 8)"
  ],
  "__ZN6spdlog5sinks18rotating_file_sinkINS_7details10null_mutexEE8sink_it_ERKNS2_7log_msgE": [
    "(unique, 0xef80, 8) COPY (register, 0x28, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x28, 8) COPY (register, 0x20, 8)",
    "(unique, 0xef80, 8) COPY (register, 0xb0, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x200, 1) INT_LESS (register, 0x20, 8) , (const, 0x130, 8)",
    "(register, 0x20b, 1) INT_SBORROW (register, 0x20, 8) , (const, 0x130, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x130, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x18, 8) COPY (register, 0x38, 8)",
    "(register, 0x0, 8) COPY (ram, 0x5140, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)",
    "(register, 0x0, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffe8, 8)",
    "(unique, 0x5500, 8) COPY (register, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5500, 8)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0xfffffffffffffed8, 8)",
    "(unique, 0x5800, 8) COPY (const, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (unique, 0x5800, 8)",
    "(register, 0x0, 8) COPY (ram, 0x30f8, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0x0, 8) , (const, 0x10, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x0, 8) , (const, 0x10, 8)",
    "(register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x10, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x0, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x0, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0xfffffffffffffec8, 8)",
    "(unique, 0x5500, 8) COPY (register, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (unique, 0x5500, 8)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0xfffffffffffffee8, 8)",
    "(register, 0xb0, 8) COPY (unique, 0x3200, 8)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0xfffffffffffffed0, 8)",
    "(unique, 0x5500, 8) COPY (register, 0xb0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (unique, 0x5500, 8)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0xfffffffffffffee0, 8)",
    "(unique, 0x5800, 8) COPY (const, 0xfa, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (unique, 0x5800, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x38, 8) , (const, 0x10, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)",
    "(register, 0x0, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0xfffffffffffffec8, 8)",
    "(register, 0x10, 8) COPY (unique, 0x3200, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x10, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(unique, 0x23d80, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x1b86, 8)",
    " ---  CALLIND (unique, 0x23d80, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x48, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x0, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0xfffffffffffffed8, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0x0, 8) , (unique, 0xc280, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x0, 8) , (unique, 0xc280, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)",
    "(register, 0x0, 8) INT_ADD (register, 0x0, 8) , (unique, 0xc280, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x0, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x0, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x48, 8)",
    "(unique, 0x5500, 8) COPY (register, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5500, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x38, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x200, 1) INT_LESS (register, 0x0, 8) , (unique, 0xc280, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x20b, 1) INT_SBORROW (register, 0x0, 8) , (unique, 0xc280, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(unique, 0x26180, 8) INT_SUB (register, 0x0, 8) , (unique, 0xc280, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x26180, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x26180, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x26180, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0xcc80, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)",
    " ---  CBRANCH (ram, 0x1bae, 8) , (unique, 0xcc80, 1)",
    "(register, 0x38, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x1ba3, 8)",
    " ---  CALL (ram, 0x1790, 8)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0xfffffffffffffed8, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)",
    "(register, 0x0, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x48, 8)",
    "(unique, 0x5500, 8) COPY (register, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5500, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0x18, 8) , (const, 0x50, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x18, 8) , (const, 0x50, 8)",
    "(register, 0x18, 8) INT_ADD (register, 0x18, 8) , (const, 0x50, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x18, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x18, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x18, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0xfffffffffffffec8, 8)",
    "(register, 0x30, 8) COPY (unique, 0x3200, 8)",
    "(register, 0x38, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x1bc1, 8)",
    " ---  CALL (ram, 0x4f0, 8)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0xfffffffffffffed0, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x200, 1) INT_LESS (register, 0x38, 8) , (register, 0xb0, 8)",
    "(register, 0x20b, 1) INT_SBORROW (register, 0x38, 8) , (register, 0xb0, 8)",
    "(unique, 0x25c80, 8) INT_SUB (register, 0x38, 8) , (register, 0xb0, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x25c80, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x25c80, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x25c80, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x1bd2, 8) , (register, 0x206, 1)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x1bd2, 8)",
    " ---  CALL (ram, 0x50f8, 8)",
    "(register, 0x0, 8) COPY (ram, 0x5140, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)",
    "(register, 0x0, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffe8, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x200, 1) INT_LESS (register, 0x0, 8) , (unique, 0xc280, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x20b, 1) INT_SBORROW (register, 0x0, 8) , (unique, 0xc280, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(unique, 0x26180, 8) INT_SUB (register, 0x0, 8) , (unique, 0xc280, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x26180, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x26180, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x26180, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0xcb80, 1) BOOL_NEGATE (register, 0x206, 1)",
    " ---  CBRANCH (ram, 0x1bee, 8) , (unique, 0xcb80, 1)",
    "(register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x130, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x130, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x130, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0xb0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  RETURN (register, 0x288, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x1bf3, 8)",
    " ---  CALL (ram, 0x5138, 8)"
  ],
  "__ZNK6spdlog7details11file_helper8filenameEv": [
    "(unique, 0xef80, 8) COPY (register, 0x28, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x28, 8) COPY (register, 0x20, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x38, 8) , (const, 0x10, 8)",
    "(register, 0x0, 8) COPY (unique, 0x3100, 8)",
    "(register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  RETURN (register, 0x288, 8)"
  ],
  "__ZNSt3__120__throw_length_errorB7v160006EPKc": [
    "(unique, 0xef80, 8) COPY (register, 0x28, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x28, 8) COPY (register, 0x20, 8)",
    "(unique, 0xef80, 8) COPY (register, 0xb0, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0xb0, 8) COPY (register, 0x38, 8)",
    "(register, 0x38, 8) COPY (const, 0x10, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x2404, 8)",
    " ---  CALL (ram, 0x5108, 8)",
    "(register, 0x18, 8) COPY (register, 0x0, 8)",
    "(register, 0x38, 8) COPY (register, 0x0, 8)",
    "(register, 0x30, 8) COPY (register, 0xb0, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x2412, 8)",
    " ---  CALL (ram, 0x2440, 8)",
    "(register, 0x30, 8) COPY (ram, 0x50d8, 8)",
    "(register, 0x10, 8) COPY (ram, 0x5088, 8)",
    "(register, 0x38, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x2428, 8)",
    " ---  CALL (ram, 0x5120, 8)"
  ],
  "__ZN6spdlog5sinks9base_sinkINS_7details10null_mutexEED1Ev": [
    "(unique, 0xef80, 8) COPY (register, 0x28, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x28, 8) COPY (register, 0x20, 8)",
    " ---  CALLOTHER (const, 0x4d, 4)",
    " ---  BRANCH (ram, 0x23c4, 8)"
  ],
  "__ZN6spdlog5sinks18rotating_file_sinkINSt3__15mutexEE8sink_it_ERKNS_7details7log_msgE": [
    "(unique, 0xef80, 8) COPY (register, 0x28, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x28, 8) COPY (register, 0x20, 8)",
    "(unique, 0xef80, 8) COPY (register, 0xb0, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x200, 1) INT_LESS (register, 0x20, 8) , (const, 0x130, 8)",
    "(register, 0x20b, 1) INT_SBORROW (register, 0x20, 8) , (const, 0x130, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x130, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x18, 8) COPY (register, 0x38, 8)",
    "(register, 0x0, 8) COPY (ram, 0x5140, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)",
    "(register, 0x0, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffe8, 8)",
    "(unique, 0x5500, 8) COPY (register, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5500, 8)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0xfffffffffffffed8, 8)",
    "(unique, 0x5800, 8) COPY (const, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (unique, 0x5800, 8)",
    "(register, 0x0, 8) COPY (ram, 0x30f8, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0x0, 8) , (const, 0x10, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x0, 8) , (const, 0x10, 8)",
    "(register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x10, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x0, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x0, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0xfffffffffffffec8, 8)",
    "(unique, 0x5500, 8) COPY (register, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (unique, 0x5500, 8)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0xfffffffffffffee8, 8)",
    "(register, 0xb0, 8) COPY (unique, 0x3200, 8)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0xfffffffffffffed0, 8)",
    "(unique, 0x5500, 8) COPY (register, 0xb0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (unique, 0x5500, 8)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0xfffffffffffffee0, 8)",
    "(unique, 0x5800, 8) COPY (const, 0xfa, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (unique, 0x5800, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x38, 8) , (const, 0x10, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)",
    "(register, 0x0, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0xfffffffffffffec8, 8)",
    "(register, 0x10, 8) COPY (unique, 0x3200, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x10, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(unique, 0x23d80, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x1376, 8)",
    " ---  CALLIND (unique, 0x23d80, 8)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x80, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)",
    "(register, 0x0, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0xfffffffffffffed8, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0x0, 8) , (unique, 0xc280, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x0, 8) , (unique, 0xc280, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)",
    "(register, 0x0, 8) INT_ADD (register, 0x0, 8) , (unique, 0xc280, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x0, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x0, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x80, 8)",
    "(unique, 0x5500, 8) COPY (register, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (unique, 0x5500, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x70, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x200, 1) INT_LESS (register, 0x0, 8) , (unique, 0xc280, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x20b, 1) INT_SBORROW (register, 0x0, 8) , (unique, 0xc280, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(unique, 0x26180, 8) INT_SUB (register, 0x0, 8) , (unique, 0xc280, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x26180, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x26180, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x26180, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0xcc80, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)",
    " ---  CBRANCH (ram, 0x13a7, 8) , (unique, 0xcc80, 1)",
    "(register, 0x38, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x1399, 8)",
    " ---  CALL (ram, 0xf20, 8)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0xfffffffffffffed8, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)",
    "(register, 0x0, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x80, 8)",
    "(unique, 0x5500, 8) COPY (register, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (unique, 0x5500, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0x18, 8) , (const, 0x88, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x18, 8) , (const, 0x88, 8)",
    "(register, 0x18, 8) INT_ADD (register, 0x18, 8) , (const, 0x88, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x18, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x18, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x18, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0xfffffffffffffec8, 8)",
    "(register, 0x30, 8) COPY (unique, 0x3200, 8)",
    "(register, 0x38, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x13bd, 8)",
    " ---  CALL (ram, 0x4f0, 8)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0xfffffffffffffed0, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x200, 1) INT_LESS (register, 0x38, 8) , (register, 0xb0, 8)",
    "(register, 0x20b, 1) INT_SBORROW (register, 0x38, 8) , (register, 0xb0, 8)",
    "(unique, 0x25c80, 8) INT_SUB (register, 0x38, 8) , (register, 0xb0, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x25c80, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x25c80, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x25c80, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x13ce, 8) , (register, 0x206, 1)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x13ce, 8)",
    " ---  CALL (ram, 0x50f8, 8)",
    "(register, 0x0, 8) COPY (ram, 0x5140, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)",
    "(register, 0x0, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffe8, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x200, 1) INT_LESS (register, 0x0, 8) , (unique, 0xc280, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x20b, 1) INT_SBORROW (register, 0x0, 8) , (unique, 0xc280, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(unique, 0x26180, 8) INT_SUB (register, 0x0, 8) , (unique, 0xc280, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x26180, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x26180, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x26180, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0xcb80, 1) BOOL_NEGATE (register, 0x206, 1)",
    " ---  CBRANCH (ram, 0x13ea, 8) , (unique, 0xcb80, 1)",
    "(register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x130, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x130, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x130, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0xb0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  RETURN (register, 0x288, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x13ef, 8)",
    " ---  CALL (ram, 0x5138, 8)"
  ],
  "__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_": [],
  "__ZN6spdlog5sinks9base_sinkINS_7details10null_mutexEE11set_patternERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEE": [
    "(unique, 0xef80, 8) COPY (register, 0x28, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x28, 8) COPY (register, 0x20, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)",
    "(register, 0x0, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x40, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x0, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  BRANCHIND (register, 0x0, 8)"
  ],
  "__ZN6spdlog5sinks18rotating_file_sinkINS_7details10null_mutexEED0Ev": [
    "(unique, 0xef80, 8) COPY (register, 0x28, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x28, 8) COPY (register, 0x20, 8)",
    "(unique, 0xef80, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0x0, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x18, 8) COPY (register, 0x38, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x38, 8) , (const, 0x58, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x56080, 8) INT_AND (register, 0x38, 8) , (register, 0x38, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x56080, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x234f, 8) , (register, 0x206, 1)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x2347, 8)",
    " ---  CALL (ram, 0x5148, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x58, 8)",
    "(unique, 0x5800, 8) COPY (const, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5800, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x60, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0xc000, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(unique, 0x55980, 1) INT_AND (unique, 0xc000, 1) , (const, 0x1, 1)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x55980, 1) , (const, 0x0, 1)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x55980, 1) , (const, 0x0, 1)",
    "(unique, 0x13400, 1) INT_AND (unique, 0x55980, 1) , (const, 0xff, 1)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 1)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x235e, 8) , (register, 0x206, 1)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x70, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x235e, 8)",
    " ---  CALL (ram, 0x50f8, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x20, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0xc000, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(unique, 0x55980, 1) INT_AND (unique, 0xc000, 1) , (const, 0x1, 1)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x55980, 1) , (const, 0x0, 1)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x55980, 1) , (const, 0x0, 1)",
    "(unique, 0x13400, 1) INT_AND (unique, 0x55980, 1) , (const, 0xff, 1)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 1)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x236d, 8) , (register, 0x206, 1)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x30, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x236d, 8)",
    " ---  CALL (ram, 0x50f8, 8)",
    "(register, 0x0, 8) COPY (ram, 0x3098, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0x0, 8) , (const, 0x10, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x0, 8) , (const, 0x10, 8)",
    "(register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x10, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x0, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x0, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0x5500, 8) COPY (register, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (register, 0x18, 8) , (unique, 0x5500, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x10, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x10, 8)",
    "(unique, 0x5800, 8) COPY (const, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5800, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x56080, 8) INT_AND (register, 0x38, 8) , (register, 0x38, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x56080, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x2392, 8) , (register, 0x206, 1)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)",
    "(register, 0x0, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x8, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(unique, 0x23d80, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x2392, 8)",
    " ---  CALLIND (unique, 0x23d80, 8)",
    "(register, 0x38, 8) COPY (register, 0x18, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  BRANCH (ram, 0x50f8, 8)"
  ],
  "__ZN6spdlog17pattern_formatterC1ENS_17pattern_time_typeENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE": [],
  "__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6insertEmPKc": [],
  "__ZN6spdlog5sinks9base_sinkINS_7details10null_mutexEE13set_formatterENSt3__110unique_ptrINS_9formatterENS5_14default_deleteIS7_EEEE": [
    "(unique, 0xef80, 8) COPY (register, 0x28, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x28, 8) COPY (register, 0x20, 8)",
    "(unique, 0xef80, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0x0, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)",
    "(register, 0x0, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x5800, 8) COPY (const, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (register, 0x30, 8) , (unique, 0x5800, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xfffffffffffffff0, 8)",
    "(unique, 0x5500, 8) COPY (register, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5500, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)",
    "(register, 0x0, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xfffffffffffffff0, 8)",
    "(register, 0x30, 8) COPY (unique, 0x3100, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x48, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(unique, 0x23d80, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x208e, 8)",
    " ---  CALLIND (unique, 0x23d80, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xfffffffffffffff0, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xfffffffffffffff0, 8)",
    "(unique, 0x5800, 8) COPY (const, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5800, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x56080, 8) INT_AND (register, 0x38, 8) , (register, 0x38, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x56080, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x20a5, 8) , (register, 0x206, 1)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)",
    "(register, 0x0, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x8, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(unique, 0x23d80, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x20a5, 8)",
    " ---  CALLIND (unique, 0x23d80, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  RETURN (register, 0x288, 8)"
  ],
  "__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc": [],
  "__ZN6spdlog5sinks18rotating_file_sinkINSt3__15mutexEEC2ENS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEmmb": [
    "(unique, 0xef80, 8) COPY (register, 0x28, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x28, 8) COPY (register, 0x20, 8)",
    "(unique, 0xef80, 8) COPY (register, 0xb8, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0xb0, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0xa8, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0xa0, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x200, 1) INT_LESS (register, 0x20, 8) , (const, 0x18, 8)",
    "(register, 0x20b, 1) INT_SBORROW (register, 0x20, 8) , (const, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x18, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0xa0, 4) COPY (register, 0x80, 4)",
    "(register, 0xa0, 8) INT_ZEXT (register, 0xa0, 4)",
    "(register, 0xb8, 8) COPY (register, 0x8, 8)",
    "(register, 0xa8, 8) COPY (register, 0x10, 8)",
    "(register, 0xb0, 8) COPY (register, 0x30, 8)",
    "(register, 0x18, 8) COPY (register, 0x38, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0xcc5, 8)",
    " ---  CALL (ram, 0x820, 8)",
    "(register, 0x0, 8) COPY (ram, 0x2ed8, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0x0, 8) , (const, 0x10, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x0, 8) , (const, 0x10, 8)",
    "(register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x10, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x0, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x0, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0x5500, 8) COPY (register, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (register, 0x18, 8) , (unique, 0x5500, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x58, 8)",
    "(register, 0x30, 8) COPY (unique, 0x3100, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0xb0, 8) , (const, 0x10, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x0, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x68, 8)",
    "(unique, 0x5500, 8) COPY (register, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5500, 8)",
    "(unique, 0x5580, 16) LOAD (const, 0x1b1, 4) , (register, 0xb0, 8)",
    "(unique, 0x7c980, 16) COPY (unique, 0x5580, 16)",
    "(register, 0x1200, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0x0, 4)",
    "(register, 0x1204, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0x4, 4)",
    "(register, 0x1208, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0x8, 4)",
    "(register, 0x120c, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0xc, 4)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x58, 8)",
    "(unique, 0x5580, 16) COPY (register, 0x1200, 16)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5580, 16)",
    "(register, 0x1200, 4) INT_XOR (register, 0x1200, 4) , (register, 0x1200, 4)",
    "(register, 0x1204, 4) INT_XOR (register, 0x1204, 4) , (register, 0x1204, 4)",
    "(register, 0x1208, 4) INT_XOR (register, 0x1208, 4) , (register, 0x1208, 4)",
    "(register, 0x120c, 4) INT_XOR (register, 0x120c, 4) , (register, 0x120c, 4)",
    "(unique, 0x5580, 16) COPY (register, 0x1200, 16)",
    " ---  STORE (const, 0x1b1, 4) , (register, 0xb0, 8) , (unique, 0x5580, 16)",
    "(unique, 0x3100, 8) INT_ADD (register, 0xb0, 8) , (const, 0x10, 8)",
    "(unique, 0x5800, 8) COPY (const, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5800, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x70, 8)",
    "(unique, 0x5500, 8) COPY (register, 0xa8, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5500, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x78, 8)",
    "(unique, 0x5500, 8) COPY (register, 0xb8, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5500, 8)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x88, 8)",
    "(register, 0xb8, 8) COPY (unique, 0x3200, 8)",
    "(register, 0x0, 8) COPY (const, 0xa00000005, 8)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x88, 8)",
    "(unique, 0x5500, 8) COPY (register, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (unique, 0x5500, 8)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x90, 8)",
    "(unique, 0x5580, 16) COPY (register, 0x1200, 16)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (unique, 0x5580, 16)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0xa0, 8)",
    "(unique, 0x5580, 16) COPY (register, 0x1200, 16)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (unique, 0x5580, 16)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffc0, 8)",
    "(register, 0x38, 8) COPY (unique, 0x3100, 8)",
    "(register, 0xb0, 8) COPY (register, 0x30, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0xd30, 8)",
    " ---  CALL (ram, 0x50a8, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffc0, 8)",
    "(register, 0x30, 8) COPY (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (register, 0xb8, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(register, 0x10, 4) INT_XOR (register, 0x10, 4) , (register, 0x10, 4)",
    "(register, 0x10, 8) INT_ZEXT (register, 0x10, 4)",
    "(register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)",
    "(unique, 0x13400, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 4)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0xd3e, 8)",
    " ---  CALL (ram, 0xb0, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffc0, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0xc000, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(unique, 0x55980, 1) INT_AND (unique, 0xc000, 1) , (const, 0x1, 1)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x55980, 1) , (const, 0x0, 1)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x55980, 1) , (const, 0x0, 1)",
    "(unique, 0x13400, 1) INT_AND (unique, 0x55980, 1) , (const, 0xff, 1)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 1)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0xd4d, 8) , (register, 0x206, 1)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffd0, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0xd4d, 8)",
    " ---  CALL (ram, 0x50f8, 8)",
    "(register, 0x38, 8) COPY (register, 0xb8, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0xd55, 8)",
    " ---  CALL (ram, 0x5c0, 8)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x80, 8)",
    "(unique, 0x5500, 8) COPY (register, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (unique, 0x5500, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x55d80, 1) INT_AND (register, 0xa0, 1) , (register, 0xa0, 1)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x55d80, 1) , (const, 0x0, 1)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x55d80, 1) , (const, 0x0, 1)",
    "(unique, 0x13400, 1) INT_AND (unique, 0x55d80, 1) , (const, 0xff, 1)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 1)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0xd6e, 8) , (register, 0x206, 1)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x56080, 8) INT_AND (register, 0x0, 8) , (register, 0x0, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x56080, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0xd6e, 8) , (register, 0x206, 1)",
    "(register, 0x38, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0xd6e, 8)",
    " ---  CALL (ram, 0xf20, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x18, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x18, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x18, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0xa0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0xa8, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0xb0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0xb8, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  RETURN (register, 0x288, 8)"
  ],
  "__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE20__throw_length_errorB7v160006Ev": [
    "(unique, 0xef80, 8) COPY (register, 0x28, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x28, 8) COPY (register, 0x20, 8)",
    "(register, 0x38, 8) COPY (const, 0x2e07, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x23f0, 8)",
    " ---  BRANCH (ram, 0x23f0, 8)"
  ],
  "__ZN6spdlog5sinks18rotating_file_sinkINS_7details10null_mutexEEC1ENSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEEmmb": [
    "(unique, 0xef80, 8) COPY (register, 0x28, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x28, 8) COPY (register, 0x20, 8)",
    "(register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  BRANCH (ram, 0x14c0, 8)"
  ],
  "__ZN6spdlog5sinks15basic_file_sinkINS_7details10null_mutexEEC2ERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEEb": [
    "(unique, 0xef80, 8) COPY (register, 0x28, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x28, 8) COPY (register, 0x20, 8)",
    "(unique, 0xef80, 8) COPY (register, 0xb8, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0xb0, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0xa8, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0xa0, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x200, 1) INT_LESS (register, 0x20, 8) , (const, 0x18, 8)",
    "(register, 0x20b, 1) INT_SBORROW (register, 0x20, 8) , (const, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x18, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0xb8, 4) COPY (register, 0x10, 4)",
    "(register, 0xb8, 8) INT_ZEXT (register, 0xb8, 4)",
    "(register, 0xb0, 8) COPY (register, 0x30, 8)",
    "(register, 0x18, 8) COPY (register, 0x38, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x38, 8) , (const, 0x8, 8)",
    "(unique, 0x5780, 4) COPY (const, 0x0, 4)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5780, 4)",
    "(register, 0xa8, 8) COPY (ram, 0x3098, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0xa8, 8) , (const, 0x10, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0xa8, 8) , (const, 0x10, 8)",
    "(register, 0xa8, 8) INT_ADD (register, 0xa8, 8) , (const, 0x10, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0xa8, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0xa8, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0xa8, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0x5500, 8) COPY (register, 0xa8, 8)",
    " ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (unique, 0x5500, 8)",
    "(register, 0x38, 8) COPY (const, 0xc0, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0xad9, 8)",
    " ---  CALL (ram, 0x5100, 8)",
    "(register, 0xa0, 8) COPY (register, 0x0, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffc0, 8)",
    "(unique, 0x5700, 2) COPY (const, 0xa02, 2)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5700, 2)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffc2, 8)",
    "(unique, 0x5680, 1) COPY (const, 0x0, 1)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5680, 1)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffc0, 8)",
    "(register, 0x10, 8) COPY (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (register, 0x0, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(register, 0x30, 4) INT_XOR (register, 0x30, 4) , (register, 0x30, 4)",
    "(register, 0x30, 8) INT_ZEXT (register, 0x30, 4)",
    "(register, 0x207, 1) INT_SLESS (register, 0x30, 4) , (const, 0x0, 4)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x0, 4)",
    "(unique, 0x13400, 4) INT_AND (register, 0x30, 4) , (const, 0xff, 4)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 4)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0xaf4, 8)",
    " ---  CALL (ram, 0x5020, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffc0, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0xc000, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(unique, 0x55980, 1) INT_AND (unique, 0xc000, 1) , (const, 0x1, 1)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x55980, 1) , (const, 0x0, 1)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x55980, 1) , (const, 0x0, 1)",
    "(unique, 0x13400, 1) INT_AND (unique, 0x55980, 1) , (const, 0xff, 1)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 1)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0xb03, 8) , (register, 0x206, 1)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffd0, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0xb03, 8)",
    " ---  CALL (ram, 0x50f8, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x10, 8)",
    "(unique, 0x5500, 8) COPY (register, 0xa0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5500, 8)",
    "(register, 0x0, 8) COPY (ram, 0x2e78, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0x0, 8) , (const, 0x10, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x0, 8) , (const, 0x10, 8)",
    "(register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x10, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x0, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x0, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0x5500, 8) COPY (register, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (register, 0x18, 8) , (unique, 0x5500, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x20, 8)",
    "(register, 0xa0, 8) COPY (unique, 0x3100, 8)",
    "(register, 0x0, 8) COPY (const, 0xa00000005, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x20, 8)",
    "(unique, 0x5500, 8) COPY (register, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5500, 8)",
    "(register, 0x1200, 4) INT_XOR (register, 0x1200, 4) , (register, 0x1200, 4)",
    "(register, 0x1204, 4) INT_XOR (register, 0x1204, 4) , (register, 0x1204, 4)",
    "(register, 0x1208, 4) INT_XOR (register, 0x1208, 4) , (register, 0x1208, 4)",
    "(register, 0x120c, 4) INT_XOR (register, 0x120c, 4) , (register, 0x120c, 4)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x28, 8)",
    "(unique, 0x5580, 16) COPY (register, 0x1200, 16)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5580, 16)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x38, 8)",
    "(unique, 0x5580, 16) COPY (register, 0x1200, 16)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5580, 16)",
    "(register, 0x10, 4) INT_ZEXT (register, 0xb8, 1)",
    "(register, 0x10, 8) INT_ZEXT (register, 0x10, 4)",
    "(register, 0x38, 8) COPY (register, 0xa0, 8)",
    "(register, 0x30, 8) COPY (register, 0xb0, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0xb41, 8)",
    " ---  CALL (ram, 0xb0, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x18, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x18, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x18, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0xa0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0xa8, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0xb0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0xb8, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  RETURN (register, 0x288, 8)"
  ],
  "__ZN6spdlog5sinks18rotating_file_sinkINSt3__15mutexEE6flush_Ev": [
    "(unique, 0xef80, 8) COPY (register, 0x28, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x28, 8) COPY (register, 0x20, 8)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x38, 8) , (const, 0x90, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  BRANCH (ram, 0x5150, 8)"
  ],
  "__ZdlPv": [],
  "__Znwm": [],
  "__ZN6spdlog5sinks9base_sinkINSt3__15mutexEEC2Ev": [
    "(unique, 0xef80, 8) COPY (register, 0x28, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x28, 8) COPY (register, 0x20, 8)",
    "(unique, 0xef80, 8) COPY (register, 0xb0, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x200, 1) INT_LESS (register, 0x20, 8) , (const, 0x20, 8)",
    "(register, 0x20b, 1) INT_SBORROW (register, 0x20, 8) , (const, 0x20, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x20, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x18, 8) COPY (register, 0x38, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x38, 8) , (const, 0x8, 8)",
    "(unique, 0x5780, 4) COPY (const, 0x0, 4)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5780, 4)",
    "(register, 0x0, 8) COPY (ram, 0x3038, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0x0, 8) , (const, 0x10, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x0, 8) , (const, 0x10, 8)",
    "(register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x10, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x0, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x0, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0x5500, 8) COPY (register, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (unique, 0x5500, 8)",
    "(register, 0x38, 8) COPY (const, 0xc0, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x84d, 8)",
    " ---  CALL (ram, 0x5100, 8)",
    "(register, 0xb0, 8) COPY (register, 0x0, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffd8, 8)",
    "(unique, 0x5700, 2) COPY (const, 0xa02, 2)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5700, 2)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffda, 8)",
    "(unique, 0x5680, 1) COPY (const, 0x0, 1)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5680, 1)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffd8, 8)",
    "(register, 0x10, 8) COPY (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (register, 0x0, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(register, 0x30, 4) INT_XOR (register, 0x30, 4) , (register, 0x30, 4)",
    "(register, 0x30, 8) INT_ZEXT (register, 0x30, 4)",
    "(register, 0x207, 1) INT_SLESS (register, 0x30, 4) , (const, 0x0, 4)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x0, 4)",
    "(unique, 0x13400, 4) INT_AND (register, 0x30, 4) , (const, 0xff, 4)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 4)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x868, 8)",
    " ---  CALL (ram, 0x5020, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffd8, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0xc000, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(unique, 0x55980, 1) INT_AND (unique, 0xc000, 1) , (const, 0x1, 1)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x55980, 1) , (const, 0x0, 1)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x55980, 1) , (const, 0x0, 1)",
    "(unique, 0x13400, 1) INT_AND (unique, 0x55980, 1) , (const, 0xff, 1)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 1)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x877, 8) , (register, 0x206, 1)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffe8, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x877, 8)",
    " ---  CALL (ram, 0x50f8, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x10, 8)",
    "(unique, 0x5500, 8) COPY (register, 0xb0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5500, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x18, 8)",
    "(unique, 0x5800, 8) COPY (const, 0x32aaaba7, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5800, 8)",
    "(register, 0x1200, 4) INT_XOR (register, 0x1200, 4) , (register, 0x1200, 4)",
    "(register, 0x1204, 4) INT_XOR (register, 0x1204, 4) , (register, 0x1204, 4)",
    "(register, 0x1208, 4) INT_XOR (register, 0x1208, 4) , (register, 0x1208, 4)",
    "(register, 0x120c, 4) INT_XOR (register, 0x120c, 4) , (register, 0x120c, 4)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x20, 8)",
    "(unique, 0x5580, 16) COPY (register, 0x1200, 16)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5580, 16)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x30, 8)",
    "(unique, 0x5580, 16) COPY (register, 0x1200, 16)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5580, 16)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x40, 8)",
    "(unique, 0x5580, 16) COPY (register, 0x1200, 16)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5580, 16)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x50, 8)",
    "(unique, 0x5800, 8) COPY (const, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5800, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x20, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x20, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0xb0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  RETURN (register, 0x288, 8)"
  ],
  "__ZN6spdlog5sinks15basic_file_sinkINS_7details10null_mutexEE6flush_Ev": [
    "(unique, 0xef80, 8) COPY (register, 0x28, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x28, 8) COPY (register, 0x20, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x38, 8) , (const, 0x28, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  BRANCH (ram, 0x5150, 8)"
  ],
  "__ZN6spdlog5sinks9base_sinkINSt3__15mutexEE13set_formatterENS2_10unique_ptrINS_9formatterENS2_14default_deleteIS6_EEEE": [
    "(unique, 0xef80, 8) COPY (register, 0x28, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x28, 8) COPY (register, 0x20, 8)",
    "(unique, 0xef80, 8) COPY (register, 0xb8, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0xb0, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0x0, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0xb0, 8) COPY (register, 0x30, 8)",
    "(register, 0xb8, 8) COPY (register, 0x38, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x38, 8) , (const, 0x18, 8)",
    "(register, 0x18, 8) COPY (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x1e2c, 8)",
    " ---  CALL (ram, 0x50c0, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (register, 0xb0, 8)",
    "(register, 0x0, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x5800, 8) COPY (const, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (register, 0xb0, 8) , (unique, 0x5800, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffe0, 8)",
    "(unique, 0x5500, 8) COPY (register, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5500, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (register, 0xb8, 8)",
    "(register, 0x0, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffe0, 8)",
    "(register, 0x30, 8) COPY (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (register, 0xb8, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x48, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(unique, 0x23d80, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x1e47, 8)",
    " ---  CALLIND (unique, 0x23d80, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffe0, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffe0, 8)",
    "(unique, 0x5800, 8) COPY (const, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5800, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x56080, 8) INT_AND (register, 0x38, 8) , (register, 0x38, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x56080, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x1e5e, 8) , (register, 0x206, 1)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)",
    "(register, 0x0, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x8, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(unique, 0x23d80, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x1e5e, 8)",
    " ---  CALLIND (unique, 0x23d80, 8)",
    "(register, 0x38, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x1e66, 8)",
    " ---  CALL (ram, 0x50c8, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0xb0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0xb8, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  RETURN (register, 0x288, 8)"
  ],
  "__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_": [],
  "__ZN6spdlog5sinks15basic_file_sinkINSt3__15mutexEE8sink_it_ERKNS_7details7log_msgE": [
    "(unique, 0xef80, 8) COPY (register, 0x28, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x28, 8) COPY (register, 0x20, 8)",
    "(unique, 0xef80, 8) COPY (register, 0xb0, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x200, 1) INT_LESS (register, 0x20, 8) , (const, 0x130, 8)",
    "(register, 0x20b, 1) INT_SBORROW (register, 0x20, 8) , (const, 0x130, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x130, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x18, 8) COPY (register, 0x38, 8)",
    "(register, 0x0, 8) COPY (ram, 0x5140, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)",
    "(register, 0x0, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffe8, 8)",
    "(unique, 0x5500, 8) COPY (register, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5500, 8)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0xfffffffffffffed8, 8)",
    "(unique, 0x5800, 8) COPY (const, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (unique, 0x5800, 8)",
    "(register, 0x0, 8) COPY (ram, 0x30f8, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0x0, 8) , (const, 0x10, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x0, 8) , (const, 0x10, 8)",
    "(register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x10, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x0, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x0, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0xfffffffffffffec8, 8)",
    "(unique, 0x5500, 8) COPY (register, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (unique, 0x5500, 8)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0xfffffffffffffee8, 8)",
    "(register, 0xb0, 8) COPY (unique, 0x3200, 8)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0xfffffffffffffed0, 8)",
    "(unique, 0x5500, 8) COPY (register, 0xb0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (unique, 0x5500, 8)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0xfffffffffffffee0, 8)",
    "(unique, 0x5800, 8) COPY (const, 0xfa, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (unique, 0x5800, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x38, 8) , (const, 0x10, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)",
    "(register, 0x0, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0xfffffffffffffec8, 8)",
    "(register, 0x10, 8) COPY (unique, 0x3200, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x10, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(unique, 0x23d80, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0xa26, 8)",
    " ---  CALLIND (unique, 0x23d80, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0x18, 8) , (const, 0x58, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x18, 8) , (const, 0x58, 8)",
    "(register, 0x18, 8) INT_ADD (register, 0x18, 8) , (const, 0x58, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x18, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x18, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x18, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0xfffffffffffffec8, 8)",
    "(register, 0x30, 8) COPY (unique, 0x3200, 8)",
    "(register, 0x38, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0xa39, 8)",
    " ---  CALL (ram, 0x4f0, 8)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0xfffffffffffffed0, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x200, 1) INT_LESS (register, 0x38, 8) , (register, 0xb0, 8)",
    "(register, 0x20b, 1) INT_SBORROW (register, 0x38, 8) , (register, 0xb0, 8)",
    "(unique, 0x25c80, 8) INT_SUB (register, 0x38, 8) , (register, 0xb0, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x25c80, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x25c80, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x25c80, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0xa4a, 8) , (register, 0x206, 1)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0xa4a, 8)",
    " ---  CALL (ram, 0x50f8, 8)",
    "(register, 0x0, 8) COPY (ram, 0x5140, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)",
    "(register, 0x0, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffe8, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x200, 1) INT_LESS (register, 0x0, 8) , (unique, 0xc280, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x20b, 1) INT_SBORROW (register, 0x0, 8) , (unique, 0xc280, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(unique, 0x26180, 8) INT_SUB (register, 0x0, 8) , (unique, 0xc280, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x26180, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x26180, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x26180, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0xcb80, 1) BOOL_NEGATE (register, 0x206, 1)",
    " ---  CBRANCH (ram, 0xa66, 8) , (unique, 0xcb80, 1)",
    "(register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x130, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x130, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x130, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0xb0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  RETURN (register, 0x288, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0xa6b, 8)",
    " ---  CALL (ram, 0x5138, 8)"
  ],
  "__ZN6spdlog7details2os7fopen_sEPP7__sFILERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEESD_": [],
  "__ZNSt3__15mutex4lockEv": [],
  "__ZN6spdlog7details2os11path_existsERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE": [],
  "__ZN6spdlog5sinks9base_sinkINSt3__15mutexEE5flushEv": [
    "(unique, 0xef80, 8) COPY (register, 0x28, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x28, 8) COPY (register, 0x20, 8)",
    "(unique, 0xef80, 8) COPY (register, 0xb0, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0xb0, 8) COPY (register, 0x38, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x38, 8) , (const, 0x18, 8)",
    "(register, 0x18, 8) COPY (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x1d96, 8)",
    " ---  CALL (ram, 0x50c0, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (register, 0xb0, 8)",
    "(register, 0x0, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x38, 8) COPY (register, 0xb0, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x38, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(unique, 0x23d80, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x1d9f, 8)",
    " ---  CALLIND (unique, 0x23d80, 8)",
    "(register, 0x38, 8) COPY (register, 0x18, 8)",
    "(register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0xb0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  BRANCH (ram, 0x50c8, 8)"
  ],
  "__ZN6spdlog5sinks15basic_file_sinkINS_7details10null_mutexEED0Ev": [
    "(unique, 0xef80, 8) COPY (register, 0x28, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x28, 8) COPY (register, 0x20, 8)",
    "(unique, 0xef80, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0x0, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x18, 8) COPY (register, 0x38, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x38, 8) , (const, 0x28, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x56080, 8) INT_AND (register, 0x38, 8) , (register, 0x38, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x56080, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x1fef, 8) , (register, 0x206, 1)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x1fe7, 8)",
    " ---  CALL (ram, 0x5148, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x28, 8)",
    "(unique, 0x5800, 8) COPY (const, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5800, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x30, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0xc000, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(unique, 0x55980, 1) INT_AND (unique, 0xc000, 1) , (const, 0x1, 1)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x55980, 1) , (const, 0x0, 1)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x55980, 1) , (const, 0x0, 1)",
    "(unique, 0x13400, 1) INT_AND (unique, 0x55980, 1) , (const, 0xff, 1)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 1)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x1ffe, 8) , (register, 0x206, 1)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x40, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x1ffe, 8)",
    " ---  CALL (ram, 0x50f8, 8)",
    "(register, 0x0, 8) COPY (ram, 0x3098, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0x0, 8) , (const, 0x10, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x0, 8) , (const, 0x10, 8)",
    "(register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x10, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x0, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x0, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0x5500, 8) COPY (register, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (register, 0x18, 8) , (unique, 0x5500, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x10, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x10, 8)",
    "(unique, 0x5800, 8) COPY (const, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5800, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x56080, 8) INT_AND (register, 0x38, 8) , (register, 0x38, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x56080, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x2023, 8) , (register, 0x206, 1)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)",
    "(register, 0x0, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x8, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(unique, 0x23d80, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x2023, 8)",
    " ---  CALLIND (unique, 0x23d80, 8)",
    "(register, 0x38, 8) COPY (register, 0x18, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  BRANCH (ram, 0x50f8, 8)"
  ],
  "__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE5rfindEcm": [],
  "__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm": [],
  "__ZN6spdlog5sinks9base_sinkINSt3__15mutexEE3logERKNS_7details7log_msgE": [
    "(unique, 0xef80, 8) COPY (register, 0x28, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x28, 8) COPY (register, 0x20, 8)",
    "(unique, 0xef80, 8) COPY (register, 0xb8, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0xb0, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0x0, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0xb0, 8) COPY (register, 0x30, 8)",
    "(register, 0xb8, 8) COPY (register, 0x38, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x38, 8) , (const, 0x18, 8)",
    "(register, 0x18, 8) COPY (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x1d4c, 8)",
    " ---  CALL (ram, 0x50c0, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (register, 0xb8, 8)",
    "(register, 0x0, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x38, 8) COPY (register, 0xb8, 8)",
    "(register, 0x30, 8) COPY (register, 0xb0, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x30, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(unique, 0x23d80, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x1d58, 8)",
    " ---  CALLIND (unique, 0x23d80, 8)",
    "(register, 0x38, 8) COPY (register, 0x18, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0xb0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0xb8, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  BRANCH (ram, 0x50c8, 8)"
  ],
  "__ZN6spdlog5sinks18rotating_file_sinkINS_7details10null_mutexEE8filenameEv": [
    "(unique, 0xef80, 8) COPY (register, 0x28, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x28, 8) COPY (register, 0x20, 8)",
    "(unique, 0xef80, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0x0, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x18, 8) COPY (register, 0x38, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0x30, 8) , (const, 0x60, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x30, 8) , (const, 0x60, 8)",
    "(register, 0x30, 8) INT_ADD (register, 0x30, 8) , (const, 0x60, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x30, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x30, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x30, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x1b12, 8)",
    " ---  CALL (ram, 0x50a8, 8)",
    "(register, 0x0, 8) COPY (register, 0x18, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  RETURN (register, 0x288, 8)"
  ],
  "__ZN6spdlog7details2os16sleep_for_millisEj": [],
  "__ZNSt11logic_errorC2EPKc": [],
  "__ZN6spdlog5sinks18rotating_file_sinkINSt3__15mutexEEC1ENS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEmmb": [
    "(unique, 0xef80, 8) COPY (register, 0x28, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x28, 8) COPY (register, 0x20, 8)",
    "(register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  BRANCH (ram, 0xca0, 8)"
  ],
  "__ZN6spdlog5sinks18rotating_file_sinkINSt3__15mutexEE7rotate_Ev": [
    "(unique, 0xef80, 8) COPY (register, 0x28, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x28, 8) COPY (register, 0x20, 8)",
    "(unique, 0xef80, 8) COPY (register, 0xb8, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0xb0, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0xa8, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0xa0, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x200, 1) INT_LESS (register, 0x20, 8) , (const, 0xc8, 8)",
    "(register, 0x20b, 1) INT_SBORROW (register, 0x20, 8) , (const, 0xc8, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0xc8, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x18, 8) COPY (register, 0x38, 8)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x38, 8) , (const, 0x90, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x56080, 8) INT_AND (register, 0x38, 8) , (register, 0x38, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x56080, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0xf53, 8) , (register, 0x206, 1)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0xf48, 8)",
    " ---  CALL (ram, 0x5148, 8)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x90, 8)",
    "(unique, 0x5800, 8) COPY (const, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (unique, 0x5800, 8)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x18, 8) , (const, 0x88, 8)",
    "(register, 0x0, 8) COPY (unique, 0x3200, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffc8, 8)",
    "(unique, 0x5500, 8) COPY (register, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5500, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffd0, 8)",
    "(unique, 0x5500, 8) COPY (register, 0x18, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5500, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x78, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0xb0, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x56080, 8) INT_AND (register, 0xb0, 8) , (register, 0xb0, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x56080, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x1027, 8) , (register, 0x206, 1)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffd0, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x0, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x58, 8)",
    "(register, 0xb8, 8) COPY (unique, 0x3100, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffb0, 8)",
    "(register, 0xa0, 8) COPY (unique, 0x3100, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffff98, 8)",
    "(register, 0xa8, 8) COPY (unique, 0x3100, 8)",
    " ---  BRANCH (ram, 0xf9c, 8)",
    "(register, 0xb0, 8) COPY (register, 0x18, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x56080, 8) INT_AND (register, 0x18, 8) , (register, 0x18, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x56080, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x1027, 8) , (register, 0x206, 1)",
    "(unique, 0x3100, 8) INT_ADD (register, 0xb0, 8) , (const, 0xffffffffffffffff, 8)",
    "(register, 0x18, 8) COPY (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (register, 0xa0, 8)",
    "(register, 0x30, 8) COPY (register, 0xb8, 8)",
    "(register, 0x10, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0xfae, 8)",
    " ---  CALL (ram, 0xdf0, 8)",
    "(register, 0x38, 8) COPY (register, 0xa0, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0xfb6, 8)",
    " ---  CALL (ram, 0x5038, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x55d80, 1) INT_AND (register, 0x0, 1) , (register, 0x0, 1)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x55d80, 1) , (const, 0x0, 1)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x55d80, 1) , (const, 0x0, 1)",
    "(unique, 0x13400, 1) INT_AND (unique, 0x55d80, 1) , (const, 0xff, 1)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 1)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x100f, 8) , (register, 0x206, 1)",
    "(register, 0x38, 8) COPY (register, 0xa8, 8)",
    "(register, 0x30, 8) COPY (register, 0xb8, 8)",
    "(register, 0x10, 8) COPY (register, 0xb0, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0xfc8, 8)",
    " ---  CALL (ram, 0xdf0, 8)",
    "(register, 0x38, 8) COPY (register, 0xa8, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0xfd0, 8)",
    " ---  CALL (ram, 0x5050, 8)",
    "(register, 0x38, 8) COPY (register, 0xa0, 8)",
    "(register, 0x30, 8) COPY (register, 0xa8, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0xfdb, 8)",
    " ---  CALL (ram, 0x5058, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x55f80, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x55f80, 4) , (const, 0x0, 4)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x55f80, 4) , (const, 0x0, 4)",
    "(unique, 0x13400, 4) INT_AND (unique, 0x55f80, 4) , (const, 0xff, 4)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 4)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x1000, 8) , (register, 0x206, 1)",
    "(register, 0x38, 8) COPY (const, 0x64, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0xfe9, 8)",
    " ---  CALL (ram, 0x5048, 8)",
    "(register, 0x38, 8) COPY (register, 0xa8, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0xff1, 8)",
    " ---  CALL (ram, 0x5050, 8)",
    "(register, 0x38, 8) COPY (register, 0xa0, 8)",
    "(register, 0x30, 8) COPY (register, 0xa8, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0xffc, 8)",
    " ---  CALL (ram, 0x5058, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x55f80, 4) INT_AND (register, 0x0, 4) , (register, 0x0, 4)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x55f80, 4) , (const, 0x0, 4)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x55f80, 4) , (const, 0x0, 4)",
    "(unique, 0x13400, 4) INT_AND (unique, 0x55f80, 4) , (const, 0xff, 4)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 4)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0xcb80, 1) BOOL_NEGATE (register, 0x206, 1)",
    " ---  CBRANCH (ram, 0x1072, 8) , (unique, 0xcb80, 1)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffff98, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0xc000, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(unique, 0x55980, 1) INT_AND (unique, 0xc000, 1) , (const, 0x1, 1)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x55980, 1) , (const, 0x0, 1)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x55980, 1) , (const, 0x0, 1)",
    "(unique, 0x13400, 1) INT_AND (unique, 0x55980, 1) , (const, 0xff, 1)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 1)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x100f, 8) , (register, 0x206, 1)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffa8, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x100f, 8)",
    " ---  CALL (ram, 0x50f8, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffb0, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0xc000, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(unique, 0x55980, 1) INT_AND (unique, 0xc000, 1) , (const, 0x1, 1)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x55980, 1) , (const, 0x0, 1)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x55980, 1) , (const, 0x0, 1)",
    "(unique, 0x13400, 1) INT_AND (unique, 0x55980, 1) , (const, 0xff, 1)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 1)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0xf90, 8) , (register, 0x206, 1)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffc0, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x1022, 8)",
    " ---  CALL (ram, 0x50f8, 8)",
    " ---  BRANCH (ram, 0xf90, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffd0, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x30, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x30, 8) , (const, 0x98, 8)",
    "(unique, 0xc000, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)",
    "(register, 0x0, 4) INT_ZEXT (unique, 0xc000, 1)",
    "(register, 0x0, 8) INT_ZEXT (register, 0x0, 4)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x55580, 1) INT_AND (register, 0x0, 1) , (const, 0x1, 1)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x55580, 1) , (const, 0x0, 1)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x55580, 1) , (const, 0x0, 1)",
    "(unique, 0x13400, 1) INT_AND (unique, 0x55580, 1) , (const, 0xff, 1)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 1)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0xcb80, 1) BOOL_NEGATE (register, 0x206, 1)",
    " ---  CBRANCH (ram, 0x103b, 8) , (unique, 0xcb80, 1)",
    "(unique, 0x54200, 8) INT_AND (register, 0x0, 8) , (const, 0x1, 8)",
    "(register, 0x200, 1) INT_NOTEQUAL (unique, 0x54200, 8) , (const, 0x0, 8)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(register, 0x0, 8) INT_RIGHT (register, 0x0, 8) , (const, 0x1, 4)",
    "(register, 0x207, 1) INT_SLESS (register, 0x0, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x0, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  BRANCH (ram, 0x1042, 8)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x30, 8) , (const, 0xa0, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)",
    "(register, 0x0, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x56080, 8) INT_AND (register, 0x0, 8) , (register, 0x0, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x56080, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x1143, 8) , (register, 0x206, 1)",
    "(register, 0x200, 1) INT_CARRY (register, 0x30, 8) , (const, 0x98, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x30, 8) , (const, 0x98, 8)",
    "(register, 0x30, 8) INT_ADD (register, 0x30, 8) , (const, 0x98, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x30, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x30, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x30, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffc8, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x10, 8) COPY (const, 0x1, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x1060, 8)",
    " ---  CALL (ram, 0xb0, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0xc8, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0xc8, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0xc8, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0xa0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0xa8, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0xb0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0xb8, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  RETURN (register, 0x288, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffc8, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x30, 8) COPY (const, 0x1, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x1080, 8)",
    " ---  CALL (ram, 0x470, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffd0, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x0, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x0, 8) , (const, 0x80, 8)",
    "(unique, 0x5800, 8) COPY (const, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (unique, 0x5800, 8)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffff30, 8)",
    "(register, 0x38, 8) COPY (unique, 0x3200, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffb0, 8)",
    "(register, 0x30, 8) COPY (unique, 0x3100, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x109f, 8)",
    " ---  CALL (ram, 0x5040, 8)",
    "(register, 0x10, 8) COPY (const, 0x2ddd, 8)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffff30, 8)",
    "(register, 0x38, 8) COPY (unique, 0x3200, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(register, 0x30, 4) INT_XOR (register, 0x30, 4) , (register, 0x30, 4)",
    "(register, 0x30, 8) INT_ZEXT (register, 0x30, 4)",
    "(register, 0x207, 1) INT_SLESS (register, 0x30, 4) , (const, 0x0, 4)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x0, 4)",
    "(unique, 0x13400, 4) INT_AND (register, 0x30, 4) , (const, 0xff, 4)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 4)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x10b4, 8)",
    " ---  CALL (ram, 0x50a0, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x10, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x8, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffff90, 8)",
    "(unique, 0x5500, 8) COPY (register, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5500, 8)",
    "(unique, 0x5580, 16) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)",
    "(unique, 0x7c980, 16) COPY (unique, 0x5580, 16)",
    "(register, 0x1200, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0x0, 4)",
    "(register, 0x1204, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0x4, 4)",
    "(register, 0x1208, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0x8, 4)",
    "(register, 0x120c, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0xc, 4)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffff80, 8)",
    "(unique, 0x5580, 16) COPY (register, 0x1200, 16)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5580, 16)",
    "(register, 0x1200, 4) INT_XOR (register, 0x1200, 4) , (register, 0x1200, 4)",
    "(register, 0x1204, 4) INT_XOR (register, 0x1204, 4) , (register, 0x1204, 4)",
    "(register, 0x1208, 4) INT_XOR (register, 0x1208, 4) , (register, 0x1208, 4)",
    "(register, 0x120c, 4) INT_XOR (register, 0x120c, 4) , (register, 0x120c, 4)",
    "(unique, 0x5580, 16) COPY (register, 0x1200, 16)",
    " ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (unique, 0x5580, 16)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x10, 8)",
    "(unique, 0x5800, 8) COPY (const, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5800, 8)",
    "(register, 0x30, 8) COPY (const, 0x2e02, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffff80, 8)",
    "(register, 0x38, 8) COPY (unique, 0x3100, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x10e1, 8)",
    " ---  CALL (ram, 0x5090, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x10, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x8, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffff70, 8)",
    "(unique, 0x5500, 8) COPY (register, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (unique, 0x5500, 8)",
    "(unique, 0x5580, 16) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)",
    "(unique, 0x7c980, 16) COPY (unique, 0x5580, 16)",
    "(register, 0x1200, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0x0, 4)",
    "(register, 0x1204, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0x4, 4)",
    "(register, 0x1208, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0x8, 4)",
    "(register, 0x120c, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0xc, 4)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffff60, 8)",
    "(unique, 0x5580, 16) COPY (register, 0x1200, 16)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (unique, 0x5580, 16)",
    "(register, 0x1200, 4) INT_XOR (register, 0x1200, 4) , (register, 0x1200, 4)",
    "(register, 0x1204, 4) INT_XOR (register, 0x1204, 4) , (register, 0x1204, 4)",
    "(register, 0x1208, 4) INT_XOR (register, 0x1208, 4) , (register, 0x1208, 4)",
    "(register, 0x120c, 4) INT_XOR (register, 0x120c, 4) , (register, 0x120c, 4)",
    "(unique, 0x5580, 16) COPY (register, 0x1200, 16)",
    " ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (unique, 0x5580, 16)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x10, 8)",
    "(unique, 0x5800, 8) COPY (const, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5800, 8)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffff48, 8)",
    "(register, 0x38, 8) COPY (unique, 0x3200, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffff98, 8)",
    "(register, 0x30, 8) COPY (unique, 0x3100, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x1114, 8)",
    " ---  CALL (ram, 0x5040, 8)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffff18, 8)",
    "(register, 0x38, 8) COPY (unique, 0x3200, 8)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffff60, 8)",
    "(register, 0x30, 8) COPY (unique, 0x3200, 8)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffff48, 8)",
    "(register, 0x10, 8) COPY (unique, 0x3200, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x112e, 8)",
    " ---  CALL (ram, 0x1460, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x1133, 8)",
    " ---  CALL (ram, 0x5128, 8)",
    "(unique, 0xc180, 4) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)",
    "(register, 0x30, 4) COPY (unique, 0xc180, 4)",
    "(register, 0x30, 8) INT_ZEXT (register, 0x30, 4)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffff18, 8)",
    "(register, 0x38, 8) COPY (unique, 0x3200, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x1141, 8)",
    " ---  CALL (ram, 0x5018, 8)",
    " ---  BRANCH (ram, 0x115e, 8)",
    "(register, 0x30, 8) COPY (const, 0x2d6c, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffb0, 8)",
    "(register, 0x18, 8) COPY (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x1156, 8)",
    " ---  CALL (ram, 0x3f0, 8)",
    "(register, 0x38, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x115e, 8)",
    " ---  CALL (ram, 0x5010, 8)",
    " ---  CALLOTHER (const, 0x4d, 4)",
    " ---  BRANCH (ram, 0x115e, 8)"
  ],
  "__ZN6spdlog5sinks18rotating_file_sinkINSt3__15mutexEE8filenameEv": [
    "(unique, 0xef80, 8) COPY (register, 0x28, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x28, 8) COPY (register, 0x20, 8)",
    "(unique, 0xef80, 8) COPY (register, 0xb8, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0xb0, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0x0, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0xb8, 8) COPY (register, 0x30, 8)",
    "(register, 0xb0, 8) COPY (register, 0x38, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x30, 8) , (const, 0x18, 8)",
    "(register, 0x18, 8) COPY (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x12cc, 8)",
    " ---  CALL (ram, 0x50c0, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0xb8, 8) , (const, 0x98, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0xb8, 8) , (const, 0x98, 8)",
    "(register, 0xb8, 8) INT_ADD (register, 0xb8, 8) , (const, 0x98, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0xb8, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0xb8, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0xb8, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x38, 8) COPY (register, 0xb0, 8)",
    "(register, 0x30, 8) COPY (register, 0xb8, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x12de, 8)",
    " ---  CALL (ram, 0x50a8, 8)",
    "(register, 0x38, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x12e6, 8)",
    " ---  CALL (ram, 0x50c8, 8)",
    "(register, 0x0, 8) COPY (register, 0xb0, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0xb0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0xb8, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  RETURN (register, 0x288, 8)"
  ],
  "___cxa_allocate_exception": [],
  "__ZN6spdlog5sinks15basic_file_sinkINSt3__15mutexEED1Ev": [
    "(unique, 0xef80, 8) COPY (register, 0x28, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x28, 8) COPY (register, 0x20, 8)",
    "(unique, 0xef80, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0x0, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x18, 8) COPY (register, 0x38, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x38, 8) , (const, 0x60, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x56080, 8) INT_AND (register, 0x38, 8) , (register, 0x38, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x56080, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x1c6f, 8) , (register, 0x206, 1)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x1c67, 8)",
    " ---  CALL (ram, 0x5148, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x60, 8)",
    "(unique, 0x5800, 8) COPY (const, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5800, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x68, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0xc000, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(unique, 0x55980, 1) INT_AND (unique, 0xc000, 1) , (const, 0x1, 1)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x55980, 1) , (const, 0x0, 1)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x55980, 1) , (const, 0x0, 1)",
    "(unique, 0x13400, 1) INT_AND (unique, 0x55980, 1) , (const, 0xff, 1)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 1)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x1c7e, 8) , (register, 0x206, 1)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x78, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x1c7e, 8)",
    " ---  CALL (ram, 0x50f8, 8)",
    "(register, 0x0, 8) COPY (ram, 0x3038, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0x0, 8) , (const, 0x10, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x0, 8) , (const, 0x10, 8)",
    "(register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x10, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x0, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x0, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0x5500, 8) COPY (register, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (register, 0x18, 8) , (unique, 0x5500, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x18, 8)",
    "(register, 0x38, 8) COPY (unique, 0x3100, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x1c95, 8)",
    " ---  CALL (ram, 0x50d0, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x10, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x10, 8)",
    "(unique, 0x5800, 8) COPY (const, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5800, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x56080, 8) INT_AND (register, 0x38, 8) , (register, 0x38, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x56080, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x1cb2, 8) , (register, 0x206, 1)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)",
    "(register, 0x0, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x8, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    " ---  BRANCHIND (unique, 0xc280, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  RETURN (register, 0x288, 8)"
  ],
  "__ZN6spdlog7details11file_helperD1Ev": [
    "(unique, 0xef80, 8) COPY (register, 0x28, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x28, 8) COPY (register, 0x20, 8)",
    "(unique, 0xef80, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0x0, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x18, 8) COPY (register, 0x38, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x38, 8) , (const, 0x8, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x56080, 8) INT_AND (register, 0x38, 8) , (register, 0x38, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x56080, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x8f, 8) , (register, 0x206, 1)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x87, 8)",
    " ---  CALL (ram, 0x5148, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x8, 8)",
    "(unique, 0x5800, 8) COPY (const, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5800, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x10, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0xc000, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(unique, 0x55980, 1) INT_AND (unique, 0xc000, 1) , (const, 0x1, 1)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x55980, 1) , (const, 0x0, 1)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x55980, 1) , (const, 0x0, 1)",
    "(unique, 0x13400, 1) INT_AND (unique, 0x55980, 1) , (const, 0xff, 1)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 1)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0xcb80, 1) BOOL_NEGATE (register, 0x206, 1)",
    " ---  CBRANCH (ram, 0x9c, 8) , (unique, 0xcb80, 1)",
    "(register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  RETURN (register, 0x288, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x20, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  BRANCH (ram, 0x50f8, 8)"
  ],
  "__ZN6spdlog7details2os15filename_to_strERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE": [],
  "__ZN6spdlog7details11file_helper4openERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEb": [
    "(unique, 0xef80, 8) COPY (register, 0x28, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x28, 8) COPY (register, 0x20, 8)",
    "(unique, 0xef80, 8) COPY (register, 0xb8, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0xb0, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0xa8, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0xa0, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x200, 1) INT_LESS (register, 0x20, 8) , (const, 0x88, 8)",
    "(register, 0x20b, 1) INT_SBORROW (register, 0x20, 8) , (const, 0x88, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x88, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0xb8, 4) COPY (register, 0x10, 4)",
    "(register, 0xb8, 8) INT_ZEXT (register, 0xb8, 4)",
    "(register, 0x18, 8) COPY (register, 0x30, 8)",
    "(register, 0xb0, 8) COPY (register, 0x38, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x38, 8) , (const, 0x8, 8)",
    "(register, 0xa0, 8) COPY (unique, 0x3100, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x38, 8) , (const, 0x8, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x56080, 8) INT_AND (register, 0x38, 8) , (register, 0x38, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x56080, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0xe7, 8) , (register, 0x206, 1)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0xdf, 8)",
    " ---  CALL (ram, 0x5148, 8)",
    "(unique, 0x5800, 8) COPY (const, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (register, 0xa0, 8) , (unique, 0x5800, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffb8, 8)",
    "(unique, 0x5500, 8) COPY (register, 0xa0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5500, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0xb0, 8) , (const, 0x10, 8)",
    "(register, 0x38, 8) COPY (unique, 0x3100, 8)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffff68, 8)",
    "(unique, 0x5500, 8) COPY (register, 0x38, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (unique, 0x5500, 8)",
    "(register, 0x30, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0xfe, 8)",
    " ---  CALL (ram, 0x50b8, 8)",
    "(unique, 0xc200, 4) LOAD (const, 0x1b1, 4) , (register, 0xb0, 8)",
    "(register, 0x200, 1) INT_LESS (unique, 0xc200, 4) , (const, 0x0, 4)",
    "(unique, 0xc200, 4) LOAD (const, 0x1b1, 4) , (register, 0xb0, 8)",
    "(register, 0x20b, 1) INT_SBORROW (unique, 0xc200, 4) , (const, 0x0, 4)",
    "(unique, 0xc200, 4) LOAD (const, 0x1b1, 4) , (register, 0xb0, 8)",
    "(unique, 0x25780, 4) INT_SUB (unique, 0xc200, 4) , (const, 0x0, 4)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x25780, 4) , (const, 0x0, 4)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x25780, 4) , (const, 0x0, 4)",
    "(unique, 0x13400, 4) INT_AND (unique, 0x25780, 4) , (const, 0xff, 4)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 4)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0xd280, 1) INT_NOTEQUAL (register, 0x20b, 1) , (register, 0x207, 1)",
    "(unique, 0xd380, 1) BOOL_OR (register, 0x206, 1) , (unique, 0xd280, 1)",
    " ---  CBRANCH (ram, 0x29e, 8) , (unique, 0xd380, 1)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x55d80, 1) INT_AND (register, 0xb8, 1) , (register, 0xb8, 1)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x55d80, 1) , (const, 0x0, 1)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x55d80, 1) , (const, 0x0, 1)",
    "(unique, 0x13400, 1) INT_AND (unique, 0x55d80, 1) , (const, 0xff, 1)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 1)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x1fb, 8) , (register, 0x206, 1)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(register, 0xa8, 4) INT_XOR (register, 0xa8, 4) , (register, 0xa8, 4)",
    "(register, 0xa8, 8) INT_ZEXT (register, 0xa8, 4)",
    "(register, 0x207, 1) INT_SLESS (register, 0xa8, 4) , (const, 0x0, 4)",
    "(register, 0x206, 1) INT_EQUAL (register, 0xa8, 4) , (const, 0x0, 4)",
    "(unique, 0x13400, 4) INT_AND (register, 0xa8, 4) , (const, 0xff, 4)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 4)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffff88, 8)",
    "(register, 0xa0, 8) COPY (unique, 0x3100, 8)",
    " ---  BRANCH (ram, 0x12c, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0xa8, 4) , (const, 0x1, 4)",
    "(register, 0xa8, 4) INT_ADD (register, 0xa8, 4) , (const, 0x1, 4)",
    "(register, 0xa8, 8) INT_ZEXT (register, 0xa8, 4)",
    "(register, 0x207, 1) INT_SLESS (register, 0xa8, 4) , (const, 0x0, 4)",
    "(register, 0x206, 1) INT_EQUAL (register, 0xa8, 4) , (const, 0x0, 4)",
    "(unique, 0x13400, 4) INT_AND (register, 0xa8, 4) , (const, 0xff, 4)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 4)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0x5480, 4) LOAD (const, 0x1b1, 4) , (register, 0xb0, 8)",
    "(register, 0x200, 1) INT_LESS (register, 0xa8, 4) , (unique, 0x5480, 4)",
    "(unique, 0x5480, 4) LOAD (const, 0x1b1, 4) , (register, 0xb0, 8)",
    "(register, 0x20b, 1) INT_SBORROW (register, 0xa8, 4) , (unique, 0x5480, 4)",
    "(unique, 0x5480, 4) LOAD (const, 0x1b1, 4) , (register, 0xb0, 8)",
    "(unique, 0x26080, 4) INT_SUB (register, 0xa8, 4) , (unique, 0x5480, 4)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x26080, 4) , (const, 0x0, 4)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x26080, 4) , (const, 0x0, 4)",
    "(unique, 0x13400, 4) INT_AND (unique, 0x26080, 4) , (const, 0xff, 4)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 4)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0xd200, 1) INT_EQUAL (register, 0x20b, 1) , (register, 0x207, 1)",
    " ---  CBRANCH (ram, 0x29e, 8) , (unique, 0xd200, 1)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffa0, 8)",
    "(register, 0xb8, 8) COPY (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (register, 0xb8, 8)",
    "(register, 0x30, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x13b, 8)",
    " ---  CALL (ram, 0x50a8, 8)",
    "(register, 0x38, 8) COPY (register, 0xa0, 8)",
    "(register, 0x30, 8) COPY (register, 0xb8, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x146, 8)",
    " ---  CALL (ram, 0x5068, 8)",
    "(register, 0x38, 8) COPY (register, 0xa0, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x14e, 8)",
    " ---  CALL (ram, 0x5030, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffff88, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0xc000, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(unique, 0x55980, 1) INT_AND (unique, 0xc000, 1) , (const, 0x1, 1)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x55980, 1) , (const, 0x0, 1)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x55980, 1) , (const, 0x0, 1)",
    "(unique, 0x13400, 1) INT_AND (unique, 0x55980, 1) , (const, 0xff, 1)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 1)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x15d, 8) , (register, 0x206, 1)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffff98, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x15d, 8)",
    " ---  CALL (ram, 0x50f8, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffa0, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0xc000, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(unique, 0x55980, 1) INT_AND (unique, 0xc000, 1) , (const, 0x1, 1)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x55980, 1) , (const, 0x0, 1)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x55980, 1) , (const, 0x0, 1)",
    "(unique, 0x13400, 1) INT_AND (unique, 0x55980, 1) , (const, 0xff, 1)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 1)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x16c, 8) , (register, 0x206, 1)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffb0, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x16c, 8)",
    " ---  CALL (ram, 0x50f8, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffc0, 8)",
    "(unique, 0x5680, 1) COPY (const, 0x4, 1)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5680, 1)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffc1, 8)",
    "(unique, 0x5700, 2) COPY (const, 0x6277, 2)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5700, 2)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffc3, 8)",
    "(unique, 0x5680, 1) COPY (const, 0x0, 1)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5680, 1)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffff70, 8)",
    "(register, 0x38, 8) COPY (unique, 0x3200, 8)",
    "(register, 0x30, 8) COPY (register, 0x18, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffc0, 8)",
    "(register, 0x10, 8) COPY (unique, 0x3100, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x18d, 8)",
    " ---  CALL (ram, 0x5060, 8)",
    "(register, 0xb8, 4) COPY (register, 0x0, 4)",
    "(register, 0xb8, 8) INT_ZEXT (register, 0xb8, 4)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffc0, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0xc000, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(unique, 0x55980, 1) INT_AND (unique, 0xc000, 1) , (const, 0x1, 1)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x55980, 1) , (const, 0x0, 1)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x55980, 1) , (const, 0x0, 1)",
    "(unique, 0x13400, 1) INT_AND (unique, 0x55980, 1) , (const, 0xff, 1)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 1)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x19f, 8) , (register, 0x206, 1)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffd0, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x19f, 8)",
    " ---  CALL (ram, 0x50f8, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x55d80, 1) INT_AND (register, 0xb8, 1) , (register, 0xb8, 1)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x55d80, 1) , (const, 0x0, 1)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x55d80, 1) , (const, 0x0, 1)",
    "(unique, 0x13400, 1) INT_AND (unique, 0x55d80, 1) , (const, 0xff, 1)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 1)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0xcb80, 1) BOOL_NEGATE (register, 0x206, 1)",
    " ---  CBRANCH (ram, 0x120, 8) , (unique, 0xcb80, 1)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffff70, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x1b4, 8)",
    " ---  CALL (ram, 0x5148, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffc0, 8)",
    "(unique, 0x5680, 1) COPY (const, 0x4, 1)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5680, 1)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffc1, 8)",
    "(unique, 0x5700, 2) COPY (const, 0x6261, 2)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5700, 2)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffc3, 8)",
    "(unique, 0x5680, 1) COPY (const, 0x0, 1)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5680, 1)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffb8, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x30, 8) COPY (register, 0x18, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffc0, 8)",
    "(register, 0x10, 8) COPY (unique, 0x3100, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x1d2, 8)",
    " ---  CALL (ram, 0x5060, 8)",
    "(register, 0xb8, 4) COPY (register, 0x0, 4)",
    "(register, 0xb8, 8) INT_ZEXT (register, 0xb8, 4)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffc0, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0xc000, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(unique, 0x55980, 1) INT_AND (unique, 0xc000, 1) , (const, 0x1, 1)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x55980, 1) , (const, 0x0, 1)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x55980, 1) , (const, 0x0, 1)",
    "(unique, 0x13400, 1) INT_AND (unique, 0x55980, 1) , (const, 0xff, 1)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 1)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x1e4, 8) , (register, 0x206, 1)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffd0, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x1e4, 8)",
    " ---  CALL (ram, 0x50f8, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x55d80, 1) INT_AND (register, 0xb8, 1) , (register, 0xb8, 1)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x55d80, 1) , (const, 0x0, 1)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x55d80, 1) , (const, 0x0, 1)",
    "(unique, 0x13400, 1) INT_AND (unique, 0x55d80, 1) , (const, 0xff, 1)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 1)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x327, 8) , (register, 0x206, 1)",
    "(unique, 0x3100, 8) INT_ADD (register, 0xb0, 8) , (const, 0x4, 8)",
    "(unique, 0xc180, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x38, 4) COPY (unique, 0xc180, 4)",
    "(register, 0x38, 8) INT_ZEXT (register, 0x38, 4)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x1f6, 8)",
    " ---  CALL (ram, 0x5048, 8)",
    " ---  BRANCH (ram, 0x120, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(register, 0xb8, 4) INT_XOR (register, 0xb8, 4) , (register, 0xb8, 4)",
    "(register, 0xb8, 8) INT_ZEXT (register, 0xb8, 4)",
    "(register, 0x207, 1) INT_SLESS (register, 0xb8, 4) , (const, 0x0, 4)",
    "(register, 0x206, 1) INT_EQUAL (register, 0xb8, 4) , (const, 0x0, 4)",
    "(unique, 0x13400, 4) INT_AND (register, 0xb8, 4) , (const, 0xff, 4)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 4)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffff88, 8)",
    "(register, 0xa0, 8) COPY (unique, 0x3100, 8)",
    "(unique, 0x3f00, 8) INT_MULT (register, 0x0, 8) , (const, 0x1, 8)",
    "(unique, 0x4000, 8) INT_ADD (register, 0x0, 8) , (unique, 0x3f00, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffa0, 8)",
    "(register, 0xa8, 8) COPY (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (register, 0xa8, 8)",
    "(register, 0x30, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x21f, 8)",
    " ---  CALL (ram, 0x50a8, 8)",
    "(register, 0x38, 8) COPY (register, 0xa0, 8)",
    "(register, 0x30, 8) COPY (register, 0xa8, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x22a, 8)",
    " ---  CALL (ram, 0x5068, 8)",
    "(register, 0x38, 8) COPY (register, 0xa0, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x232, 8)",
    " ---  CALL (ram, 0x5030, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffff88, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0xc000, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(unique, 0x55980, 1) INT_AND (unique, 0xc000, 1) , (const, 0x1, 1)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x55980, 1) , (const, 0x0, 1)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x55980, 1) , (const, 0x0, 1)",
    "(unique, 0x13400, 1) INT_AND (unique, 0x55980, 1) , (const, 0xff, 1)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 1)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x241, 8) , (register, 0x206, 1)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffff98, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x241, 8)",
    " ---  CALL (ram, 0x50f8, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffa0, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0xc000, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(unique, 0x55980, 1) INT_AND (unique, 0xc000, 1) , (const, 0x1, 1)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x55980, 1) , (const, 0x0, 1)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x55980, 1) , (const, 0x0, 1)",
    "(unique, 0x13400, 1) INT_AND (unique, 0x55980, 1) , (const, 0xff, 1)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 1)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x250, 8) , (register, 0x206, 1)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffb0, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x250, 8)",
    " ---  CALL (ram, 0x50f8, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffc0, 8)",
    "(unique, 0x5680, 1) COPY (const, 0x4, 1)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5680, 1)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffc1, 8)",
    "(unique, 0x5700, 2) COPY (const, 0x6261, 2)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5700, 2)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffc3, 8)",
    "(unique, 0x5680, 1) COPY (const, 0x0, 1)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5680, 1)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffb8, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x30, 8) COPY (register, 0x18, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffc0, 8)",
    "(register, 0x10, 8) COPY (unique, 0x3100, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x26e, 8)",
    " ---  CALL (ram, 0x5060, 8)",
    "(register, 0xa8, 4) COPY (register, 0x0, 4)",
    "(register, 0xa8, 8) INT_ZEXT (register, 0xa8, 4)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffc0, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0xc000, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(unique, 0x55980, 1) INT_AND (unique, 0xc000, 1) , (const, 0x1, 1)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x55980, 1) , (const, 0x0, 1)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x55980, 1) , (const, 0x0, 1)",
    "(unique, 0x13400, 1) INT_AND (unique, 0x55980, 1) , (const, 0xff, 1)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 1)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x280, 8) , (register, 0x206, 1)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffd0, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x280, 8)",
    " ---  CALL (ram, 0x50f8, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x55d80, 1) INT_AND (register, 0xa8, 1) , (register, 0xa8, 1)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x55d80, 1) , (const, 0x0, 1)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x55d80, 1) , (const, 0x0, 1)",
    "(unique, 0x13400, 1) INT_AND (unique, 0x55d80, 1) , (const, 0xff, 1)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 1)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x327, 8) , (register, 0x206, 1)",
    "(unique, 0x3100, 8) INT_ADD (register, 0xb0, 8) , (const, 0x4, 8)",
    "(unique, 0xc180, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x38, 4) COPY (unique, 0xc180, 4)",
    "(register, 0x38, 8) INT_ZEXT (register, 0x38, 4)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x292, 8)",
    " ---  CALL (ram, 0x5048, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0xb8, 4) , (const, 0x1, 4)",
    "(register, 0xb8, 4) INT_ADD (register, 0xb8, 4) , (const, 0x1, 4)",
    "(register, 0xb8, 8) INT_ZEXT (register, 0xb8, 4)",
    "(register, 0x207, 1) INT_SLESS (register, 0xb8, 4) , (const, 0x0, 4)",
    "(register, 0x206, 1) INT_EQUAL (register, 0xb8, 4) , (const, 0x0, 4)",
    "(unique, 0x13400, 4) INT_AND (register, 0xb8, 4) , (const, 0xff, 4)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 4)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0x5480, 4) LOAD (const, 0x1b1, 4) , (register, 0xb0, 8)",
    "(register, 0x200, 1) INT_LESS (register, 0xb8, 4) , (unique, 0x5480, 4)",
    "(unique, 0x5480, 4) LOAD (const, 0x1b1, 4) , (register, 0xb0, 8)",
    "(register, 0x20b, 1) INT_SBORROW (register, 0xb8, 4) , (unique, 0x5480, 4)",
    "(unique, 0x5480, 4) LOAD (const, 0x1b1, 4) , (register, 0xb0, 8)",
    "(unique, 0x26080, 4) INT_SUB (register, 0xb8, 4) , (unique, 0x5480, 4)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x26080, 4) , (const, 0x0, 4)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x26080, 4) , (const, 0x0, 4)",
    "(unique, 0x13400, 4) INT_AND (unique, 0x26080, 4) , (const, 0xff, 4)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 4)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0xd100, 1) INT_NOTEQUAL (register, 0x20b, 1) , (register, 0x207, 1)",
    " ---  CBRANCH (ram, 0x210, 8) , (unique, 0xd100, 1)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffff50, 8)",
    "(register, 0x18, 8) COPY (unique, 0x3200, 8)",
    "(register, 0x38, 8) COPY (register, 0x18, 8)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffff68, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8)",
    "(register, 0x30, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x2b4, 8)",
    " ---  CALL (ram, 0x5040, 8)",
    "(register, 0x10, 8) COPY (const, 0x2d4a, 8)",
    "(register, 0x38, 8) COPY (register, 0x18, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(register, 0x30, 4) INT_XOR (register, 0x30, 4) , (register, 0x30, 4)",
    "(register, 0x30, 8) INT_ZEXT (register, 0x30, 4)",
    "(register, 0x207, 1) INT_SLESS (register, 0x30, 4) , (const, 0x0, 4)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x0, 4)",
    "(unique, 0x13400, 4) INT_AND (register, 0x30, 4) , (const, 0xff, 4)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 4)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x2c5, 8)",
    " ---  CALL (ram, 0x50a0, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x10, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x8, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffff80, 8)",
    "(unique, 0x5500, 8) COPY (register, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5500, 8)",
    "(unique, 0x5580, 16) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)",
    "(unique, 0x7c980, 16) COPY (unique, 0x5580, 16)",
    "(register, 0x1200, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0x0, 4)",
    "(register, 0x1204, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0x4, 4)",
    "(register, 0x1208, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0x8, 4)",
    "(register, 0x120c, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0xc, 4)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffff70, 8)",
    "(unique, 0x5580, 16) COPY (register, 0x1200, 16)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (unique, 0x5580, 16)",
    "(register, 0x1200, 4) INT_XOR (register, 0x1200, 4) , (register, 0x1200, 4)",
    "(register, 0x1204, 4) INT_XOR (register, 0x1204, 4) , (register, 0x1204, 4)",
    "(register, 0x1208, 4) INT_XOR (register, 0x1208, 4) , (register, 0x1208, 4)",
    "(register, 0x120c, 4) INT_XOR (register, 0x120c, 4) , (register, 0x120c, 4)",
    "(unique, 0x5580, 16) COPY (register, 0x1200, 16)",
    " ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (unique, 0x5580, 16)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x10, 8)",
    "(unique, 0x5800, 8) COPY (const, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5800, 8)",
    "(register, 0x30, 8) COPY (const, 0x2d5f, 8)",
    "(unique, 0x3200, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffff70, 8)",
    "(register, 0x38, 8) COPY (unique, 0x3200, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x2f8, 8)",
    " ---  CALL (ram, 0x5090, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x10, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x8, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffd0, 8)",
    "(unique, 0x5500, 8) COPY (register, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5500, 8)",
    "(unique, 0x5580, 16) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)",
    "(unique, 0x7c980, 16) COPY (unique, 0x5580, 16)",
    "(register, 0x1200, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0x0, 4)",
    "(register, 0x1204, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0x4, 4)",
    "(register, 0x1208, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0x8, 4)",
    "(register, 0x120c, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0xc, 4)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffc0, 8)",
    "(unique, 0x5580, 16) COPY (register, 0x1200, 16)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5580, 16)",
    "(register, 0x1200, 4) INT_XOR (register, 0x1200, 4) , (register, 0x1200, 4)",
    "(register, 0x1204, 4) INT_XOR (register, 0x1204, 4) , (register, 0x1204, 4)",
    "(register, 0x1208, 4) INT_XOR (register, 0x1208, 4) , (register, 0x1208, 4)",
    "(register, 0x120c, 4) INT_XOR (register, 0x120c, 4) , (register, 0x120c, 4)",
    "(unique, 0x5580, 16) COPY (register, 0x1200, 16)",
    " ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (unique, 0x5580, 16)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x10, 8)",
    "(unique, 0x5800, 8) COPY (const, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5800, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x31a, 8)",
    " ---  CALL (ram, 0x5128, 8)",
    "(unique, 0xc180, 4) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)",
    "(register, 0x30, 4) COPY (unique, 0xc180, 4)",
    "(register, 0x30, 8) INT_ZEXT (register, 0x30, 4)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffc0, 8)",
    "(register, 0x38, 8) COPY (unique, 0x3100, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x325, 8)",
    " ---  CALL (ram, 0x5018, 8)",
    " ---  CALLOTHER (const, 0x4d, 4)",
    " ---  BRANCH (ram, 0x325, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x88, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x88, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x88, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0xa0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0xa8, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0xb0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0xb8, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  RETURN (register, 0x288, 8)"
  ],
  "__ZN6spdlog7details11file_helper5flushEv": [
    "(unique, 0xef80, 8) COPY (register, 0x28, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x28, 8) COPY (register, 0x20, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x38, 8) , (const, 0x8, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  BRANCH (ram, 0x5150, 8)"
  ],
  "_memmove": [],
  "__ZN6spdlog7details11file_helper5closeEv": [
    "(unique, 0xef80, 8) COPY (register, 0x28, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x28, 8) COPY (register, 0x20, 8)",
    "(unique, 0xef80, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0x0, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x18, 8) COPY (register, 0x38, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x38, 8) , (const, 0x8, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x56080, 8) INT_AND (register, 0x38, 8) , (register, 0x38, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x56080, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x5f, 8) , (register, 0x206, 1)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x57, 8)",
    " ---  CALL (ram, 0x5148, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x8, 8)",
    "(unique, 0x5800, 8) COPY (const, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5800, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  RETURN (register, 0x288, 8)"
  ],
  "__ZN6spdlog5sinks18rotating_file_sinkINS_7details10null_mutexEE13calc_filenameERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEEm": [
    "(unique, 0xef80, 8) COPY (register, 0x28, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x28, 8) COPY (register, 0x20, 8)",
    "(unique, 0xef80, 8) COPY (register, 0xb0, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x200, 1) INT_LESS (register, 0x20, 8) , (const, 0x70, 8)",
    "(register, 0x20b, 1) INT_SBORROW (register, 0x20, 8) , (const, 0x70, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x70, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x18, 8) COPY (register, 0x38, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x56080, 8) INT_AND (register, 0x10, 8) , (register, 0x10, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x56080, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x16ce, 8) , (register, 0x206, 1)",
    "(register, 0xb0, 8) COPY (register, 0x10, 8)",
    "(register, 0x1200, 4) INT_XOR (register, 0x1200, 4) , (register, 0x1200, 4)",
    "(register, 0x1204, 4) INT_XOR (register, 0x1204, 4) , (register, 0x1204, 4)",
    "(register, 0x1208, 4) INT_XOR (register, 0x1208, 4) , (register, 0x1208, 4)",
    "(register, 0x120c, 4) INT_XOR (register, 0x120c, 4) , (register, 0x120c, 4)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffd0, 8)",
    "(unique, 0x5580, 16) COPY (register, 0x1200, 16)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5580, 16)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffe0, 8)",
    "(unique, 0x5800, 8) COPY (const, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5800, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffff80, 8)",
    "(register, 0x38, 8) COPY (unique, 0x3100, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x168e, 8)",
    " ---  CALL (ram, 0x680, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffff90, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x0, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffe0, 8)",
    "(unique, 0x5500, 8) COPY (register, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5500, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffff80, 8)",
    "(unique, 0x5580, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(unique, 0x7c980, 16) COPY (unique, 0x5580, 16)",
    "(register, 0x1200, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0x0, 4)",
    "(register, 0x1204, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0x4, 4)",
    "(register, 0x1208, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0x8, 4)",
    "(register, 0x120c, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0xc, 4)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffd0, 8)",
    "(unique, 0x5580, 16) COPY (register, 0x1200, 16)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5580, 16)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffff98, 8)",
    "(unique, 0x5580, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(unique, 0x7c980, 16) COPY (unique, 0x5580, 16)",
    "(register, 0x1200, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0x0, 4)",
    "(register, 0x1204, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0x4, 4)",
    "(register, 0x1208, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0x8, 4)",
    "(register, 0x120c, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0xc, 4)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffb0, 8)",
    "(unique, 0x5580, 16) COPY (register, 0x1200, 16)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5580, 16)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffa8, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x8, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffc0, 8)",
    "(unique, 0x5500, 8) COPY (register, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5500, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffd0, 8)",
    "(unique, 0xc000, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x10, 4) INT_ZEXT (unique, 0xc000, 1)",
    "(register, 0x10, 8) INT_ZEXT (register, 0x10, 4)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x55980, 1) INT_AND (register, 0x10, 1) , (const, 0x1, 1)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x55980, 1) , (const, 0x0, 1)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x55980, 1) , (const, 0x0, 1)",
    "(unique, 0x13400, 1) INT_AND (unique, 0x55980, 1) , (const, 0xff, 1)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 1)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x16d8, 8) , (register, 0x206, 1)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffd8, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x10, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffb0, 8)",
    "(unique, 0xc000, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x30, 4) INT_ZEXT (unique, 0xc000, 1)",
    "(register, 0x30, 8) INT_ZEXT (register, 0x30, 4)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x55980, 1) INT_AND (register, 0x30, 1) , (const, 0x1, 1)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x55980, 1) , (const, 0x0, 1)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x55980, 1) , (const, 0x0, 1)",
    "(unique, 0x13400, 1) INT_AND (unique, 0x55980, 1) , (const, 0xff, 1)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 1)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0xcb80, 1) BOOL_NEGATE (register, 0x206, 1)",
    " ---  CBRANCH (ram, 0x16e9, 8) , (unique, 0xcb80, 1)",
    "(unique, 0x54200, 8) INT_AND (register, 0x30, 8) , (const, 0x1, 8)",
    "(register, 0x200, 1) INT_NOTEQUAL (unique, 0x54200, 8) , (const, 0x0, 8)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(register, 0x30, 8) INT_RIGHT (register, 0x30, 8) , (const, 0x1, 4)",
    "(register, 0x207, 1) INT_SLESS (register, 0x30, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x30, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x30, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffb1, 8)",
    "(register, 0x8, 8) COPY (unique, 0x3100, 8)",
    " ---  BRANCH (ram, 0x16ed, 8)",
    "(register, 0x38, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x16d6, 8)",
    " ---  CALL (ram, 0x50a8, 8)",
    " ---  BRANCH (ram, 0x173c, 8)",
    "(unique, 0x54200, 8) INT_AND (register, 0x10, 8) , (const, 0x1, 8)",
    "(register, 0x200, 1) INT_NOTEQUAL (unique, 0x54200, 8) , (const, 0x0, 8)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(register, 0x10, 8) INT_RIGHT (register, 0x10, 8) , (const, 0x1, 4)",
    "(register, 0x207, 1) INT_SLESS (register, 0x10, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x10, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x10, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffd1, 8)",
    "(register, 0x0, 8) COPY (unique, 0x3100, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffb0, 8)",
    "(unique, 0xc000, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x30, 4) INT_ZEXT (unique, 0xc000, 1)",
    "(register, 0x30, 8) INT_ZEXT (register, 0x30, 4)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x55980, 1) INT_AND (register, 0x30, 1) , (const, 0x1, 1)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x55980, 1) , (const, 0x0, 1)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x55980, 1) , (const, 0x0, 1)",
    "(unique, 0x13400, 1) INT_AND (unique, 0x55980, 1) , (const, 0xff, 1)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 1)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x16c5, 8) , (register, 0x206, 1)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffb8, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x30, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffff80, 8)",
    "(unique, 0x5500, 8) COPY (register, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5500, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffff88, 8)",
    "(unique, 0x5500, 8) COPY (register, 0x10, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5500, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffff90, 8)",
    "(unique, 0x5500, 8) COPY (register, 0xb0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5500, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffa0, 8)",
    "(unique, 0x5500, 8) COPY (register, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5500, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffa8, 8)",
    "(unique, 0x5500, 8) COPY (register, 0x30, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5500, 8)",
    "(register, 0x30, 8) COPY (const, 0x2dd5, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffff80, 8)",
    "(register, 0x80, 8) COPY (unique, 0x3100, 8)",
    "(register, 0x10, 8) COPY (const, 0x7, 8)",
    "(register, 0x8, 8) COPY (const, 0xd4d, 8)",
    "(register, 0x38, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x171e, 8)",
    " ---  CALL (ram, 0x5008, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffb0, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0xc000, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(unique, 0x55980, 1) INT_AND (unique, 0xc000, 1) , (const, 0x1, 1)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x55980, 1) , (const, 0x0, 1)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x55980, 1) , (const, 0x0, 1)",
    "(unique, 0x13400, 1) INT_AND (unique, 0x55980, 1) , (const, 0xff, 1)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 1)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x172d, 8) , (register, 0x206, 1)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffc0, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x172d, 8)",
    " ---  CALL (ram, 0x50f8, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffd0, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0xc000, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(unique, 0x55980, 1) INT_AND (unique, 0xc000, 1) , (const, 0x1, 1)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x55980, 1) , (const, 0x0, 1)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x55980, 1) , (const, 0x0, 1)",
    "(unique, 0x13400, 1) INT_AND (unique, 0x55980, 1) , (const, 0xff, 1)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 1)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x173c, 8) , (register, 0x206, 1)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffe0, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x173c, 8)",
    " ---  CALL (ram, 0x50f8, 8)",
    "(register, 0x0, 8) COPY (register, 0x18, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x70, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x70, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x70, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0xb0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  RETURN (register, 0x288, 8)"
  ],
  "__ZNSt3__15mutexD1Ev": [],
  "__ZN6spdlog5sinks9base_sinkINSt3__15mutexEED2Ev": [
    "(unique, 0xef80, 8) COPY (register, 0x28, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x28, 8) COPY (register, 0x20, 8)",
    "(unique, 0xef80, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0x0, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x18, 8) COPY (register, 0x38, 8)",
    "(register, 0x0, 8) COPY (ram, 0x3038, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0x0, 8) , (const, 0x10, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x0, 8) , (const, 0x10, 8)",
    "(register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x10, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x0, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x0, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0x5500, 8) COPY (register, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (unique, 0x5500, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0x38, 8) , (const, 0x18, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x38, 8) , (const, 0x18, 8)",
    "(register, 0x38, 8) INT_ADD (register, 0x38, 8) , (const, 0x18, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x38, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x38, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x38, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x8f0, 8)",
    " ---  CALL (ram, 0x50d0, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x10, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x10, 8)",
    "(unique, 0x5800, 8) COPY (const, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5800, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x56080, 8) INT_AND (register, 0x38, 8) , (register, 0x38, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x56080, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x90d, 8) , (register, 0x206, 1)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)",
    "(register, 0x0, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x8, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    " ---  BRANCHIND (unique, 0xc280, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  RETURN (register, 0x288, 8)"
  ],
  "__ZN6spdlog7details11make_uniqueINS_17pattern_formatterEJRKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEEENS3_10unique_ptrIT_NS3_14default_deleteISD_EEEEDpOT0_": [
    "(unique, 0xef80, 8) COPY (register, 0x28, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x28, 8) COPY (register, 0x20, 8)",
    "(unique, 0xef80, 8) COPY (register, 0xb8, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0xb0, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x200, 1) INT_LESS (register, 0x20, 8) , (const, 0x58, 8)",
    "(register, 0x20b, 1) INT_SBORROW (register, 0x20, 8) , (const, 0x58, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x58, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0xb8, 8) COPY (register, 0x30, 8)",
    "(register, 0x18, 8) COPY (register, 0x38, 8)",
    "(register, 0x38, 8) COPY (const, 0xc0, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x28ad, 8)",
    " ---  CALL (ram, 0x5100, 8)",
    "(register, 0xb0, 8) COPY (register, 0x0, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffb8, 8)",
    "(register, 0x38, 8) COPY (unique, 0x3100, 8)",
    "(register, 0x30, 8) COPY (register, 0xb8, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x28bc, 8)",
    " ---  CALL (ram, 0x50a8, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffd0, 8)",
    "(unique, 0x5700, 2) COPY (const, 0xa02, 2)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5700, 2)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffd2, 8)",
    "(unique, 0x5680, 1) COPY (const, 0x0, 1)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5680, 1)",
    "(register, 0x1200, 4) INT_XOR (register, 0x1200, 4) , (register, 0x1200, 4)",
    "(register, 0x1204, 4) INT_XOR (register, 0x1204, 4) , (register, 0x1204, 4)",
    "(register, 0x1208, 4) INT_XOR (register, 0x1208, 4) , (register, 0x1208, 4)",
    "(register, 0x120c, 4) INT_XOR (register, 0x120c, 4) , (register, 0x120c, 4)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffff90, 8)",
    "(unique, 0x5580, 16) COPY (register, 0x1200, 16)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5580, 16)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffa0, 8)",
    "(unique, 0x5580, 16) COPY (register, 0x1200, 16)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5580, 16)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffb0, 8)",
    "(unique, 0x5780, 4) COPY (const, 0x3f800000, 4)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5780, 4)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffb8, 8)",
    "(register, 0x30, 8) COPY (unique, 0x3100, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffd0, 8)",
    "(register, 0x8, 8) COPY (unique, 0x3100, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffff90, 8)",
    "(register, 0x80, 8) COPY (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (register, 0xb0, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(register, 0x10, 4) INT_XOR (register, 0x10, 4) , (register, 0x10, 4)",
    "(register, 0x10, 8) INT_ZEXT (register, 0x10, 4)",
    "(register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)",
    "(unique, 0x13400, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 4)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x28ee, 8)",
    " ---  CALL (ram, 0x5028, 8)",
    "(unique, 0x5500, 8) COPY (register, 0xb0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (register, 0x18, 8) , (unique, 0x5500, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffa0, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0xb0, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x56080, 8) INT_AND (register, 0xb0, 8) , (register, 0xb0, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x56080, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0xcb80, 1) BOOL_NEGATE (register, 0x206, 1)",
    " ---  CBRANCH (ram, 0x2950, 8) , (unique, 0xcb80, 1)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffff90, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffff90, 8)",
    "(unique, 0x5800, 8) COPY (const, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5800, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x56080, 8) INT_AND (register, 0x38, 8) , (register, 0x38, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x56080, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x2910, 8) , (register, 0x206, 1)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x2910, 8)",
    " ---  CALL (ram, 0x50f8, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffd0, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0xc000, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(unique, 0x55980, 1) INT_AND (unique, 0xc000, 1) , (const, 0x1, 1)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x55980, 1) , (const, 0x0, 1)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x55980, 1) , (const, 0x0, 1)",
    "(unique, 0x13400, 1) INT_AND (unique, 0x55980, 1) , (const, 0xff, 1)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 1)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x291f, 8) , (register, 0x206, 1)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffe0, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x291f, 8)",
    " ---  CALL (ram, 0x50f8, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffb8, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0xc000, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(unique, 0x55980, 1) INT_AND (unique, 0xc000, 1) , (const, 0x1, 1)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x55980, 1) , (const, 0x0, 1)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x55980, 1) , (const, 0x0, 1)",
    "(unique, 0x13400, 1) INT_AND (unique, 0x55980, 1) , (const, 0xff, 1)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 1)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x292e, 8) , (register, 0x206, 1)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffc8, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x292e, 8)",
    " ---  CALL (ram, 0x50f8, 8)",
    "(register, 0x0, 8) COPY (register, 0x18, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x58, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x58, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x58, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0xb0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0xb8, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  RETURN (register, 0x288, 8)",
    "(register, 0x38, 8) COPY (register, 0xb0, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x2948, 8)",
    " ---  CALL (ram, 0x50f8, 8)",
    "(register, 0xb0, 8) COPY (register, 0xb8, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x56080, 8) INT_AND (register, 0xb8, 8) , (register, 0xb8, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x56080, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x28fa, 8) , (register, 0x206, 1)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (register, 0xb0, 8)",
    "(register, 0xb8, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0xb0, 8) , (const, 0x18, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0xb0, 8) , (const, 0x18, 8)",
    "(unique, 0x5800, 8) COPY (const, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5800, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x56080, 8) INT_AND (register, 0x38, 8) , (register, 0x38, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x56080, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x2940, 8) , (register, 0x206, 1)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)",
    "(register, 0x0, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x8, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(unique, 0x23d80, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x296a, 8)",
    " ---  CALLIND (unique, 0x23d80, 8)",
    " ---  BRANCH (ram, 0x2940, 8)"
  ],
  "__ZN6spdlog7details2os10create_dirENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE": [],
  "__ZN6spdlog7details11file_helper5writeERKN3fmt2v819basic_memory_bufferIcLm250ENSt3__19allocatorIcEEEE": [
    "(unique, 0xef80, 8) COPY (register, 0x28, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x28, 8) COPY (register, 0x20, 8)",
    "(unique, 0xef80, 8) COPY (register, 0xb0, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x200, 1) INT_LESS (register, 0x20, 8) , (const, 0x40, 8)",
    "(register, 0x20b, 1) INT_SBORROW (register, 0x20, 8) , (const, 0x40, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x40, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x18, 8) COPY (register, 0x38, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x30, 8) , (const, 0x8, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x30, 8) , (const, 0x10, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0xb0, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x8, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x8, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x30, 8) COPY (const, 0x1, 8)",
    "(register, 0x10, 8) COPY (register, 0xb0, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x517, 8)",
    " ---  CALL (ram, 0x5158, 8)",
    "(register, 0x200, 1) INT_LESS (register, 0x0, 8) , (register, 0xb0, 8)",
    "(register, 0x20b, 1) INT_SBORROW (register, 0x0, 8) , (register, 0xb0, 8)",
    "(unique, 0x25c80, 8) INT_SUB (register, 0x0, 8) , (register, 0xb0, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x25c80, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x25c80, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x25c80, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0xcb80, 1) BOOL_NEGATE (register, 0x206, 1)",
    " ---  CBRANCH (ram, 0x525, 8) , (unique, 0xcb80, 1)",
    "(register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x40, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x40, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x40, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0xb0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  RETURN (register, 0x288, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0x18, 8) , (const, 0x10, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x18, 8) , (const, 0x10, 8)",
    "(register, 0x18, 8) INT_ADD (register, 0x18, 8) , (const, 0x10, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x18, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x18, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x18, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffb8, 8)",
    "(register, 0xb0, 8) COPY (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (register, 0xb0, 8)",
    "(register, 0x30, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x538, 8)",
    " ---  CALL (ram, 0x5040, 8)",
    "(register, 0x10, 8) COPY (const, 0x2d9b, 8)",
    "(register, 0x38, 8) COPY (register, 0xb0, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(register, 0x30, 4) INT_XOR (register, 0x30, 4) , (register, 0x30, 4)",
    "(register, 0x30, 8) INT_ZEXT (register, 0x30, 4)",
    "(register, 0x207, 1) INT_SLESS (register, 0x30, 4) , (const, 0x0, 4)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x0, 4)",
    "(unique, 0x13400, 4) INT_AND (register, 0x30, 4) , (const, 0xff, 4)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 4)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x549, 8)",
    " ---  CALL (ram, 0x50a0, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x10, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x8, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffe0, 8)",
    "(unique, 0x5500, 8) COPY (register, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5500, 8)",
    "(unique, 0x5580, 16) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)",
    "(unique, 0x7c980, 16) COPY (unique, 0x5580, 16)",
    "(register, 0x1200, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0x0, 4)",
    "(register, 0x1204, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0x4, 4)",
    "(register, 0x1208, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0x8, 4)",
    "(register, 0x120c, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0xc, 4)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffd0, 8)",
    "(unique, 0x5580, 16) COPY (register, 0x1200, 16)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5580, 16)",
    "(register, 0x1200, 4) INT_XOR (register, 0x1200, 4) , (register, 0x1200, 4)",
    "(register, 0x1204, 4) INT_XOR (register, 0x1204, 4) , (register, 0x1204, 4)",
    "(register, 0x1208, 4) INT_XOR (register, 0x1208, 4) , (register, 0x1208, 4)",
    "(register, 0x120c, 4) INT_XOR (register, 0x120c, 4) , (register, 0x120c, 4)",
    "(unique, 0x5580, 16) COPY (register, 0x1200, 16)",
    " ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (unique, 0x5580, 16)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x10, 8)",
    "(unique, 0x5800, 8) COPY (const, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5800, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x56b, 8)",
    " ---  CALL (ram, 0x5128, 8)",
    "(unique, 0xc180, 4) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)",
    "(register, 0x30, 4) COPY (unique, 0xc180, 4)",
    "(register, 0x30, 8) INT_ZEXT (register, 0x30, 4)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffd0, 8)",
    "(register, 0x38, 8) COPY (unique, 0x3100, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x576, 8)",
    " ---  CALL (ram, 0x5018, 8)",
    " ---  CALLOTHER (const, 0x4d, 4)",
    " ---  BRANCH (ram, 0x576, 8)"
  ],
  "__ZN3fmt2v819basic_memory_bufferIcLm250ENSt3__19allocatorIcEEE4growEm": [
    "(unique, 0xef80, 8) COPY (register, 0x28, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x28, 8) COPY (register, 0x20, 8)",
    "(unique, 0xef80, 8) COPY (register, 0xb8, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0xb0, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0x0, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0xb0, 8) COPY (register, 0x38, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x38, 8) , (const, 0x8, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x18, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x38, 8) , (const, 0x18, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x0, 8) COPY (unique, 0xc280, 8)",
    "(register, 0xb8, 8) COPY (register, 0x0, 8)",
    "(unique, 0x54200, 8) INT_AND (register, 0xb8, 8) , (const, 0x1, 8)",
    "(register, 0x200, 1) INT_NOTEQUAL (unique, 0x54200, 8) , (const, 0x0, 8)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(register, 0xb8, 8) INT_RIGHT (register, 0xb8, 8) , (const, 0x1, 4)",
    "(register, 0x207, 1) INT_SLESS (register, 0xb8, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0xb8, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0xb8, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x200, 1) INT_CARRY (register, 0xb8, 8) , (register, 0x0, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0xb8, 8) , (register, 0x0, 8)",
    "(register, 0xb8, 8) INT_ADD (register, 0xb8, 8) , (register, 0x0, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0xb8, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0xb8, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0xb8, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x200, 1) INT_LESS (register, 0xb8, 8) , (register, 0x30, 8)",
    "(register, 0x20b, 1) INT_SBORROW (register, 0xb8, 8) , (register, 0x30, 8)",
    "(unique, 0x25c80, 8) INT_SUB (register, 0xb8, 8) , (register, 0x30, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x25c80, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x25c80, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x25c80, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0xcc80, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)",
    "(unique, 0x24d80, 1) BOOL_NEGATE (unique, 0xcc80, 1)",
    " ---  CBRANCH (ram, 0x2655, 8) , (unique, 0x24d80, 1)",
    "(register, 0xb8, 8) COPY (register, 0x30, 8)",
    "(register, 0x38, 8) COPY (register, 0xb8, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x265d, 8)",
    " ---  CALL (ram, 0x5100, 8)",
    "(register, 0x8, 8) COPY (register, 0x0, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0xb0, 8) , (const, 0x10, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x10, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x56080, 8) INT_AND (register, 0x10, 8) , (register, 0x10, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x56080, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x2857, 8) , (register, 0x206, 1)",
    "(register, 0x30, 8) COPY (register, 0x18, 8)",
    "(register, 0x200, 1) INT_LESS (register, 0x10, 8) , (const, 0x8, 8)",
    "(register, 0x20b, 1) INT_SBORROW (register, 0x10, 8) , (const, 0x8, 8)",
    "(unique, 0x25880, 8) INT_SUB (register, 0x10, 8) , (const, 0x8, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x25880, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x25880, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x25880, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x27b2, 8) , (register, 0x200, 1)",
    "(register, 0x38, 8) COPY (register, 0x0, 8)",
    "(register, 0x200, 1) INT_LESS (register, 0x38, 8) , (register, 0x18, 8)",
    "(register, 0x20b, 1) INT_SBORROW (register, 0x38, 8) , (register, 0x18, 8)",
    "(register, 0x38, 8) INT_SUB (register, 0x38, 8) , (register, 0x18, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x38, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x38, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x38, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x30, 8) COPY (register, 0x18, 8)",
    "(register, 0x200, 1) INT_LESS (register, 0x38, 8) , (const, 0x20, 8)",
    "(register, 0x20b, 1) INT_SBORROW (register, 0x38, 8) , (const, 0x20, 8)",
    "(unique, 0x25880, 8) INT_SUB (register, 0x38, 8) , (const, 0x20, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x25880, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x25880, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x25880, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x27b2, 8) , (register, 0x200, 1)",
    "(register, 0x200, 1) INT_LESS (register, 0x10, 8) , (const, 0x20, 8)",
    "(register, 0x20b, 1) INT_SBORROW (register, 0x10, 8) , (const, 0x20, 8)",
    "(unique, 0x25880, 8) INT_SUB (register, 0x10, 8) , (const, 0x20, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x25880, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x25880, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x25880, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0xca80, 1) BOOL_NEGATE (register, 0x200, 1)",
    " ---  CBRANCH (ram, 0x269a, 8) , (unique, 0xca80, 1)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(register, 0x38, 4) INT_XOR (register, 0x38, 4) , (register, 0x38, 4)",
    "(register, 0x38, 8) INT_ZEXT (register, 0x38, 4)",
    "(register, 0x207, 1) INT_SLESS (register, 0x38, 4) , (const, 0x0, 4)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x38, 4) , (const, 0x0, 4)",
    "(unique, 0x13400, 4) INT_AND (register, 0x38, 4) , (const, 0xff, 4)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 4)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  BRANCH (ram, 0x277d, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x10, 8) , (const, 0xffffffffffffffe0, 8)",
    "(register, 0x80, 8) COPY (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (register, 0x80, 8)",
    "(unique, 0x54600, 4) INT_AND (const, 0x5, 4) , (const, 0x3f, 4)",
    "(unique, 0x54680, 8) COPY (register, 0x38, 8)",
    "(register, 0x38, 8) INT_RIGHT (register, 0x38, 8) , (unique, 0x54600, 4)",
    "(unique, 0x16900, 1) INT_NOTEQUAL (unique, 0x54600, 4) , (const, 0x0, 4)",
    "(unique, 0x16980, 4) INT_SUB (unique, 0x54600, 4) , (const, 0x1, 4)",
    "(unique, 0x16a00, 8) INT_RIGHT (unique, 0x54680, 8) , (unique, 0x16980, 4)",
    "(unique, 0x16a80, 8) INT_AND (unique, 0x16a00, 8) , (const, 0x1, 8)",
    "(unique, 0x16b80, 1) INT_NOTEQUAL (unique, 0x16a80, 8) , (const, 0x0, 8)",
    "(unique, 0x16c00, 1) BOOL_NEGATE (unique, 0x16900, 1)",
    "(unique, 0x16c80, 1) INT_AND (unique, 0x16c00, 1) , (register, 0x200, 1)",
    "(unique, 0x16d00, 1) INT_AND (unique, 0x16900, 1) , (unique, 0x16b80, 1)",
    "(register, 0x200, 1) INT_OR (unique, 0x16c80, 1) , (unique, 0x16d00, 1)",
    "(unique, 0x16e80, 1) INT_EQUAL (unique, 0x54600, 4) , (const, 0x1, 4)",
    "(unique, 0x16f80, 1) INT_SLESS (unique, 0x54680, 8) , (const, 0x0, 8)",
    "(unique, 0x17000, 1) BOOL_NEGATE (unique, 0x16e80, 1)",
    "(unique, 0x17080, 1) INT_AND (unique, 0x17000, 1) , (register, 0x20b, 1)",
    "(unique, 0x17100, 1) INT_AND (unique, 0x16e80, 1) , (unique, 0x16f80, 1)",
    "(register, 0x20b, 1) INT_OR (unique, 0x17080, 1) , (unique, 0x17100, 1)",
    "(unique, 0x13680, 1) INT_NOTEQUAL (unique, 0x54600, 4) , (const, 0x0, 4)",
    "(unique, 0x13780, 1) INT_SLESS (register, 0x38, 8) , (const, 0x0, 8)",
    "(unique, 0x13800, 1) BOOL_NEGATE (unique, 0x13680, 1)",
    "(unique, 0x13880, 1) INT_AND (unique, 0x13800, 1) , (register, 0x207, 1)",
    "(unique, 0x13900, 1) INT_AND (unique, 0x13680, 1) , (unique, 0x13780, 1)",
    "(register, 0x207, 1) INT_OR (unique, 0x13880, 1) , (unique, 0x13900, 1)",
    "(unique, 0x13a80, 1) INT_EQUAL (register, 0x38, 8) , (const, 0x0, 8)",
    "(unique, 0x13b00, 1) BOOL_NEGATE (unique, 0x13680, 1)",
    "(unique, 0x13b80, 1) INT_AND (unique, 0x13b00, 1) , (register, 0x206, 1)",
    "(unique, 0x13c00, 1) INT_AND (unique, 0x13680, 1) , (unique, 0x13a80, 1)",
    "(register, 0x206, 1) INT_OR (unique, 0x13b80, 1) , (unique, 0x13c00, 1)",
    "(unique, 0x13d00, 8) INT_AND (register, 0x38, 8) , (const, 0xff, 8)",
    "(unique, 0x13d80, 1) POPCOUNT (unique, 0x13d00, 8)",
    "(unique, 0x13e00, 1) INT_AND (unique, 0x13d80, 1) , (const, 0x1, 1)",
    "(unique, 0x13f00, 1) INT_EQUAL (unique, 0x13e00, 1) , (const, 0x0, 1)",
    "(unique, 0x13f80, 1) BOOL_NEGATE (unique, 0x13680, 1)",
    "(unique, 0x14000, 1) INT_AND (unique, 0x13f80, 1) , (register, 0x202, 1)",
    "(unique, 0x14080, 1) INT_AND (unique, 0x13680, 1) , (unique, 0x13f00, 1)",
    "(register, 0x202, 1) INT_OR (unique, 0x14000, 1) , (unique, 0x14080, 1)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x38, 8) , (const, 0x1, 8)",
    "(register, 0x38, 8) INT_ADD (register, 0x38, 8) , (const, 0x1, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x38, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x38, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x38, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x30, 4) COPY (register, 0x38, 4)",
    "(register, 0x30, 8) INT_ZEXT (register, 0x30, 4)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(register, 0x30, 4) INT_AND (register, 0x30, 4) , (const, 0x3, 4)",
    "(register, 0x30, 8) INT_ZEXT (register, 0x30, 4)",
    "(register, 0x207, 1) INT_SLESS (register, 0x30, 4) , (const, 0x0, 4)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x0, 4)",
    "(unique, 0x13400, 4) INT_AND (register, 0x30, 4) , (const, 0xff, 4)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 4)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x200, 1) INT_LESS (register, 0x80, 8) , (const, 0x60, 8)",
    "(register, 0x20b, 1) INT_SBORROW (register, 0x80, 8) , (const, 0x60, 8)",
    "(unique, 0x25880, 8) INT_SUB (register, 0x80, 8) , (const, 0x60, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x25880, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x25880, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x25880, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0xca80, 1) BOOL_NEGATE (register, 0x200, 1)",
    " ---  CBRANCH (ram, 0x26b8, 8) , (unique, 0xca80, 1)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(register, 0x80, 4) INT_XOR (register, 0x80, 4) , (register, 0x80, 4)",
    "(register, 0x80, 8) INT_ZEXT (register, 0x80, 4)",
    "(register, 0x207, 1) INT_SLESS (register, 0x80, 4) , (const, 0x0, 4)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x80, 4) , (const, 0x0, 4)",
    "(unique, 0x13400, 4) INT_AND (register, 0x80, 4) , (const, 0xff, 4)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 4)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  BRANCH (ram, 0x2728, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(register, 0x38, 8) INT_AND (register, 0x38, 8) , (const, 0xfffffffffffffffc, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x38, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x38, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x38, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(register, 0x80, 4) INT_XOR (register, 0x80, 4) , (register, 0x80, 4)",
    "(register, 0x80, 8) INT_ZEXT (register, 0x80, 4)",
    "(register, 0x207, 1) INT_SLESS (register, 0x80, 4) , (const, 0x0, 4)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x80, 4) , (const, 0x0, 4)",
    "(unique, 0x13400, 4) INT_AND (register, 0x80, 4) , (const, 0xff, 4)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 4)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0x3300, 8) INT_MULT (register, 0x80, 8) , (const, 0x1, 8)",
    "(unique, 0x3400, 8) INT_ADD (register, 0x18, 8) , (unique, 0x3300, 8)",
    "(unique, 0x5580, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8)",
    "(unique, 0x7c980, 16) COPY (unique, 0x5580, 16)",
    "(register, 0x1200, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0x0, 4)",
    "(register, 0x1204, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0x4, 4)",
    "(register, 0x1208, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0x8, 4)",
    "(register, 0x120c, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0xc, 4)",
    "(unique, 0x3880, 8) INT_ADD (const, 0x10, 8) , (register, 0x18, 8)",
    "(unique, 0x3900, 8) INT_MULT (register, 0x80, 8) , (const, 0x1, 8)",
    "(unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8)",
    "(unique, 0x5580, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8)",
    "(unique, 0x7c980, 16) COPY (unique, 0x5580, 16)",
    "(register, 0x1220, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0x0, 4)",
    "(register, 0x1224, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0x4, 4)",
    "(register, 0x1228, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0x8, 4)",
    "(register, 0x122c, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0xc, 4)",
    "(unique, 0x3300, 8) INT_MULT (register, 0x80, 8) , (const, 0x1, 8)",
    "(unique, 0x3400, 8) INT_ADD (register, 0x8, 8) , (unique, 0x3300, 8)",
    "(unique, 0x5580, 16) COPY (register, 0x1200, 16)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (unique, 0x5580, 16)",
    "(unique, 0x3880, 8) INT_ADD (const, 0x10, 8) , (register, 0x8, 8)",
    "(unique, 0x3900, 8) INT_MULT (register, 0x80, 8) , (const, 0x1, 8)",
    "(unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8)",
    "(unique, 0x5580, 16) COPY (register, 0x1220, 16)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (unique, 0x5580, 16)",
    "(unique, 0x3880, 8) INT_ADD (const, 0x20, 8) , (register, 0x18, 8)",
    "(unique, 0x3900, 8) INT_MULT (register, 0x80, 8) , (const, 0x1, 8)",
    "(unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8)",
    "(unique, 0x5580, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8)",
    "(unique, 0x7c980, 16) COPY (unique, 0x5580, 16)",
    "(register, 0x1200, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0x0, 4)",
    "(register, 0x1204, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0x4, 4)",
    "(register, 0x1208, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0x8, 4)",
    "(register, 0x120c, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0xc, 4)",
    "(unique, 0x3880, 8) INT_ADD (const, 0x30, 8) , (register, 0x18, 8)",
    "(unique, 0x3900, 8) INT_MULT (register, 0x80, 8) , (const, 0x1, 8)",
    "(unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8)",
    "(unique, 0x5580, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8)",
    "(unique, 0x7c980, 16) COPY (unique, 0x5580, 16)",
    "(register, 0x1220, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0x0, 4)",
    "(register, 0x1224, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0x4, 4)",
    "(register, 0x1228, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0x8, 4)",
    "(register, 0x122c, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0xc, 4)",
    "(unique, 0x3880, 8) INT_ADD (const, 0x20, 8) , (register, 0x8, 8)",
    "(unique, 0x3900, 8) INT_MULT (register, 0x80, 8) , (const, 0x1, 8)",
    "(unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8)",
    "(unique, 0x5580, 16) COPY (register, 0x1200, 16)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (unique, 0x5580, 16)",
    "(unique, 0x3880, 8) INT_ADD (const, 0x30, 8) , (register, 0x8, 8)",
    "(unique, 0x3900, 8) INT_MULT (register, 0x80, 8) , (const, 0x1, 8)",
    "(unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8)",
    "(unique, 0x5580, 16) COPY (register, 0x1220, 16)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (unique, 0x5580, 16)",
    "(unique, 0x3880, 8) INT_ADD (const, 0x40, 8) , (register, 0x18, 8)",
    "(unique, 0x3900, 8) INT_MULT (register, 0x80, 8) , (const, 0x1, 8)",
    "(unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8)",
    "(unique, 0x5580, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8)",
    "(unique, 0x7c980, 16) COPY (unique, 0x5580, 16)",
    "(register, 0x1200, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0x0, 4)",
    "(register, 0x1204, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0x4, 4)",
    "(register, 0x1208, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0x8, 4)",
    "(register, 0x120c, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0xc, 4)",
    "(unique, 0x3880, 8) INT_ADD (const, 0x50, 8) , (register, 0x18, 8)",
    "(unique, 0x3900, 8) INT_MULT (register, 0x80, 8) , (const, 0x1, 8)",
    "(unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8)",
    "(unique, 0x5580, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8)",
    "(unique, 0x7c980, 16) COPY (unique, 0x5580, 16)",
    "(register, 0x1220, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0x0, 4)",
    "(register, 0x1224, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0x4, 4)",
    "(register, 0x1228, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0x8, 4)",
    "(register, 0x122c, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0xc, 4)",
    "(unique, 0x3880, 8) INT_ADD (const, 0x40, 8) , (register, 0x8, 8)",
    "(unique, 0x3900, 8) INT_MULT (register, 0x80, 8) , (const, 0x1, 8)",
    "(unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8)",
    "(unique, 0x5580, 16) COPY (register, 0x1200, 16)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (unique, 0x5580, 16)",
    "(unique, 0x3880, 8) INT_ADD (const, 0x50, 8) , (register, 0x8, 8)",
    "(unique, 0x3900, 8) INT_MULT (register, 0x80, 8) , (const, 0x1, 8)",
    "(unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8)",
    "(unique, 0x5580, 16) COPY (register, 0x1220, 16)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (unique, 0x5580, 16)",
    "(unique, 0x3880, 8) INT_ADD (const, 0x60, 8) , (register, 0x18, 8)",
    "(unique, 0x3900, 8) INT_MULT (register, 0x80, 8) , (const, 0x1, 8)",
    "(unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8)",
    "(unique, 0x5580, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8)",
    "(unique, 0x7c980, 16) COPY (unique, 0x5580, 16)",
    "(register, 0x1200, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0x0, 4)",
    "(register, 0x1204, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0x4, 4)",
    "(register, 0x1208, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0x8, 4)",
    "(register, 0x120c, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0xc, 4)",
    "(unique, 0x3880, 8) INT_ADD (const, 0x70, 8) , (register, 0x18, 8)",
    "(unique, 0x3900, 8) INT_MULT (register, 0x80, 8) , (const, 0x1, 8)",
    "(unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8)",
    "(unique, 0x5580, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8)",
    "(unique, 0x7c980, 16) COPY (unique, 0x5580, 16)",
    "(register, 0x1220, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0x0, 4)",
    "(register, 0x1224, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0x4, 4)",
    "(register, 0x1228, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0x8, 4)",
    "(register, 0x122c, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0xc, 4)",
    "(unique, 0x3880, 8) INT_ADD (const, 0x60, 8) , (register, 0x8, 8)",
    "(unique, 0x3900, 8) INT_MULT (register, 0x80, 8) , (const, 0x1, 8)",
    "(unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8)",
    "(unique, 0x5580, 16) COPY (register, 0x1200, 16)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (unique, 0x5580, 16)",
    "(unique, 0x3880, 8) INT_ADD (const, 0x70, 8) , (register, 0x8, 8)",
    "(unique, 0x3900, 8) INT_MULT (register, 0x80, 8) , (const, 0x1, 8)",
    "(unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8)",
    "(unique, 0x5580, 16) COPY (register, 0x1220, 16)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (unique, 0x5580, 16)",
    "(register, 0x200, 1) INT_LESS (register, 0x80, 8) , (const, 0xffffffffffffff80, 8)",
    "(register, 0x20b, 1) INT_SBORROW (register, 0x80, 8) , (const, 0xffffffffffffff80, 8)",
    "(register, 0x80, 8) INT_SUB (register, 0x80, 8) , (const, 0xffffffffffffff80, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x80, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x80, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x80, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x200, 1) INT_CARRY (register, 0x38, 8) , (const, 0xfffffffffffffffc, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x38, 8) , (const, 0xfffffffffffffffc, 8)",
    "(register, 0x38, 8) INT_ADD (register, 0x38, 8) , (const, 0xfffffffffffffffc, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x38, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x38, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x38, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0xcb80, 1) BOOL_NEGATE (register, 0x206, 1)",
    " ---  CBRANCH (ram, 0x26c0, 8) , (unique, 0xcb80, 1)",
    "(register, 0x38, 8) COPY (register, 0x10, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(register, 0x38, 8) INT_AND (register, 0x38, 8) , (const, 0xffffffffffffffe0, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x38, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x38, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x38, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x56080, 8) INT_AND (register, 0x30, 8) , (register, 0x30, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x56080, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x276f, 8) , (register, 0x206, 1)",
    "(unique, 0x3300, 8) INT_MULT (register, 0x80, 8) , (const, 0x1, 8)",
    "(unique, 0x3400, 8) INT_ADD (register, 0x18, 8) , (unique, 0x3300, 8)",
    "(register, 0x88, 8) COPY (unique, 0x3400, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0x88, 8) , (const, 0x10, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x88, 8) , (const, 0x10, 8)",
    "(register, 0x88, 8) INT_ADD (register, 0x88, 8) , (const, 0x10, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x88, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x88, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x88, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x200, 1) INT_CARRY (register, 0x80, 8) , (register, 0x0, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x80, 8) , (register, 0x0, 8)",
    "(register, 0x80, 8) INT_ADD (register, 0x80, 8) , (register, 0x0, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x80, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x80, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x80, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x200, 1) INT_CARRY (register, 0x80, 8) , (const, 0x10, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x80, 8) , (const, 0x10, 8)",
    "(register, 0x80, 8) INT_ADD (register, 0x80, 8) , (const, 0x10, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x80, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x80, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x80, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0x50680, 4) INT_AND (const, 0x5, 4) , (const, 0x3f, 4)",
    "(unique, 0x50700, 8) COPY (register, 0x30, 8)",
    "(register, 0x30, 8) INT_LEFT (register, 0x30, 8) , (unique, 0x50680, 4)",
    "(unique, 0x15800, 1) INT_NOTEQUAL (unique, 0x50680, 4) , (const, 0x0, 4)",
    "(unique, 0x15880, 4) INT_SUB (unique, 0x50680, 4) , (const, 0x1, 4)",
    "(unique, 0x15900, 8) INT_LEFT (unique, 0x50700, 8) , (unique, 0x15880, 4)",
    "(unique, 0x15a00, 1) INT_SLESS (unique, 0x15900, 8) , (const, 0x0, 8)",
    "(unique, 0x15a80, 1) BOOL_NEGATE (unique, 0x15800, 1)",
    "(unique, 0x15b00, 1) INT_AND (unique, 0x15a80, 1) , (register, 0x200, 1)",
    "(unique, 0x15b80, 1) INT_AND (unique, 0x15800, 1) , (unique, 0x15a00, 1)",
    "(register, 0x200, 1) INT_OR (unique, 0x15b00, 1) , (unique, 0x15b80, 1)",
    "(unique, 0x15d00, 1) INT_EQUAL (unique, 0x50680, 4) , (const, 0x1, 4)",
    "(unique, 0x15d80, 1) INT_SLESS (register, 0x30, 8) , (const, 0x0, 8)",
    "(unique, 0x15e80, 1) INT_XOR (register, 0x200, 1) , (unique, 0x15d80, 1)",
    "(unique, 0x15f00, 1) BOOL_NEGATE (unique, 0x15d00, 1)",
    "(unique, 0x15f80, 1) INT_AND (unique, 0x15f00, 1) , (register, 0x20b, 1)",
    "(unique, 0x16000, 1) INT_AND (unique, 0x15d00, 1) , (unique, 0x15e80, 1)",
    "(register, 0x20b, 1) INT_OR (unique, 0x15f80, 1) , (unique, 0x16000, 1)",
    "(unique, 0x13680, 1) INT_NOTEQUAL (unique, 0x50680, 4) , (const, 0x0, 4)",
    "(unique, 0x13780, 1) INT_SLESS (register, 0x30, 8) , (const, 0x0, 8)",
    "(unique, 0x13800, 1) BOOL_NEGATE (unique, 0x13680, 1)",
    "(unique, 0x13880, 1) INT_AND (unique, 0x13800, 1) , (register, 0x207, 1)",
    "(unique, 0x13900, 1) INT_AND (unique, 0x13680, 1) , (unique, 0x13780, 1)",
    "(register, 0x207, 1) INT_OR (unique, 0x13880, 1) , (unique, 0x13900, 1)",
    "(unique, 0x13a80, 1) INT_EQUAL (register, 0x30, 8) , (const, 0x0, 8)",
    "(unique, 0x13b00, 1) BOOL_NEGATE (unique, 0x13680, 1)",
    "(unique, 0x13b80, 1) INT_AND (unique, 0x13b00, 1) , (register, 0x206, 1)",
    "(unique, 0x13c00, 1) INT_AND (unique, 0x13680, 1) , (unique, 0x13a80, 1)",
    "(register, 0x206, 1) INT_OR (unique, 0x13b80, 1) , (unique, 0x13c00, 1)",
    "(unique, 0x13d00, 8) INT_AND (register, 0x30, 8) , (const, 0xff, 8)",
    "(unique, 0x13d80, 1) POPCOUNT (unique, 0x13d00, 8)",
    "(unique, 0x13e00, 1) INT_AND (unique, 0x13d80, 1) , (const, 0x1, 1)",
    "(unique, 0x13f00, 1) INT_EQUAL (unique, 0x13e00, 1) , (const, 0x0, 1)",
    "(unique, 0x13f80, 1) BOOL_NEGATE (unique, 0x13680, 1)",
    "(unique, 0x14000, 1) INT_AND (unique, 0x13f80, 1) , (register, 0x202, 1)",
    "(unique, 0x14080, 1) INT_AND (unique, 0x13680, 1) , (unique, 0x13f00, 1)",
    "(register, 0x202, 1) INT_OR (unique, 0x14000, 1) , (unique, 0x14080, 1)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(register, 0x90, 4) INT_XOR (register, 0x90, 4) , (register, 0x90, 4)",
    "(register, 0x90, 8) INT_ZEXT (register, 0x90, 4)",
    "(register, 0x207, 1) INT_SLESS (register, 0x90, 4) , (const, 0x0, 4)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x90, 4) , (const, 0x0, 4)",
    "(unique, 0x13400, 4) INT_AND (register, 0x90, 4) , (const, 0xff, 4)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 4)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0x3a80, 8) INT_MULT (register, 0x0, 8) , (const, 0x1, 8)",
    "(unique, 0x3b80, 8) INT_ADD (register, 0x0, 8) , (unique, 0x3a80, 8)",
    "(unique, 0x3880, 8) INT_ADD (const, 0xfffffffffffffff0, 8) , (register, 0x88, 8)",
    "(unique, 0x3900, 8) INT_MULT (register, 0x90, 8) , (const, 0x1, 8)",
    "(unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8)",
    "(unique, 0x5580, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8)",
    "(unique, 0x7c980, 16) COPY (unique, 0x5580, 16)",
    "(register, 0x1200, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0x0, 4)",
    "(register, 0x1204, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0x4, 4)",
    "(register, 0x1208, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0x8, 4)",
    "(register, 0x120c, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0xc, 4)",
    "(unique, 0x3300, 8) INT_MULT (register, 0x90, 8) , (const, 0x1, 8)",
    "(unique, 0x3400, 8) INT_ADD (register, 0x88, 8) , (unique, 0x3300, 8)",
    "(unique, 0x5580, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8)",
    "(unique, 0x7c980, 16) COPY (unique, 0x5580, 16)",
    "(register, 0x1220, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0x0, 4)",
    "(register, 0x1224, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0x4, 4)",
    "(register, 0x1228, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0x8, 4)",
    "(register, 0x122c, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0xc, 4)",
    "(unique, 0x3880, 8) INT_ADD (const, 0xfffffffffffffff0, 8) , (register, 0x80, 8)",
    "(unique, 0x3900, 8) INT_MULT (register, 0x90, 8) , (const, 0x1, 8)",
    "(unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8)",
    "(unique, 0x5580, 16) COPY (register, 0x1200, 16)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (unique, 0x5580, 16)",
    "(unique, 0x3300, 8) INT_MULT (register, 0x90, 8) , (const, 0x1, 8)",
    "(unique, 0x3400, 8) INT_ADD (register, 0x80, 8) , (unique, 0x3300, 8)",
    "(unique, 0x5580, 16) COPY (register, 0x1220, 16)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (unique, 0x5580, 16)",
    "(register, 0x200, 1) INT_CARRY (register, 0x90, 8) , (const, 0x20, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x90, 8) , (const, 0x20, 8)",
    "(register, 0x90, 8) INT_ADD (register, 0x90, 8) , (const, 0x20, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x90, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x90, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x90, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x200, 1) INT_LESS (register, 0x30, 8) , (register, 0x90, 8)",
    "(register, 0x20b, 1) INT_SBORROW (register, 0x30, 8) , (register, 0x90, 8)",
    "(unique, 0x25c80, 8) INT_SUB (register, 0x30, 8) , (register, 0x90, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x25c80, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x25c80, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x25c80, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0xcb80, 1) BOOL_NEGATE (register, 0x206, 1)",
    " ---  CBRANCH (ram, 0x2750, 8) , (unique, 0xcb80, 1)",
    "(register, 0x200, 1) INT_LESS (register, 0x10, 8) , (register, 0x38, 8)",
    "(register, 0x20b, 1) INT_SBORROW (register, 0x10, 8) , (register, 0x38, 8)",
    "(unique, 0x25c80, 8) INT_SUB (register, 0x10, 8) , (register, 0x38, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x25c80, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x25c80, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x25c80, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x2857, 8) , (register, 0x206, 1)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x55980, 1) INT_AND (register, 0x10, 1) , (const, 0x18, 1)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x55980, 1) , (const, 0x0, 1)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x55980, 1) , (const, 0x0, 1)",
    "(unique, 0x13400, 1) INT_AND (unique, 0x55980, 1) , (const, 0xff, 1)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 1)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x27ab, 8) , (register, 0x206, 1)",
    "(register, 0x80, 8) COPY (register, 0x10, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(register, 0x80, 8) INT_AND (register, 0x80, 8) , (const, 0xfffffffffffffff8, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x80, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x80, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x80, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x200, 1) INT_CARRY (register, 0x0, 8) , (register, 0x80, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x0, 8) , (register, 0x80, 8)",
    "(register, 0x0, 8) INT_ADD (register, 0x0, 8) , (register, 0x80, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x0, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x0, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0x3300, 8) INT_MULT (register, 0x80, 8) , (const, 0x1, 8)",
    "(unique, 0x3400, 8) INT_ADD (register, 0x18, 8) , (unique, 0x3300, 8)",
    "(register, 0x30, 8) COPY (unique, 0x3400, 8)",
    "(unique, 0x3a80, 8) INT_MULT (register, 0x0, 8) , (const, 0x1, 8)",
    "(unique, 0x3b80, 8) INT_ADD (register, 0x0, 8) , (unique, 0x3a80, 8)",
    "(unique, 0x3300, 8) INT_MULT (register, 0x38, 8) , (const, 0x1, 8)",
    "(unique, 0x3400, 8) INT_ADD (register, 0x18, 8) , (unique, 0x3300, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8)",
    "(register, 0x88, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3300, 8) INT_MULT (register, 0x38, 8) , (const, 0x1, 8)",
    "(unique, 0x3400, 8) INT_ADD (register, 0x8, 8) , (unique, 0x3300, 8)",
    "(unique, 0x5500, 8) COPY (register, 0x88, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (unique, 0x5500, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0x38, 8) , (const, 0x8, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x38, 8) , (const, 0x8, 8)",
    "(register, 0x38, 8) INT_ADD (register, 0x38, 8) , (const, 0x8, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x38, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x38, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x38, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x200, 1) INT_LESS (register, 0x80, 8) , (register, 0x38, 8)",
    "(register, 0x20b, 1) INT_SBORROW (register, 0x80, 8) , (register, 0x38, 8)",
    "(unique, 0x25c80, 8) INT_SUB (register, 0x80, 8) , (register, 0x38, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x25c80, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x25c80, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x25c80, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0xcb80, 1) BOOL_NEGATE (register, 0x206, 1)",
    " ---  CBRANCH (ram, 0x2790, 8) , (unique, 0xcb80, 1)",
    "(register, 0x200, 1) INT_LESS (register, 0x10, 8) , (register, 0x80, 8)",
    "(register, 0x20b, 1) INT_SBORROW (register, 0x10, 8) , (register, 0x80, 8)",
    "(unique, 0x25c80, 8) INT_SUB (register, 0x10, 8) , (register, 0x80, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x25c80, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x25c80, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x25c80, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0xcb80, 1) BOOL_NEGATE (register, 0x206, 1)",
    " ---  CBRANCH (ram, 0x27b2, 8) , (unique, 0xcb80, 1)",
    " ---  BRANCH (ram, 0x2857, 8)",
    "(unique, 0x3300, 8) INT_MULT (register, 0x38, 8) , (const, 0x1, 8)",
    "(unique, 0x3400, 8) INT_ADD (register, 0x18, 8) , (unique, 0x3300, 8)",
    "(register, 0x30, 8) COPY (unique, 0x3400, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0x0, 8) , (register, 0x38, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x0, 8) , (register, 0x38, 8)",
    "(register, 0x0, 8) INT_ADD (register, 0x0, 8) , (register, 0x38, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x0, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x0, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x200, 1) INT_CARRY (register, 0x10, 8) , (register, 0x18, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x10, 8) , (register, 0x18, 8)",
    "(register, 0x10, 8) INT_ADD (register, 0x10, 8) , (register, 0x18, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x10, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x10, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x10, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x80, 4) COPY (register, 0x10, 4)",
    "(register, 0x80, 8) INT_ZEXT (register, 0x80, 4)",
    "(register, 0x200, 1) INT_LESS (register, 0x80, 4) , (register, 0x30, 4)",
    "(register, 0x20b, 1) INT_SBORROW (register, 0x80, 4) , (register, 0x30, 4)",
    "(register, 0x80, 4) INT_SUB (register, 0x80, 4) , (register, 0x30, 4)",
    "(register, 0x80, 8) INT_ZEXT (register, 0x80, 4)",
    "(register, 0x207, 1) INT_SLESS (register, 0x80, 4) , (const, 0x0, 4)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x80, 4) , (const, 0x0, 4)",
    "(unique, 0x13400, 4) INT_AND (register, 0x80, 4) , (const, 0xff, 4)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 4)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x38, 8) COPY (register, 0x30, 8)",
    "(register, 0x38, 8) INT_NEGATE (register, 0x38, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0x38, 8) , (register, 0x10, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x38, 8) , (register, 0x10, 8)",
    "(register, 0x38, 8) INT_ADD (register, 0x38, 8) , (register, 0x10, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x38, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x38, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x38, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(register, 0x80, 8) INT_AND (register, 0x80, 8) , (const, 0x7, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x80, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x80, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x80, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x27e2, 8) , (register, 0x206, 1)",
    "(unique, 0x3a80, 8) INT_MULT (register, 0x0, 8) , (const, 0x1, 8)",
    "(unique, 0x3b80, 8) INT_ADD (register, 0x0, 8) , (unique, 0x3a80, 8)",
    "(unique, 0xc000, 1) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)",
    "(register, 0x88, 4) INT_ZEXT (unique, 0xc000, 1)",
    "(register, 0x88, 8) INT_ZEXT (register, 0x88, 4)",
    "(unique, 0x5380, 1) COPY (register, 0x88, 1)",
    " ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (unique, 0x5380, 1)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x30, 8) , (const, 0x1, 8)",
    "(register, 0x30, 8) INT_ADD (register, 0x30, 8) , (const, 0x1, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x30, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x30, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x30, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x0, 8) , (const, 0x1, 8)",
    "(register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x1, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x0, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x0, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x20b, 1) INT_SBORROW (register, 0x80, 8) , (const, 0x1, 8)",
    "(register, 0x80, 8) INT_SUB (register, 0x80, 8) , (const, 0x1, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x80, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x80, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x80, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0xcb80, 1) BOOL_NEGATE (register, 0x206, 1)",
    " ---  CBRANCH (ram, 0x27d0, 8) , (unique, 0xcb80, 1)",
    "(register, 0x200, 1) INT_LESS (register, 0x38, 8) , (const, 0x7, 8)",
    "(register, 0x20b, 1) INT_SBORROW (register, 0x38, 8) , (const, 0x7, 8)",
    "(unique, 0x25880, 8) INT_SUB (register, 0x38, 8) , (const, 0x7, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x25880, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x25880, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x25880, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x2857, 8) , (register, 0x200, 1)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(register, 0x38, 4) INT_XOR (register, 0x38, 4) , (register, 0x38, 4)",
    "(register, 0x38, 8) INT_ZEXT (register, 0x38, 4)",
    "(register, 0x207, 1) INT_SLESS (register, 0x38, 4) , (const, 0x0, 4)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x38, 4) , (const, 0x0, 4)",
    "(unique, 0x13400, 4) INT_AND (register, 0x38, 4) , (const, 0xff, 4)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 4)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0x3a80, 8) INT_MULT (register, 0x0, 8) , (const, 0x1, 8)",
    "(unique, 0x3b80, 8) INT_ADD (register, 0x0, 8) , (unique, 0x3a80, 8)",
    "(unique, 0x3300, 8) INT_MULT (register, 0x38, 8) , (const, 0x1, 8)",
    "(unique, 0x3400, 8) INT_ADD (register, 0x30, 8) , (unique, 0x3300, 8)",
    "(unique, 0xc000, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8)",
    "(register, 0x80, 4) INT_ZEXT (unique, 0xc000, 1)",
    "(register, 0x80, 8) INT_ZEXT (register, 0x80, 4)",
    "(unique, 0x3300, 8) INT_MULT (register, 0x38, 8) , (const, 0x1, 8)",
    "(unique, 0x3400, 8) INT_ADD (register, 0x0, 8) , (unique, 0x3300, 8)",
    "(unique, 0x5380, 1) COPY (register, 0x80, 1)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (unique, 0x5380, 1)",
    "(unique, 0x3880, 8) INT_ADD (const, 0x1, 8) , (register, 0x30, 8)",
    "(unique, 0x3900, 8) INT_MULT (register, 0x38, 8) , (const, 0x1, 8)",
    "(unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8)",
    "(unique, 0xc000, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8)",
    "(register, 0x80, 4) INT_ZEXT (unique, 0xc000, 1)",
    "(register, 0x80, 8) INT_ZEXT (register, 0x80, 4)",
    "(unique, 0x3880, 8) INT_ADD (const, 0x1, 8) , (register, 0x0, 8)",
    "(unique, 0x3900, 8) INT_MULT (register, 0x38, 8) , (const, 0x1, 8)",
    "(unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8)",
    "(unique, 0x5380, 1) COPY (register, 0x80, 1)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (unique, 0x5380, 1)",
    "(unique, 0x3880, 8) INT_ADD (const, 0x2, 8) , (register, 0x30, 8)",
    "(unique, 0x3900, 8) INT_MULT (register, 0x38, 8) , (const, 0x1, 8)",
    "(unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8)",
    "(unique, 0xc000, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8)",
    "(register, 0x80, 4) INT_ZEXT (unique, 0xc000, 1)",
    "(register, 0x80, 8) INT_ZEXT (register, 0x80, 4)",
    "(unique, 0x3880, 8) INT_ADD (const, 0x2, 8) , (register, 0x0, 8)",
    "(unique, 0x3900, 8) INT_MULT (register, 0x38, 8) , (const, 0x1, 8)",
    "(unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8)",
    "(unique, 0x5380, 1) COPY (register, 0x80, 1)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (unique, 0x5380, 1)",
    "(unique, 0x3880, 8) INT_ADD (const, 0x3, 8) , (register, 0x30, 8)",
    "(unique, 0x3900, 8) INT_MULT (register, 0x38, 8) , (const, 0x1, 8)",
    "(unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8)",
    "(unique, 0xc000, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8)",
    "(register, 0x80, 4) INT_ZEXT (unique, 0xc000, 1)",
    "(register, 0x80, 8) INT_ZEXT (register, 0x80, 4)",
    "(unique, 0x3880, 8) INT_ADD (const, 0x3, 8) , (register, 0x0, 8)",
    "(unique, 0x3900, 8) INT_MULT (register, 0x38, 8) , (const, 0x1, 8)",
    "(unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8)",
    "(unique, 0x5380, 1) COPY (register, 0x80, 1)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (unique, 0x5380, 1)",
    "(unique, 0x3880, 8) INT_ADD (const, 0x4, 8) , (register, 0x30, 8)",
    "(unique, 0x3900, 8) INT_MULT (register, 0x38, 8) , (const, 0x1, 8)",
    "(unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8)",
    "(unique, 0xc000, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8)",
    "(register, 0x80, 4) INT_ZEXT (unique, 0xc000, 1)",
    "(register, 0x80, 8) INT_ZEXT (register, 0x80, 4)",
    "(unique, 0x3880, 8) INT_ADD (const, 0x4, 8) , (register, 0x0, 8)",
    "(unique, 0x3900, 8) INT_MULT (register, 0x38, 8) , (const, 0x1, 8)",
    "(unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8)",
    "(unique, 0x5380, 1) COPY (register, 0x80, 1)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (unique, 0x5380, 1)",
    "(unique, 0x3880, 8) INT_ADD (const, 0x5, 8) , (register, 0x30, 8)",
    "(unique, 0x3900, 8) INT_MULT (register, 0x38, 8) , (const, 0x1, 8)",
    "(unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8)",
    "(unique, 0xc000, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8)",
    "(register, 0x80, 4) INT_ZEXT (unique, 0xc000, 1)",
    "(register, 0x80, 8) INT_ZEXT (register, 0x80, 4)",
    "(unique, 0x3880, 8) INT_ADD (const, 0x5, 8) , (register, 0x0, 8)",
    "(unique, 0x3900, 8) INT_MULT (register, 0x38, 8) , (const, 0x1, 8)",
    "(unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8)",
    "(unique, 0x5380, 1) COPY (register, 0x80, 1)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (unique, 0x5380, 1)",
    "(unique, 0x3880, 8) INT_ADD (const, 0x6, 8) , (register, 0x30, 8)",
    "(unique, 0x3900, 8) INT_MULT (register, 0x38, 8) , (const, 0x1, 8)",
    "(unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8)",
    "(unique, 0xc000, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8)",
    "(register, 0x80, 4) INT_ZEXT (unique, 0xc000, 1)",
    "(register, 0x80, 8) INT_ZEXT (register, 0x80, 4)",
    "(unique, 0x3880, 8) INT_ADD (const, 0x6, 8) , (register, 0x0, 8)",
    "(unique, 0x3900, 8) INT_MULT (register, 0x38, 8) , (const, 0x1, 8)",
    "(unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8)",
    "(unique, 0x5380, 1) COPY (register, 0x80, 1)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (unique, 0x5380, 1)",
    "(unique, 0x3880, 8) INT_ADD (const, 0x7, 8) , (register, 0x30, 8)",
    "(unique, 0x3900, 8) INT_MULT (register, 0x38, 8) , (const, 0x1, 8)",
    "(unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8)",
    "(unique, 0xc000, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8)",
    "(register, 0x80, 4) INT_ZEXT (unique, 0xc000, 1)",
    "(register, 0x80, 8) INT_ZEXT (register, 0x80, 4)",
    "(unique, 0x3880, 8) INT_ADD (const, 0x7, 8) , (register, 0x0, 8)",
    "(unique, 0x3900, 8) INT_MULT (register, 0x38, 8) , (const, 0x1, 8)",
    "(unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8)",
    "(unique, 0x5380, 1) COPY (register, 0x80, 1)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (unique, 0x5380, 1)",
    "(unique, 0x3300, 8) INT_MULT (register, 0x38, 8) , (const, 0x1, 8)",
    "(unique, 0x3400, 8) INT_ADD (register, 0x30, 8) , (unique, 0x3300, 8)",
    "(register, 0x80, 8) COPY (unique, 0x3400, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0x80, 8) , (const, 0x8, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x80, 8) , (const, 0x8, 8)",
    "(register, 0x80, 8) INT_ADD (register, 0x80, 8) , (const, 0x8, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x80, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x80, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x80, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x200, 1) INT_CARRY (register, 0x38, 8) , (const, 0x8, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x38, 8) , (const, 0x8, 8)",
    "(register, 0x38, 8) INT_ADD (register, 0x38, 8) , (const, 0x8, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x38, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x38, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x38, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x200, 1) INT_LESS (register, 0x80, 8) , (register, 0x10, 8)",
    "(register, 0x20b, 1) INT_SBORROW (register, 0x80, 8) , (register, 0x10, 8)",
    "(unique, 0x25c80, 8) INT_SUB (register, 0x80, 8) , (register, 0x10, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x25c80, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x25c80, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x25c80, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0xcb80, 1) BOOL_NEGATE (register, 0x206, 1)",
    " ---  CBRANCH (ram, 0x27f0, 8) , (unique, 0xcb80, 1)",
    "(unique, 0x3100, 8) INT_ADD (register, 0xb0, 8) , (const, 0x8, 8)",
    "(unique, 0x5500, 8) COPY (register, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5500, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0xb0, 8) , (const, 0x18, 8)",
    "(unique, 0x5500, 8) COPY (register, 0xb8, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5500, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0xb0, 8) , (const, 0x20, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0xb0, 8) , (const, 0x20, 8)",
    "(register, 0xb0, 8) INT_ADD (register, 0xb0, 8) , (const, 0x20, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0xb0, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0xb0, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0xb0, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x200, 1) INT_LESS (register, 0x18, 8) , (register, 0xb0, 8)",
    "(register, 0x20b, 1) INT_SBORROW (register, 0x18, 8) , (register, 0xb0, 8)",
    "(unique, 0x25c80, 8) INT_SUB (register, 0x18, 8) , (register, 0xb0, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x25c80, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x25c80, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x25c80, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x287a, 8) , (register, 0x206, 1)",
    "(register, 0x38, 8) COPY (register, 0x18, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0xb0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0xb8, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  BRANCH (ram, 0x50f8, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0xb0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0xb8, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  RETURN (register, 0x288, 8)"
  ],
  "__ZN6spdlog7details11file_helper18split_by_extensionERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE": [
    "(unique, 0xef80, 8) COPY (register, 0x28, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x28, 8) COPY (register, 0x20, 8)",
    "(unique, 0xef80, 8) COPY (register, 0xb8, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0xb0, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x200, 1) INT_LESS (register, 0x20, 8) , (const, 0x38, 8)",
    "(register, 0x20b, 1) INT_SBORROW (register, 0x20, 8) , (const, 0x38, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x38, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0xb0, 8) COPY (register, 0x30, 8)",
    "(register, 0x18, 8) COPY (register, 0x38, 8)",
    "(register, 0x38, 8) COPY (register, 0x30, 8)",
    "(register, 0x30, 8) COPY (const, 0x2e, 8)",
    "(register, 0x10, 8) COPY (const, 0xffffffffffffffff, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x6a7, 8)",
    " ---  CALL (ram, 0x5078, 8)",
    "(register, 0xb8, 8) COPY (register, 0x0, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x0, 8) , (const, 0x1, 8)",
    "(register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x1, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x0, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x0, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x200, 1) INT_LESS (register, 0x0, 8) , (const, 0x2, 8)",
    "(register, 0x20b, 1) INT_SBORROW (register, 0x0, 8) , (const, 0x2, 8)",
    "(unique, 0x25880, 8) INT_SUB (register, 0x0, 8) , (const, 0x2, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x25880, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x25880, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x25880, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x704, 8) , (register, 0x200, 1)",
    "(unique, 0xc000, 1) LOAD (const, 0x1b1, 4) , (register, 0xb0, 8)",
    "(register, 0x0, 4) INT_ZEXT (unique, 0xc000, 1)",
    "(register, 0x0, 8) INT_ZEXT (register, 0x0, 4)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x55580, 1) INT_AND (register, 0x0, 1) , (const, 0x1, 1)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x55580, 1) , (const, 0x0, 1)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x55580, 1) , (const, 0x0, 1)",
    "(unique, 0x13400, 1) INT_AND (unique, 0x55580, 1) , (const, 0xff, 1)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 1)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0xcb80, 1) BOOL_NEGATE (register, 0x206, 1)",
    " ---  CBRANCH (ram, 0x6cd, 8) , (unique, 0xcb80, 1)",
    "(unique, 0x54200, 8) INT_AND (register, 0x0, 8) , (const, 0x1, 8)",
    "(register, 0x200, 1) INT_NOTEQUAL (unique, 0x54200, 8) , (const, 0x0, 8)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(register, 0x0, 8) INT_RIGHT (register, 0x0, 8) , (const, 0x1, 4)",
    "(register, 0x207, 1) INT_SLESS (register, 0x0, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x0, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0xffffffffffffffff, 8)",
    "(register, 0x8, 8) COPY (unique, 0x3100, 8)",
    "(register, 0x200, 1) INT_LESS (register, 0xb8, 8) , (register, 0x8, 8)",
    "(register, 0x20b, 1) INT_SBORROW (register, 0xb8, 8) , (register, 0x8, 8)",
    "(unique, 0x25c80, 8) INT_SUB (register, 0xb8, 8) , (register, 0x8, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x25c80, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x25c80, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x25c80, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x704, 8) , (register, 0x206, 1)",
    "(unique, 0x3100, 8) INT_ADD (register, 0xb0, 8) , (const, 0x1, 8)",
    "(register, 0x8, 8) COPY (unique, 0x3100, 8)",
    " ---  BRANCH (ram, 0x6e0, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0xb0, 8) , (const, 0x8, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x0, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0xffffffffffffffff, 8)",
    "(register, 0x8, 8) COPY (unique, 0x3100, 8)",
    "(register, 0x200, 1) INT_LESS (register, 0xb8, 8) , (register, 0x8, 8)",
    "(register, 0x20b, 1) INT_SBORROW (register, 0xb8, 8) , (register, 0x8, 8)",
    "(unique, 0x25c80, 8) INT_SUB (register, 0xb8, 8) , (register, 0x8, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x25c80, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x25c80, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x25c80, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x704, 8) , (register, 0x206, 1)",
    "(unique, 0x3100, 8) INT_ADD (register, 0xb0, 8) , (const, 0x10, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x8, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x56080, 8) INT_AND (register, 0x0, 8) , (register, 0x0, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x56080, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x72c, 8) , (register, 0x206, 1)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0xffffffffffffffff, 8)",
    "(register, 0x10, 8) COPY (unique, 0x3100, 8)",
    "(unique, 0x3880, 8) INT_ADD (const, 0xffffffffffffffff, 8) , (register, 0x8, 8)",
    "(unique, 0x3900, 8) INT_MULT (register, 0x0, 8) , (const, 0x1, 8)",
    "(unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8)",
    "(unique, 0xc000, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8)",
    "(register, 0x200, 1) INT_LESS (unique, 0xc000, 1) , (const, 0x2f, 1)",
    "(unique, 0xc000, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8)",
    "(register, 0x20b, 1) INT_SBORROW (unique, 0xc000, 1) , (const, 0x2f, 1)",
    "(unique, 0xc000, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8)",
    "(unique, 0x25280, 1) INT_SUB (unique, 0xc000, 1) , (const, 0x2f, 1)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x25280, 1) , (const, 0x0, 1)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x25280, 1) , (const, 0x0, 1)",
    "(unique, 0x13400, 1) INT_AND (unique, 0x25280, 1) , (const, 0xff, 1)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 1)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x0, 8) COPY (register, 0x10, 8)",
    "(unique, 0xcb80, 1) BOOL_NEGATE (register, 0x206, 1)",
    " ---  CBRANCH (ram, 0x6e0, 8) , (unique, 0xcb80, 1)",
    "(register, 0x200, 1) INT_LESS (register, 0x10, 8) , (const, 0xffffffffffffffff, 8)",
    "(register, 0x20b, 1) INT_SBORROW (register, 0x10, 8) , (const, 0xffffffffffffffff, 8)",
    "(unique, 0x25880, 8) INT_SUB (register, 0x10, 8) , (const, 0xffffffffffffffff, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x25880, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x25880, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x25880, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x72c, 8) , (register, 0x206, 1)",
    "(register, 0x0, 8) COPY (register, 0xb8, 8)",
    "(register, 0x20b, 1) INT_SBORROW (register, 0x0, 8) , (const, 0x1, 8)",
    "(register, 0x0, 8) INT_SUB (register, 0x0, 8) , (const, 0x1, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x0, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x0, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x200, 1) INT_LESS (register, 0x10, 8) , (register, 0x0, 8)",
    "(register, 0x20b, 1) INT_SBORROW (register, 0x10, 8) , (register, 0x0, 8)",
    "(unique, 0x25c80, 8) INT_SUB (register, 0x10, 8) , (register, 0x0, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x25c80, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x25c80, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x25c80, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x72c, 8) , (register, 0x200, 1)",
    "(register, 0x38, 8) COPY (register, 0x18, 8)",
    "(register, 0x30, 8) COPY (register, 0xb0, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x70f, 8)",
    " ---  CALL (ram, 0x50a8, 8)",
    "(register, 0x1200, 4) INT_XOR (register, 0x1200, 4) , (register, 0x1200, 4)",
    "(register, 0x1204, 4) INT_XOR (register, 0x1204, 4) , (register, 0x1204, 4)",
    "(register, 0x1208, 4) INT_XOR (register, 0x1208, 4) , (register, 0x1208, 4)",
    "(register, 0x120c, 4) INT_XOR (register, 0x120c, 4) , (register, 0x120c, 4)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x18, 8)",
    "(unique, 0x5580, 16) COPY (register, 0x1200, 16)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5580, 16)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x28, 8)",
    "(unique, 0x5800, 8) COPY (const, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5800, 8)",
    "(register, 0x0, 8) COPY (register, 0x18, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x38, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x38, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x38, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0xb0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0xb8, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  RETURN (register, 0x288, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffc8, 8)",
    "(register, 0x38, 8) COPY (unique, 0x3100, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffb0, 8)",
    "(register, 0x80, 8) COPY (unique, 0x3100, 8)",
    "(register, 0x30, 8) COPY (register, 0xb0, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(register, 0x10, 4) INT_XOR (register, 0x10, 4) , (register, 0x10, 4)",
    "(register, 0x10, 8) INT_ZEXT (register, 0x10, 4)",
    "(register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)",
    "(unique, 0x13400, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 4)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x8, 8) COPY (register, 0xb8, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x741, 8)",
    " ---  CALL (ram, 0x50b0, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffb0, 8)",
    "(register, 0x38, 8) COPY (unique, 0x3100, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffe0, 8)",
    "(register, 0x80, 8) COPY (unique, 0x3100, 8)",
    "(register, 0x30, 8) COPY (register, 0xb0, 8)",
    "(register, 0x10, 8) COPY (register, 0xb8, 8)",
    "(register, 0x8, 8) COPY (const, 0xffffffffffffffff, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x75b, 8)",
    " ---  CALL (ram, 0x50b0, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffd8, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x0, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x10, 8)",
    "(unique, 0x5500, 8) COPY (register, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5500, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffc8, 8)",
    "(unique, 0x5580, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(unique, 0x7c980, 16) COPY (unique, 0x5580, 16)",
    "(register, 0x1200, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0x0, 4)",
    "(register, 0x1204, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0x4, 4)",
    "(register, 0x1208, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0x8, 4)",
    "(register, 0x120c, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0xc, 4)",
    "(unique, 0x5580, 16) COPY (register, 0x1200, 16)",
    " ---  STORE (const, 0x1b1, 4) , (register, 0x18, 8) , (unique, 0x5580, 16)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffb0, 8)",
    "(unique, 0x5580, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(unique, 0x7c980, 16) COPY (unique, 0x5580, 16)",
    "(register, 0x1200, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0x0, 4)",
    "(register, 0x1204, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0x4, 4)",
    "(register, 0x1208, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0x8, 4)",
    "(register, 0x120c, 4) SUBPIECE (unique, 0x7c980, 16) , (const, 0xc, 4)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x18, 8)",
    "(unique, 0x5580, 16) COPY (register, 0x1200, 16)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5580, 16)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffc0, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x0, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x28, 8)",
    "(unique, 0x5500, 8) COPY (register, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5500, 8)",
    " ---  BRANCH (ram, 0x71e, 8)"
  ],
  "__ZN6spdlog5sinks9base_sinkINSt3__15mutexEE11set_patternERKNS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE": [
    "(unique, 0xef80, 8) COPY (register, 0x28, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x28, 8) COPY (register, 0x20, 8)",
    "(unique, 0xef80, 8) COPY (register, 0xb8, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0xb0, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0x0, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0xb0, 8) COPY (register, 0x30, 8)",
    "(register, 0xb8, 8) COPY (register, 0x38, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x38, 8) , (const, 0x18, 8)",
    "(register, 0x18, 8) COPY (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x1ddc, 8)",
    " ---  CALL (ram, 0x50c0, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (register, 0xb8, 8)",
    "(register, 0x0, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x38, 8) COPY (register, 0xb8, 8)",
    "(register, 0x30, 8) COPY (register, 0xb0, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x40, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(unique, 0x23d80, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x1de8, 8)",
    " ---  CALLIND (unique, 0x23d80, 8)",
    "(register, 0x38, 8) COPY (register, 0x18, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0xb0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0xb8, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  BRANCH (ram, 0x50c8, 8)"
  ],
  "__ZN6spdlog7details2os6renameERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEESA_": [],
  "__ZN6spdlog5sinks15basic_file_sinkINSt3__15mutexEED0Ev": [
    "(unique, 0xef80, 8) COPY (register, 0x28, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x28, 8) COPY (register, 0x20, 8)",
    "(unique, 0xef80, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0x0, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x18, 8) COPY (register, 0x38, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x38, 8) , (const, 0x60, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x56080, 8) INT_AND (register, 0x38, 8) , (register, 0x38, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x56080, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x1cdf, 8) , (register, 0x206, 1)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x1cd7, 8)",
    " ---  CALL (ram, 0x5148, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x60, 8)",
    "(unique, 0x5800, 8) COPY (const, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5800, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x68, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0xc000, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(unique, 0x55980, 1) INT_AND (unique, 0xc000, 1) , (const, 0x1, 1)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x55980, 1) , (const, 0x0, 1)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x55980, 1) , (const, 0x0, 1)",
    "(unique, 0x13400, 1) INT_AND (unique, 0x55980, 1) , (const, 0xff, 1)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 1)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x1cee, 8) , (register, 0x206, 1)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x78, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x1cee, 8)",
    " ---  CALL (ram, 0x50f8, 8)",
    "(register, 0x0, 8) COPY (ram, 0x3038, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0x0, 8) , (const, 0x10, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x0, 8) , (const, 0x10, 8)",
    "(register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x10, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x0, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x0, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0x5500, 8) COPY (register, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (register, 0x18, 8) , (unique, 0x5500, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x18, 8)",
    "(register, 0x38, 8) COPY (unique, 0x3100, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x1d05, 8)",
    " ---  CALL (ram, 0x50d0, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x10, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x10, 8)",
    "(unique, 0x5800, 8) COPY (const, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5800, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x56080, 8) INT_AND (register, 0x38, 8) , (register, 0x38, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x56080, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x1d1c, 8) , (register, 0x206, 1)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)",
    "(register, 0x0, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x8, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(unique, 0x23d80, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x1d1c, 8)",
    " ---  CALLIND (unique, 0x23d80, 8)",
    "(register, 0x38, 8) COPY (register, 0x18, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  BRANCH (ram, 0x50f8, 8)"
  ],
  "__ZN6spdlog5sinks15basic_file_sinkINS_7details10null_mutexEEC1ERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEEb": [
    "(unique, 0xef80, 8) COPY (register, 0x28, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x28, 8) COPY (register, 0x20, 8)",
    "(register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  BRANCH (ram, 0xaa0, 8)"
  ],
  "__ZNSt12length_errorC1B7v160006EPKc": [
    "(unique, 0xef80, 8) COPY (register, 0x28, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x28, 8) COPY (register, 0x20, 8)",
    "(unique, 0xef80, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0x0, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x18, 8) COPY (register, 0x38, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x244e, 8)",
    " ---  CALL (ram, 0x5080, 8)",
    "(register, 0x0, 8) COPY (ram, 0x50f0, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0x0, 8) , (const, 0x10, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x0, 8) , (const, 0x10, 8)",
    "(register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x10, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x0, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x0, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0x5500, 8) COPY (register, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (register, 0x18, 8) , (unique, 0x5500, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  RETURN (register, 0x288, 8)"
  ],
  "__ZNSt3__113unordered_mapIcNS_10unique_ptrIN6spdlog21custom_flag_formatterENS_14default_deleteIS3_EEEENS_4hashIcEENS_8equal_toIcEENS_9allocatorINS_4pairIKcS6_EEEEED1B7v160006Ev": [
    "(unique, 0xef80, 8) COPY (register, 0x28, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x28, 8) COPY (register, 0x20, 8)",
    "(unique, 0xef80, 8) COPY (register, 0xb8, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0xb0, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0x0, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x18, 8) COPY (register, 0x38, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x38, 8) , (const, 0x10, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0xb0, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x56080, 8) INT_AND (register, 0xb0, 8) , (register, 0xb0, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x56080, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0xcb80, 1) BOOL_NEGATE (register, 0x206, 1)",
    " ---  CBRANCH (ram, 0x2600, 8) , (unique, 0xcb80, 1)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x5800, 8) COPY (const, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (register, 0x18, 8) , (unique, 0x5800, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x56080, 8) INT_AND (register, 0x38, 8) , (register, 0x38, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x56080, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x261c, 8) , (register, 0x206, 1)",
    "(register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0xb0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0xb8, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  BRANCH (ram, 0x50f8, 8)",
    "(register, 0x38, 8) COPY (register, 0xb0, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x25f8, 8)",
    " ---  CALL (ram, 0x50f8, 8)",
    "(register, 0xb0, 8) COPY (register, 0xb8, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x56080, 8) INT_AND (register, 0xb8, 8) , (register, 0xb8, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x56080, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x25c6, 8) , (register, 0x206, 1)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (register, 0xb0, 8)",
    "(register, 0xb8, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0xb0, 8) , (const, 0x18, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0xb0, 8) , (const, 0x18, 8)",
    "(unique, 0x5800, 8) COPY (const, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5800, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x56080, 8) INT_AND (register, 0x38, 8) , (register, 0x38, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x56080, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x25f0, 8) , (register, 0x206, 1)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)",
    "(register, 0x0, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x8, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(unique, 0x23d80, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x261a, 8)",
    " ---  CALLIND (unique, 0x23d80, 8)",
    " ---  BRANCH (ram, 0x25f0, 8)",
    "(register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0xb0, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0xb8, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  RETURN (register, 0x288, 8)"
  ],
  "__ZN6spdlog7details11file_helperD2Ev": [
    "(unique, 0xef80, 8) COPY (register, 0x28, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x28, 8) COPY (register, 0x20, 8)",
    "(unique, 0xef80, 8) COPY (register, 0x18, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(unique, 0xef80, 8) COPY (register, 0x0, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x18, 8) COPY (register, 0x38, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x38, 8) , (const, 0x8, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x56080, 8) INT_AND (register, 0x38, 8) , (register, 0x38, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x56080, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x1f, 8) , (register, 0x206, 1)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (const, 0x17, 8)",
    " ---  CALL (ram, 0x5148, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x8, 8)",
    "(unique, 0x5800, 8) COPY (const, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5800, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x10, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0xc000, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(unique, 0x55980, 1) INT_AND (unique, 0xc000, 1) , (const, 0x1, 1)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x55980, 1) , (const, 0x0, 1)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x55980, 1) , (const, 0x0, 1)",
    "(unique, 0x13400, 1) INT_AND (unique, 0x55980, 1) , (const, 0xff, 1)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 1)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(unique, 0xcb80, 1) BOOL_NEGATE (register, 0x206, 1)",
    " ---  CBRANCH (ram, 0x2c, 8) , (unique, 0xcb80, 1)",
    "(register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  RETURN (register, 0x288, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x20, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x200, 1) INT_CARRY (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x20b, 1) INT_SCARRY (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x207, 1) INT_SLESS (register, 0x20, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (register, 0x20, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (register, 0x20, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    "(register, 0x18, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  BRANCH (ram, 0x50f8, 8)"
  ],
  "__ZN6spdlog5sinks9base_sinkINSt3__15mutexEE14set_formatter_ENS2_10unique_ptrINS_9formatterENS2_14default_deleteIS6_EEEE": [
    "(unique, 0xef80, 8) COPY (register, 0x28, 8)",
    "(register, 0x20, 8) INT_SUB (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 8) , (register, 0x20, 8) , (unique, 0xef80, 8)",
    "(register, 0x28, 8) COPY (register, 0x20, 8)",
    "(register, 0x0, 8) COPY (register, 0x38, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)",
    "(register, 0x8, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x5800, 8) COPY (const, 0x0, 8)",
    " ---  STORE (const, 0x1b1, 4) , (register, 0x30, 8) , (unique, 0x5800, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x38, 8) , (const, 0x10, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    "(register, 0x38, 8) COPY (unique, 0xc280, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x10, 8)",
    "(unique, 0x5500, 8) COPY (register, 0x8, 8)",
    " ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5500, 8)",
    "(register, 0x200, 1) COPY (const, 0x0, 1)",
    "(register, 0x20b, 1) COPY (const, 0x0, 1)",
    "(unique, 0x56080, 8) INT_AND (register, 0x38, 8) , (register, 0x38, 8)",
    "(register, 0x207, 1) INT_SLESS (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(register, 0x206, 1) INT_EQUAL (unique, 0x56080, 8) , (const, 0x0, 8)",
    "(unique, 0x13400, 8) INT_AND (unique, 0x56080, 8) , (const, 0xff, 8)",
    "(unique, 0x13480, 1) POPCOUNT (unique, 0x13400, 8)",
    "(unique, 0x13500, 1) INT_AND (unique, 0x13480, 1) , (const, 0x1, 1)",
    "(register, 0x202, 1) INT_EQUAL (unique, 0x13500, 1) , (const, 0x0, 1)",
    " ---  CBRANCH (ram, 0x1f65, 8) , (register, 0x206, 1)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)",
    "(register, 0x0, 8) COPY (unique, 0xc280, 8)",
    "(register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x8, 8)",
    "(unique, 0xc280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)",
    " ---  BRANCHIND (unique, 0xc280, 8)",
    "(register, 0x28, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    "(register, 0x288, 8) LOAD (const, 0x1b1, 8) , (register, 0x20, 8)",
    "(register, 0x20, 8) INT_ADD (register, 0x20, 8) , (const, 0x8, 8)",
    " ---  RETURN (register, 0x288, 8)"
  ]
}